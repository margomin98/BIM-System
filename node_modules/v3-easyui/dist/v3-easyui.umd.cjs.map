{"version":3,"file":"v3-easyui.umd.cjs","sources":["../src/components/form/rules.js","../src/components/locale/index.js","../src/components/base/DomHelper.js","../src/components/base/SlideUpDown.js","../src/components/panel/Panel.jsx","../src/components/accordion/Accordion.jsx","../src/components/accordion/AccordionPanel.jsx","../src/components/linkbutton/LinkButton.jsx","../src/components/linkbutton/ButtonGroup.jsx","../src/components/filebutton/FileButton.jsx","../src/components/pagination/PaginationButton.jsx","../src/components/pagination/PaginationList.jsx","../src/components/pagination/PaginationLink.jsx","../src/components/pagination/PaginationManual.jsx","../src/components/pagination/Pagination.jsx","../src/components/base/ListBase.js","../src/components/base/VirtualScroll.jsx","../src/components/datalist/DataList.jsx","../src/components/base/Addon.js","../src/components/base/Label.jsx","../src/components/base/FieldBase.jsx","../src/components/base/InputBase.jsx","../src/components/base/ComboBase.jsx","../src/components/base/DateHelper.js","../src/components/base/TreeHelper.js","../src/components/gridbase/GridColumn.jsx","../src/components/gridbase/GridHeaderRow.jsx","../src/components/gridbase/GridHeaderCell.jsx","../src/components/combobox/ComboBox.jsx","../src/components/gridbase/GridFilterButton.jsx","../src/components/gridbase/GridFilterCell.jsx","../src/components/gridbase/GridFilterRow.jsx","../src/components/resizable/ResizableClass.js","../src/components/resizable/Resizable.js","../src/components/gridbase/GridHeader.jsx","../src/components/gridbase/GridBody.jsx","../src/components/gridbase/GridFooterCell.jsx","../src/components/gridbase/GridFooter.jsx","../src/components/gridbase/GridView.jsx","../src/components/gridbase/GridBase.jsx","../src/components/gridbase/GridColumnGroup.jsx","../src/components/gridbase/GridEmpty.jsx","../src/components/textbox/TextBox.jsx","../src/components/gridbase/GridBodyCell.jsx","../src/components/datagrid/DataGridRowDetail.jsx","../src/components/datagrid/DataGridRowGroup.jsx","../src/components/datagrid/DataGridTable.jsx","../src/components/datagrid/DataGridBody.jsx","../src/components/datagrid/DataGridView.jsx","../src/components/datagrid/DataGrid.jsx","../src/components/base/SpinnerBase.jsx","../src/components/numberbox/NumberBox.jsx","../src/components/switchbutton/SwitchButton.jsx","../src/components/checkbox/CheckBox.jsx","../src/components/radiobutton/RadioButton.jsx","../src/components/tree/TreeNodeTitle.jsx","../src/components/form/Form.jsx","../src/components/tooltip/TooltipContent.jsx","../src/components/tooltip/Tooltip.jsx","../src/components/tree/TreeNodeEditor.jsx","../src/components/draggable/DraggableClass.js","../src/components/draggable/Draggable.js","../src/components/droppable/DroppableClass.js","../src/components/droppable/Droppable.js","../src/components/tree/TreeNodeIcon.jsx","../src/components/tree/TreeNode.jsx","../src/components/tree/Tree.jsx","../src/components/tabs/TabPanelHeader.jsx","../src/components/tabs/Tabs.jsx","../src/components/tabs/TabPanel.jsx","../src/components/timespinner/TimeSpinner.jsx","../src/components/timepicker/TimeClock.jsx","../src/components/timepicker/TimePanel.jsx","../src/components/timepicker/TimePicker.jsx","../src/components/datetimespinner/DateTimeSpinner.jsx","../src/components/layout/CollapsedPanel.jsx","../src/components/layout/Layout.jsx","../src/components/layout/LayoutPanel.jsx","../src/components/menu/Menu.jsx","../src/components/menu/SubMenu.jsx","../src/components/menu/MenuItem.jsx","../src/components/menu/MenuSep.jsx","../src/components/menubutton/MenuButton.jsx","../src/components/splitbutton/SplitButton.jsx","../src/components/passwordbox/PasswordBox.jsx","../src/components/calendar/Calendar.jsx","../src/components/datebox/DateBox.jsx","../src/components/draggable/DraggableProxy.jsx","../src/components/dialog/Dialog.jsx","../src/components/drawer/Drawer.jsx","../src/components/progressbar/ProgressBar.jsx","../src/components/treegrid/TreeGridTitle.jsx","../src/components/treegrid/TreeGridRow.jsx","../src/components/treegrid/TreeGridChildren.jsx","../src/components/treegrid/TreeGridBody.jsx","../src/components/treegrid/TreeGridView.jsx","../src/components/treegrid/TreeGrid.jsx","../src/components/slider/Slider.jsx","../src/components/tagbox/TagBox.jsx","../src/components/searchbox/SearchBox.jsx","../src/components/form/FormField.jsx","../src/components/sidemenu/SideMenuIcon.jsx","../src/components/sidemenu/SideMenuItems.jsx","../src/components/sidemenu/SideMenu.jsx","../src/components/messager/MessagerContent.jsx","../src/components/messager/MessagerDialog.jsx","../src/components/messager/Messager.jsx","../src/components/combotree/ComboTree.jsx","../src/components/combogrid/ComboGrid.jsx","../src/components/datetimebox/DateTimeBox.jsx","../src/components/base/EventHub.js","../src/index.js"],"sourcesContent":["﻿export default {\n    required: {\n        validator: (value) => {\n            if (value == null){\n                return false;\n            }\n            if (typeof value == 'boolean'){\n                return value;\n            }\n            return String(value).trim().length>0;\n        },\n        message: 'This field is required.'\n    },\n    length: {\n        validator: function(value, param){\n            var len = value ? String(value).trim().length : 0;\n            return len >= param[0] && len <= param[1];\n        },\n        message: 'Please enter a value between {0} and {1}.'\n    },\n    email: {\n        validator: (value) => {\n            return /^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/.test(value);\n        },\n        message: 'Please enter a valid email address.'\n    },\n    url: {\n        validator: (value) => {\n            return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n        },\n        message: 'Please enter a valid URL.'\n    }\n\n}","﻿let lang = null;\n\nexport const t = (path, defValue=null) => {\n    if (lang){\n        let value = lang;\n        let pp = path.split('.');\n        for(let i=0; i<pp.length; i++){\n            let key = pp[i];\n            if (value[key]){\n                value = value[key];\n            } else {\n                return defValue;\n            }\n        }\n        return value||defValue;\n    }\n    return defValue;\n};\n\nexport const use = (l) => {\n    lang = l || lang;\n};\n\nexport default {\n    use,\n    t\n};\n","﻿let guid = 1;\nexport class MyEvent{\n\tconstructor(event){\n\t\tthis.event = event;\n\t\tthis.pageX = event.pageX;\n\t\tthis.pageY = event.pageY;\n\t\tlet touchEvents = ['touchstart','touchmove','touchend','touchcancel'];\n\t\tif (touchEvents.indexOf(event.type) >= 0){\n\t\t\tlet touch = event.touches[0] || event.changedTouches[0];\n\t\t\tthis.pageX = touch.pageX;\n\t\t\tthis.pageY = touch.pageY;\n\t\t}\n\t}\n\tpreventDefault(){\n\t\tthis.event.preventDefault();\n\t}\n\tstopPropagation(){\n\t\tthis.event.stopPropagation();\n\t}\n}\nexport class DomHelper{\n    getElement(element){\n        return (typeof element === 'string') ? document.querySelector(element) : element;\n    }\n    outerWidth(element, margin){\n\t\tlet el = this.getElement(element);\n\t\tif (!el){\n\t\t\treturn 0;\n\t\t}\n        let width = el.offsetWidth;\n        if (margin){\n            let style = getComputedStyle(el);\n            width += (parseInt(style.getPropertyValue('margin-left')) || 0) + (parseInt(style.getPropertyValue('margin-right')) || 0);\n        }\n        return width;\n    }\n    outerHeight(element, margin){\n\t\tlet el = this.getElement(element);\n\t\tif (!el){\n\t\t\treturn 0;\n\t\t}\n        let height = el.offsetHeight;\n        if (margin){\n            let style = getComputedStyle(el);\n            height += (parseInt(style.getPropertyValue('margin-top')) || 0) + (parseInt(style.getPropertyValue('margin-bottom')) || 0);\n        }\n        return height;\n\t}\n\tclosest(element, selector){\n\t\tlet el = this.getElement(element);\n\t\tvar matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\t\twhile(el){\n\t\t\tif (matchesSelector.call(el, selector)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tel = el.parentElement;\n\t\t}\n\t\treturn el;\n\t}\n    isChild(element, parent){\n        let p = this.getElement(parent);\n\t\tlet el = this.getElement(element);\n\t\twhile (el && el != p){\n\t\t\tel = el.parentNode;\n\t\t}\n\t\treturn el == p;\n    }\n    offset(element){\n        let el = this.getElement(element);\n\t\tlet rect = el.getBoundingClientRect();\n\t\tlet left = rect.left;\n\t\tlet top = rect.top;\n\t\treturn {left: left+this.getScrollLeft(), top: top+this.getScrollTop()};\n    }\n\tposition(element){\n\t\tlet el = this.getElement(element);\n\t\tlet offsetParent = el.offsetParent;\n\t\tif (!offsetParent){\n\t\t\treturn {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0\n\t\t\t}\n\t\t}\n\t\twhile(offsetParent && (!/^body|html$/i.test(offsetParent.tagName))){\n\t\t\tlet style = getComputedStyle(offsetParent);\n\t\t\tif (style.getPropertyValue('position') == 'static'){\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tlet offset = this.offset(element);\n\t\tlet parentOffset = /^body|html$/i.test(offsetParent.tagName) ? { top: 0, left: 0 } : this.offset(offsetParent);\n\t\tlet style = getComputedStyle(el);\n\t\toffset.left -= parseInt(style.getPropertyValue('margin-left')) || 0;\n\t\toffset.top -= parseInt(style.getPropertyValue('margin-top')) || 0;\n\t\tstyle = getComputedStyle(offsetParent);\n\t\tparentOffset.left += parseInt(style.getPropertyValue('border-left-width')) || 0;\n\t\tparentOffset.top += parseInt(style.getPropertyValue('border-top-width')) || 0;\n\t\treturn {\n\t\t\tleft: offset.left - parentOffset.left,\n\t\t\ttop: offset.top - parentOffset.top\n\t\t};\n\t}\n\tgetScrollLeft(){\n\t\treturn Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\n\t}\n\tgetScrollTop(){\n\t\treturn Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n\t}\n\tgetViewport(){\n\t\tlet de = document.documentElement;\n\t\tlet body = document.getElementsByTagName('body')[0];\n\t\treturn {\n\t\t\twidth: window.innerWidth || de.clientWidth || body.clientWidth,\n\t\t\theight: window.innerHeight || de.clientHeight || body.clientHeight\n\t\t};\n\t}\n\tisAutoSize(value){\n\t\tlet v = String(value);\n\t\tif (v == 'auto' || v == ''){\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\ttoStyleValue(value){\n\t\tif (value == null){\n\t\t\treturn null;\n\t\t}\n\t\tlet v = String(value);\n\t\tvar endchar = v.substr(v.length-1, 1);\n\t\tif (endchar>='0' && endchar<='9'){\n\t\t\treturn v + 'px';\n\t\t} else {\n\t\t\treturn v;\n\t\t}\n\t}\n    addClass(element, className){\n        let el = this.getElement(element);\n        el.classList.add(className);\n    }\n    removeClass(element, className){\n        let el = this.getElement(element);\n        el.classList.remove(className);\n    }\n    hasClass(element, className){\n        let el = this.getElement(element);\n        return el.classList.contains(className);\n    }\n\tscrollTo(container, item){\n\t\tlet containerOffset = this.offset(container);\n\t\tlet itemOffset = this.offset(item);\n\t\tlet containerHeight = this.outerHeight(container);\n\t\tlet itemHeight = this.outerHeight(item);\n\t\tlet offsetTop = itemOffset.top - containerOffset.top;\n\t\tif (offsetTop < 0){\n\t\t\tcontainer.scrollTop = container.scrollTop + offsetTop - 1;\n\t\t} else if (offsetTop > containerHeight - itemHeight){\n\t\t\tcontainer.scrollTop = container.scrollTop - (containerHeight - itemHeight - offsetTop - 1);\n\t\t}\n\t}\n\tslideUp(element, callback){\n\t\tlet el = this.getElement(element);\n\t\tif (this.hasClass(el, 'f-hide')){\n\t\t\treturn;\n\t\t}\n\t\tlet heightStyle = el.style.height;\n\t\tlet height = this.outerHeight(el);\n\t\t// if (height<10){\n\t\t// \treturn;\n\t\t// }\n\t\tel.style.height = height+'px';\n\t\tlet onEnd = () => {\n\t\t\tthis.removeClass(el, 'f-animate');\n\t\t\tthis.removeClass(el, 'panel-noscroll');\n\t\t\tthis.addClass(el, 'f-hide');\n\t\t\tel.style.height = heightStyle;\n\t\t\tel.removeEventListener('transitionend', onEnd, false);\n\t\t\tif (callback){\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\tel.addEventListener('transitionend', onEnd, false);\n\t\tsetTimeout(() => {\n\t\t\tthis.addClass(el, 'f-animate');\n\t\t\tthis.addClass(el, 'panel-noscroll');\n\t\t\tel.style.height = '0px';\n\t\t}, 50);\n\t}\n\tslideDown(element, callback){\n\t\tlet el = this.getElement(element);\n\t\tif (!this.hasClass(el, 'f-hide')){\n\t\t\treturn;\n\t\t}\n\t\tthis.addClass(el, 'panel-noscroll');\n\t\tthis.removeClass(el, 'f-hide');\n\t\tlet heightStyle = el.style.height;\n\t\tlet height = this.outerHeight(el);\n\t\tel.style.height = '0px';\n\t\tlet onEnd = () => {\n\t\t\tthis.removeClass(el, 'f-animate');\n\t\t\tthis.removeClass(el, 'panel-noscroll');\n\t\t\tel.style.height = heightStyle;\n\t\t\tel.removeEventListener('transitionend', onEnd, false);\n\t\t\tif (callback){\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\tel.addEventListener('transitionend', onEnd, false);\n\t\tsetTimeout(() => {\n\t\t\tthis.addClass(el, 'f-animate');\n\t\t\tel.style.height = height+'px';\n\t\t},50);\n\t}\n\tnextGuid(){\n\t\treturn ++guid;\n\t}\n\tbind(element, event, handler){\n\t\thandler.guid = handler.guid || guid++;\n\t\tlet fn = (e) => {\n\t\t\tlet r = handler.call(this, e);\n\t\t\tif (r==false){\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t};\n\t\tlet el = this.getElement(element);\n\t\tel.myevents = el.myevents || {};\n\t\tif (!el.myevents[event]){\n\t\t\tel.myevents[event] = {};\n\t\t}\n\t\tel.myevents[event][String(handler.guid)] = fn;\n\t\tel.addEventListener(event, fn, false);\n\t}\n\tunbind(element, event, handler){\n\t\tlet el = this.getElement(element);\n\t\tif (event){\n\t\t\tif (handler){\n\t\t\t\tlet fn = el.myevents[event][String(handler.guid)];\n\t\t\t\tif (fn){\n\t\t\t\t\tel.removeEventListener(event, fn, false);\n\t\t\t\t}\n\t\t\t\tdelete el.myevents[event][String(handler.guid)];\n\t\t\t} else {\n\t\t\t\tfor(let guid in el.myevents[event]){\n\t\t\t\t\tlet fn = el.myevents[event][guid];\n\t\t\t\t\tel.removeEventListener(event, fn, false);\n\t\t\t\t}\n\t\t\t\tdelete el.myevents[event];\n\t\t\t}\n\t\t} else {\n\t\t\tfor(let event in el.myevents){\n\t\t\t\tfor(let guid in el.myevents[event]){\n\t\t\t\t\tlet fn = el.myevents[event][guid];\n\t\t\t\t\tel.removeEventListener(event, fn, false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete el.myevents;\n\t\t}\n\t}\n}\nexport default new DomHelper();","﻿import domHelper from './DomHelper'\n\nexport default {\n    mounted(el, binding){\n        if (binding.value.disabled){\n            return;\n        }\n        if (binding.value.collapsed){\n            el.collapsed = true;\n            domHelper.addClass(el,'f-hide');\n        }\n        el.sliding = false;\n    },\n    updated(el,binding){\n        if (binding.value.disabled){\n            return;\n        }\n        if (binding.value.collapsed == el.collapsed){\n            return;\n        }\n        if (binding.value.animate){\n            if (el.sliding){\n                return;\n            }\n            el.sliding = true;\n            if (binding.value.collapsed){\n                domHelper.slideUp(el, ()=>{\n                    el.sliding = false;\n                    el.collapsed = true;\n                });\n            } else {\n                domHelper.slideDown(el, ()=>{\n                    el.sliding = false;\n                    el.collapsed = false;\n                });\n            }\n            setTimeout(() => {\n                el.sliding = false;\n            },400);\n        } else {\n            el.collapsed = binding.value.collapsed;\n            if (el.collapsed){\n                domHelper.addClass(el,'f-hide');\n            } else {\n                domHelper.removeClass(el,'f-hide');\n            }\n        }\n    }\n}","﻿import SlideUpDown from '../base/SlideUpDown';\n\nexport default {\n    name: 'Panel',\n    directives: { SlideUpDown },\n    props: {\n        title: String,\n        iconCls: String,\n        border: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: false\n        },\n        closed: {\n            type: Boolean,\n            default: false\n        },\n        collapsed: {\n            type: Boolean,\n            default: false\n        },\n        collapsible: {\n            type: Boolean,\n            default: false\n        },\n        closable: {\n            type: Boolean,\n            default: false\n        },\n        showHeader: {\n            type: Boolean,\n            default: true\n        },\n        showFooter: {\n            type: Boolean,\n            default: true\n        },\n        expandIconCls: {\n            type: String,\n            default: 'panel-tool-expand'\n        },\n        collapseIconCls: {\n            type: String,\n            default: 'panel-tool-collapse'\n        },\n        closeIconCls: {\n            type: String,\n            default: 'panel-tool-close'\n        },\n        panelCls: String,\n        panelStyle: Object,\n        headerCls: String,\n        headerStyle: Object,\n        bodyCls: String,\n        bodyStyle: Object,\n        footerCls: String,\n        footerStyle: Object\n    },\n    data() {\n        return {\n            collapsedState: this.collapsed,\n            closedState: this.closed,\n            animateState: this.animate,\n            collapseToShrinkBody: true\n        }\n    },\n    computed: {\n        hasHeader() {\n            if (!this.showHeader) {\n                return false;\n            }\n            if (this.$slots['header'] || this.title) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        hasFooter() {\n            if (!this.showFooter) {\n                return false;\n            }\n            if (this.$slots['footer']) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        panelClasses() {\n            return ['panel f-column', this.panelCls];\n        },\n        headerClasses() {\n            return ['panel-header f-noshrink f-row f-vcenter', this.headerCls,\n                { 'panel-header-noborder': !this.border }\n            ];\n        },\n        bodyClasses() {\n            return ['panel-body f-full', this.bodyCls, {\n                'panel-body-noheader': !this.hasHeader,\n                'panel-body-nobottom': this.$slots['footer'],\n                'panel-body-noborder': !this.border\n            }];\n        },\n        footerClasses() {\n            return ['panel-footer f-noshrink', this.footerCls, {\n                'panel-footer-noborder': !this.border\n            }];\n        },\n        collapsibleClasses() {\n            return this.collapsedState ? this.expandIconCls : this.collapseIconCls;\n        },\n        closableClasses() {\n            return this.closeIconCls;\n        }\n    },\n    watch: {\n        closed(value) {\n            this.closedState = value;\n        },\n        collapsed(value) {\n            this.collapsedState = value;\n        },\n        animate(value) {\n            this.animateState = value;\n        }\n    },\n    methods: {\n        clickCollapsibleTool() {\n            this.collapsedState = !this.collapsedState;\n        },\n        clickCloseTool() {\n            this.closedState = true;\n        },\n        panelHeader() {\n            if (!this.hasHeader) {\n                return;\n            }\n            const headerTitle = () => {\n                if (this.$slots['header']) {\n                    return this.$slots['header']()\n                } else {\n                    const cls = ['panel-title'];\n                    if (this.iconCls && !this.$slots['icon']) {\n                        cls.push('panel-with-icon');\n                    }\n                    return (\n                        <div class={cls}>{this.title}</div>\n                    )\n                }\n            }\n            const headerIcon = () => {\n                if (this.iconCls && !this.$slots['icon']) {\n                    return <div class={this.iconCls + ' panel-icon'}></div>\n                } else {\n                    return null;\n                }\n            }\n            const panelTools = () => {\n                if (this.collapsible || this.closable) {\n                    return (\n                        <div class=\"panel-tool\">\n                            {this.collapsible && <a href=\"javascript:;\" class={this.collapsibleClasses} onClick={this.clickCollapsibleTool}></a>}\n                            {this.closable && <a href=\"javascript:;\" class={this.closableClasses} onClick={this.clickCloseTool}></a>}\n                        </div>\n                    )\n                }\n            }\n\n            return (\n                <div ref=\"headerRef\" class={this.headerClasses} style={this.headerStyle}>\n                    {headerTitle()}\n                    {headerIcon()}\n                    {panelTools()}\n                </div>\n            )\n        },\n        panelBody() {\n            return (\n                <div ref=\"bodyRef\" v-SlideUpDown={{ animate: this.animateState, collapsed: this.collapsedState, disabled: !this.collapseToShrinkBody }} class={this.bodyClasses} style={this.bodyStyle}>\n                    {this.$slots.default && this.$slots.default()}\n                </div>\n            )\n        },\n        panelFooter() {\n            if (!this.hasFooter) {\n                return null;\n            }\n            return (\n                <div ref=\"footerRef\" class={this.footerClasses} style={this.footerStyle}>\n                    {this.$slots['footer'] && this.$slots['footer']()}\n                </div>\n            )\n        }\n    },\n    render() {\n        if (!this.closedState) {\n            return (\n                <div class={this.panelClasses} style={this.panelStyle}>\n                    {this.panelHeader()}\n                    {this.panelBody()}\n                    {this.panelFooter()}\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿export default {\n    name: 'Accordion',\n    props: {\n        border: {\n            type: Boolean,\n            default: true\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        animate: {\n            type: Boolean,\n            default: false\n        },\n        selectedIndex: {\n            type: [Number, Array],\n            default: 0\n        }\n    },\n    data() {\n        return {\n            panels: []\n        }\n    },\n    computed: {\n        accordionClasses() {\n            return ['accordion f-column', {\n                'accordion-noborder': !this.border\n            }];\n        }\n    },\n    watch: {\n        panels() {\n            this.initPanels();\n        },\n        selectedIndex(value) {\n            let indexes = value instanceof Array ? value : [value];\n            if (this.multiple) {\n                this.panels.filter((p, index) => indexes.indexOf(index) == -1).forEach(p => p.unselect());\n                this.indexes.forEach(index => this.select(index));\n            } else {\n                this.select(indexes[0]);\n            }\n        }\n    },\n    methods: {\n        initPanels() {\n            if (this.panels.length) {\n                this.panels.forEach(p => {\n                    p.isLast = false;\n                    p.animateState = this.animate;\n                });\n                let last = this.panels[this.panels.length - 1];\n                last.isLast = true;\n                this.initSelectedPanel();\n            }\n        },\n        initSelectedPanel() {\n            let panels = this.panels.filter(p => p.selectedState);\n            if (!panels.length) {\n                if (this.multiple) {\n                    panels = this.getPanels(this.selectedIndex || []);\n                } else {\n                    panels = this.getPanels([this.selectedIndex]);\n                }\n            }\n            if (panels.length) {\n                panels.forEach(p => p.animateState = false);\n                if (this.multiple) {\n                    panels.forEach(p => p.collapsedState = false);\n                } else {\n                    panels[0].collapsedState = false;\n                    panels.filter((p, index) => index != 0).forEach(p => p.collapsedState = true);\n                }\n                this.$nextTick(() => {\n                    panels.forEach(p => p.animateState = this.animate);\n                });\n            }\n        },\n        addPanel(panel) {\n            const pp = this.panels.slice();\n            pp.push(panel);\n            this.panels = pp;\n        },\n        removePanel(panel) {\n            const pp = this.panels.slice();\n            let index = pp.indexOf(panel);\n            if (index >= 0) {\n                pp.splice(index, 1);\n                this.panels = pp;\n            }\n        },\n        getPanel(index) {\n            return this.panels[index];\n        },\n        getPanels(indexes) {\n            let panels = [];\n            for (let index of indexes) {\n                let panel = this.getPanel(index);\n                if (panel) {\n                    panels.push(panel);\n                }\n            }\n            return panels;\n        },\n        getSelectedPanels() {\n            return this.panels.filter(p => p.selectedState);\n        },\n        getSelectedPanel() {\n            let pp = this.getSelectedPanels();\n            return pp.length ? pp[0] : null;\n        },\n        getPanelIndex(panel) {\n            for (let i = 0; i < this.panels.length; i++) {\n                if (this.panels[i] == panel) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        getSelectedIndex() {\n            let panel = this.getSelectedPanel();\n            return panel ? this.getPanelIndex(panel) : -1;\n        },\n        select(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.select();\n            }\n        },\n        unselect(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.unselect();\n            }\n        }\n    },\n    render() {\n        return (\n            <div class={this.accordionClasses}>\n                {this.$slots.default()}\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Panel from '../panel/Panel'\n\nexport default {\n    name: 'AccordionPanel',\n    extends: Panel,\n    props: {\n        title: {\n            type: String,\n            default: ''\n        },\n        collapsible: {\n            type: Boolean,\n            default: true\n        },\n        expandIconCls: {\n            type: String,\n            default: 'accordion-expand'\n        },\n        collapseIconCls: {\n            type: String,\n            default: 'accordion-collapse'\n        },\n        collapsed: {\n            type: Boolean,\n            default: true\n        },\n        selected: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            isLast: false\n        }\n    },\n    computed: {\n        selectedState() {\n            return !this.collapsedState;\n        },\n        full() {\n            return this.selected;\n        },\n        panelClasses() {\n            return ['panel f-column', this.panelCls, {\n                'panel-last': this.isLast,\n                'f-full': this.selectedState,\n                'f-noshrink': !this.selectedState\n            }];\n        },\n        headerClasses() {\n            return ['accordion-header panel-header f-noshrink', this.headerCls,\n                { 'panel-header-noborder': !this.border },\n                { 'accordion-header-selected': this.selectedState }\n            ];\n        },\n        bodyClasses() {\n            return ['accordion-body panel-body f-full', this.bodyCls, {\n                'panel-body-noheader': !this.hasHeader,\n                'panel-body-nobottom': this.$slots['footer'],\n                'panel-body-noborder': !this.border\n            }];\n        }\n    },\n    mounted() {\n        this.$parent.addPanel(this);\n        this.$el.addEventListener('click', this.clickHandler, false);\n    },\n    beforeUnmount() {\n        this.$parent.removePanel(this);\n        this.$el.removeEventListener('click', this.clickHandler, false);\n    },\n    methods: {\n        select() {\n            if (this.selectedState) {\n                return;\n            }\n            if (!this.$parent.multiple) {\n                this.$parent.panels.filter(p => p != this).forEach(p => p.unselect());\n            }\n            this.collapsedState = false;\n            this.$parent.$emit('panelSelect', this);\n            this.$nextTick(() => {\n                if (window.EventHub) {\n                    window.EventHub.$emit('panelSelect', this);\n                }\n            })\n        },\n        unselect() {\n            if (!this.selectedState) {\n                return;\n            }\n            this.collapsedState = true;\n            this.$parent.$emit('panelUnselect', this);\n        },\n        clickHandler(event) {\n            let header = domHelper.closest(event.target, '.accordion-header');\n            if (header) {\n                event.stopPropagation();\n                if (this.collapsedState) {\n                    this.select();\n                } else if (this.$parent.multiple) {\n                    this.unselect();\n                }\n            }\n        }\n    }\n}","﻿import { defineComponent } from 'vue';\n\nexport default defineComponent({\n    name: 'LinkButton',\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        toggle: {\n            type: Boolean,\n            default: false\n        },\n        selected: {\n            type: Boolean,\n            default: false\n        },\n        outline: {\n            type: Boolean,\n            default: false\n        },\n        plain: {\n            type: Boolean,\n            default: false\n        },\n        text: String,\n        iconCls: String,\n        iconAlign: {\n            type: String,\n            default: 'left'\n        },\n        size: {\n            type: String,\n            default: 'small'    // or large\n        },\n        href: String,\n        btnCls: String,\n        btnStyle: Object\n    },\n    data() {\n        return {\n            selectedState: this.selected,\n            focused: false\n        }\n    },\n    computed: {\n        isEmpty() {\n            return !this.text && !this.$slots.default;\n        },\n        isDisabled() {\n            return this.disabled;\n        },\n        btnIconCls() {\n            let cls = 'l-btn-icon';\n            if (this.iconCls) {\n                cls += ' ' + this.iconCls;\n            }\n            return cls;\n        },\n        innerCls() {\n            let cls = 'l-btn f-inline-row f-content-center';\n            cls += ' l-btn-' + this.size;\n            if (this.plain) {\n                cls += ' l-btn-plain';\n            }\n            if (this.outline) {\n                cls += ' l-btn-outline';\n            }\n            if (this.selectedState) {\n                cls += this.plain ? ' l-btn-selected l-btn-plain-selected' : ' l-btn-selected';\n            }\n            if (this.isDisabled) {\n                cls += this.plain ? ' l-btn-disabled l-btn-plain-disabled' : ' l-btn-disabled';\n            }\n            if (this.focused) {\n                cls += ' l-btn-focus';\n            }\n            if (this.btnCls) {\n                cls += ' ' + this.btnCls;\n            }\n            if (this.$attrs.class) {\n                cls += ' ' + this.$attrs.class;\n            }\n            return cls;\n        },\n        btnLeftCls() {\n            let cls = 'l-btn-left';\n            if (this.iconCls) {\n                cls += ' l-btn-icon-' + this.iconAlign;\n            }\n            return cls;\n        }\n    },\n    watch: {\n        selected(value) {\n            this.selectedState = value;\n        }\n    },\n    mounted() {\n        if (this.$parent && this.$parent.$options.name == 'ButtonGroup') {\n            this.$parent.addButton(this);\n        }\n    },\n    beforeUnmount() {\n        if (this.$parent && this.$parent.$options.name == 'ButtonGroup') {\n            this.$parent.removeButton(this);\n        }\n    },\n    methods: {\n        focus() {\n            if (this.$refs.btnRef) {\n                this.$refs.btnRef.focus();\n            }\n            this.focused = true;\n        },\n        blur() {\n            if (this.$refs.btnRef) {\n                this.$refs.btnRef.blur();\n            }\n            this.focused = false;\n        },\n        onClick(event) {\n            event.stopPropagation();\n            if (this.disabled) {\n                event.preventDefault();\n                return false;\n            }\n            if (!this.href) {\n                event.preventDefault();\n            }\n            if (this.toggle) {\n                this.selectedState = !this.selectedState;\n            }\n            // this.$emit('click');\n            this.afterClick();\n        },\n        afterClick() {\n\n        },\n        renderInner() {\n            let content = '';\n            if (this.isEmpty) {\n                content = '';\n            } else if (this.text) {\n                content = this.text;\n            } else if (this.$slots.default) {\n                content = this.$slots.default();\n            }\n            return (\n                <>\n                    <span class={this.isEmpty ? 'l-btn-text l-btn-empty' : 'l-btn-text'}>\n                        {content}\n                    </span>\n                    <span class={this.btnIconCls}></span>\n                </>\n            )\n        },\n        renderOthers() {\n            return null;\n        }\n    },\n\n    render() {\n        return (\n            <a ref=\"btnRef\"\n                href={this.href || '#'}\n                class={this.innerCls}\n                style={Object.assign({}, this.$attrs.style, this.btnStyle)}\n                onClick={this.onClick}\n                onFocus={this.focus}\n                onBlur={this.blur}\n            >\n                <span class={this.btnLeftCls}>\n                    {this.renderInner()}\n                </span >\n                {this.renderOthers()}\n            </a >\n        )\n    }\n})","﻿import { defineComponent } from 'vue';\n\nexport default defineComponent({\n    name: 'ButtonGroup',\n    props: {\n        selectionMode: {\n            type: String,\n            default: 'multiple' // or single\n        }\n    },\n    data() {\n        return {\n            buttons: []\n        }\n    },\n    watch: {\n        buttons() {\n            this.initButtons();\n        }\n    },\n    methods: {\n        addButton(button) {\n            const bb = this.buttons.slice();\n            bb.push(button);\n            this.buttons = bb;\n        },\n        removeButton(button) {\n            const bb = this.buttons.slice();\n            let index = bb.indexOf(button);\n            if (index >= 0) {\n                bb.splice(index, 1);\n                this.buttons = bb;\n            }\n        },\n        initButtons() {\n            this.buttons.forEach(btn => {\n                btn.afterClick = () => {\n                    if (this.selectionMode == 'single') {\n                        this.buttons.filter((b) => b != btn).forEach((b) => {\n                            b.selectedState = false;\n                        });\n                        btn.selectedState = true;\n                    }\n                }\n            })\n        }\n    },\n    render() {\n        return (\n            <span class=\"button-group f-inline-row\">\n                {this.$slots.default()}\n            </span>\n        )\n    }\n})","﻿import LinkButton from '../linkbutton/LinkButton';\n\nwindow.FileButtonFileId = window.FileButtonFileId || 1;\n\nexport default {\n    name: 'FileButton',\n    extends: LinkButton,\n    props: {\n        href: {\n            type: String,\n            default: 'javascript:;'\n        },\n        name: {\n            type: String,\n            default: 'file'\n        },\n        accept: String,\n        capture: String,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        url: String,\n        method: {\n            type: String,\n            default: 'POST'\n        },\n        autoUpload: {\n            type: Boolean,\n            default: true\n        },\n        withCredentials: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            fileId: '_easyui_file_' + window.FileButtonFileId++,\n            files: []\n        }\n    },\n    methods: {\n        onFileSelect(event) {\n            this.files = [];\n            for (let i = 0; i < event.target.files.length; i++) {\n                this.files.push(event.target.files[i]);\n            }\n            this.$emit('select', this.files);\n            if (this.files.length && this.autoUpload) {\n                this.upload();\n            }\n        },\n        upload() {\n            if (!this.url) {\n                return;\n            }\n            let xhr = new XMLHttpRequest();\n            let formData = new FormData();\n            for (let i = 0; i < this.files.length; i++) {\n                let file = this.files[i];\n                formData.append(this.name, file, file.name);\n            }\n            xhr.upload.addEventListener('progress', (e) => {\n                if (e.lengthComputable) {\n                    let total = e.total;\n                    let position = e.loaded;\n                    let percent = Math.ceil(position * 100 / total);\n                    this.$emit('progress', percent);\n                }\n            }, false);\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState == 4) {\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        this.$emit('success', { xhr: xhr, files: this.files });\n                    } else {\n                        this.$emit('error', { xhr: xhr, files: this.files });\n                    }\n                }\n            };\n            xhr.open(this.method, this.url, true);\n            xhr.withCredentials = this.withCredentials;\n            xhr.send(formData);\n        },\n        clear() {\n            this.fileRef.nativeElement.value = '';\n        },\n        renderOthers() {\n            return (\n                <label class=\"filebox-label\" for={this.fileId}>\n                    <input type=\"file\" style=\"position:absolute;left:-500000px\"\n                        ref=\"fileRef\"\n                        id={this.fileId}\n                        disabled={this.disabled}\n                        multiple={this.multiple}\n                        accept={this.accept}\n                        capture={this.capture}\n                        onChange={this.onFileSelect}\n                    />\n                </label>\n            )\n        }\n    }\n}","﻿import LinkButton from '../linkbutton/LinkButton';\n\nexport default {\n    name: 'PaginationButton',\n    extends: LinkButton,\n    props: {\n        plain: {\n            type: Boolean,\n            default: true\n        },\n        name: String\n    },\n    computed: {\n        btnIconCls() {\n            let cls = 'l-btn-icon';\n            if (this.name == 'refresh'){\n                if (this.$parent.loading){\n                    cls += ' pagination-loading';\n                } else {\n                    cls += ' pagination-load';\n                }\n            } else {\n                cls += ' pagination-' + this.name;\n            }\n            return cls;\n        },\n        btnLeftCls() {\n            return 'l-btn-left l-btn-icon-' + this.iconAlign;\n        },\n        isDisabled() {\n            if (this.name == 'first' || this.name == 'prev'){\n                return !this.$parent.total || this.$parent.pageNumberState == 1;\n            } else if (this.name == 'next' || this.name == 'last'){\n                return this.$parent.pageNumberState == this.$parent.pageCount;\n            } else {\n                return this.disabled;\n            }\n        }\n\n    },\n    methods: {\n        onClick(event){\n            event.stopPropagation();\n            if (this.isDisabled){\n                event.preventDefault();\n                return;\n            }\n            if (!this.href){\n                event.preventDefault();\n            }\n            if (this.name == 'first'){\n                this.$parent.selectPage(1);\n            } else if (this.name == 'prev'){\n                this.$parent.selectPage(this.$parent.pageNumberState-1);\n            } else if (this.name == 'next'){\n                this.$parent.selectPage(this.$parent.pageNumberState+1);\n            } else if (this.name == 'last'){\n                this.$parent.selectPage(this.$parent.pageCount);\n            } else if (this.name == 'refresh'){\n                this.$parent.refreshPage();\n            }\n        }\n    }\n}","﻿export default {\n    name: 'PaginationList',\n    computed: {\n        pageList() {\n            return this.$parent.pageList;\n        },\n        pageSize() {\n            return this.$parent.pageSizeState;\n        }\n    },\n    methods: {\n        onChange(event) {\n            this.$parent.pageSizeState = parseInt(event.target.value);\n        }\n    },\n    render() {\n        return (\n            <select class=\"pagination-page-list\" onChange={this.onChange}>\n                {\n                    this.pageList.map(page => (\n                        <option selected={page == this.pageSize}>{page}</option>\n                    ))\n                }\n            </select>\n        )\n    }\n}","﻿import LinkButton from '../linkbutton/LinkButton';\n\nexport default {\n    name: 'PaginationLink',\n    components: {\n        LinkButton\n    },\n    computed: {\n        pages() {\n            let begin = this.$parent.pageNumberState - Math.floor(this.$parent.links / 2);\n            if (begin < 1) {\n                begin = 1;\n            }\n            let end = begin + this.$parent.links - 1;\n            if (end > this.$parent.pageCount) {\n                end = this.$parent.pageCount;\n            }\n            begin = end - this.$parent.links + 1;\n            if (begin < 1) {\n                begin = 1;\n            }\n            let pp = [];\n            for (let i = begin; i <= end; i++) {\n                pp.push(i);\n            }\n            return pp;\n        }\n    },\n    methods: {\n        onClick(page) {\n            this.$parent.selectPage(page);\n        }\n    },\n    render() {\n        return (\n            <div class=\"pagination-links f-inline-row\">\n                {\n                    this.pages.map(page => (\n                        <LinkButton\n                            class=\"pagination-link\"\n                            selected={page == this.$parent.pageNumberState}\n                            plain={true}\n                            text={String(page)}\n                            onClick={() => this.onClick(page)}\n                        />\n                    ))\n                }\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'PaginationManual',\n    props: {\n        pageNumber: Number\n    },\n    data() {\n        return {\n            value: this.pageNumber\n        }\n    },\n    watch: {\n        pageNumber() {\n            this.value = this.pageNumber;\n        }\n    },\n    methods: {\n        onBlur() {\n            const page = parseInt(this.value, 10) || 1;\n            this.value = page;\n            this.$emit('pageInput', page);\n        },\n        onKeyDown(event) {\n            if (event.keyCode === 13) {\n                this.onBlur()\n            }\n        }\n    },\n    render() {\n        return (\n            <span style=\"margin:0 6px\">\n                <span>{this.$parent.beforePageText}</span>\n                <input\n                    class=\"pagination-num\"\n                    type=\"text\"\n                    v-model={this.value}\n                    size=\"2\"\n                    onBlur={this.onBlur}\n                    onKeydown={this.onKeyDown}\n                />\n                <span>{this.$parent.afterPageInfo}</span>\n            </span>\n        )\n    }\n}","﻿import PaginationButton from './PaginationButton';\nimport PaginationList from './PaginationList';\nimport PaginationLink from './PaginationLink';\nimport PaginationManual from './PaginationManual';\n\nexport default {\n    name: 'Pagination',\n    components: {\n        PaginationButton,\n        PaginationList,\n        PaginationLink,\n        PaginationManual\n    },\n    props: {\n        pageList: {\n            type: Array,\n            default: () => [10, 20, 30, 40, 50]\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        showPageList: {\n            type: Boolean,\n            default: true\n        },\n        showPageInfo: {\n            type: Boolean,\n            default: true\n        },\n        showPageRefresh: {\n            type: Boolean,\n            default: true\n        },\n        links: {\n            type: Number,\n            default: 10\n        },\n        beforePageText: {\n            type: String,\n            default: () => window.Locale.t('Pagination.beforePageText', 'Page')\n        },\n        afterPageText: {\n            type: String,\n            default: () => window.Locale.t('Pagination.afterPageText', 'of {pages}')\n        },\n        displayMsg: {\n            type: String,\n            default: () => window.Locale.t('Pagination.displayMsg', 'Displaying {from} to {to} of {total} items')\n        },\n        layout: {\n            type: Array,\n            default: () => ['first', 'prev', 'links', 'next', 'last', 'refresh']\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        }\n    },\n    data() {\n        return {\n            pageNumberState: this.pageNumber,\n            pageSizeState: this.pageSize,\n            lastState: null,\n            pagination: this\n        }\n    },\n    computed: {\n        pageInfo() {\n            let info = this.displayMsg;\n            info = info.replace(/{from}/, String(this.total == 0 ? 0 : this.pageSizeState * (this.pageNumberState - 1) + 1));\n            info = info.replace(/{to}/, String(Math.min(this.pageSizeState * (this.pageNumberState), this.total)));\n            info = info.replace(/{total}/, String(this.total));\n            return info;\n        },\n        pageCount() {\n            return !this.total ? 0 : Math.ceil(this.total / this.pageSizeState) || 1;\n        },\n        afterPageInfo() {\n            let info = this.afterPageText;\n            info = info.replace(/{pages}/, String(this.pageCount));\n            return info;\n        }\n    },\n    created() {\n        this._adjustPage();\n        this.lastState = {\n            pageNumber: this.pageNumberState,\n            pageSize: this.pageSizeState\n        };\n    },\n    watch: {\n        pageNumber(value) {\n            this.pageNumberState = value;\n        },\n        pageSize(value) {\n            this.pageSizeState = value;\n        },\n        pageNumberState() {\n            this._adjustPage();\n        },\n        pageSizeState() {\n            this._adjustPage();\n        },\n        total() {\n            this._adjustPage();\n        }\n    },\n    methods: {\n        _isButton(name) {\n            let aa = ['first', 'prev', 'next', 'last', 'refresh'];\n            let index = aa.indexOf(name);\n            return index >= 0;\n        },\n        _adjustPage() {\n            if (this.pageNumberState < 1) {\n                this.pageNumberState = 1;\n            }\n            if (this.pageNumberState > this.pageCount) {\n                this.pageNumberState = this.pageCount;\n            }\n            if (this.total == 0) {\n                this.pageNumberState = 0;\n                if (this.lastState) {\n                    this.lastState.pageNumber = 1;\n                }\n            }\n            // if (this.lastState){\n            //     let state = {pageNumber: this.pageNumberState, pageSize: this.pageSizeState};\n            //     if (this.pageNumberState != this.lastState.pageNumber || this.pageSizeState != this.lastState.pageSize){\n            //         this.lastState = state;\n            //         this.$emit('pageChange', this.lastState);\n            //     }\n            // }\n            if (this.lastState) {\n                let state = { pageNumber: this.pageNumberState || 1, pageSize: this.pageSizeState };\n                if (state.pageNumber != this.lastState.pageNumber || state.pageSize != this.lastState.pageSize) {\n                    this.lastState = state;\n                    this.$emit('pageChange', this.lastState);\n                }\n            }\n        },\n        selectPage(page) {\n            this.pageNumberState = page;\n            this._adjustPage();\n        },\n        refreshPage() {\n            let state = Object.assign({ refresh: true }, this.lastState);\n            if (state.pageNumber <= 0) {\n                state.pageNumber = 1;\n            }\n            this.$emit('pageChange', state);\n        }\n    },\n    render() {\n        return (\n            <div class=\"pagination f-row f-content-center\">\n                {\n                    this.layout.map(name => (\n                        <>\n                            {name == 'list' && <PaginationList></PaginationList>}\n                            {name == 'links' && <PaginationLink></PaginationLink>}\n                            {name == 'manual' && <PaginationManual pageNumber={this.pageNumberState} onPageInput={(page) => this.pageNumberState = page}></PaginationManual>}\n                            {this._isButton(name) && <PaginationButton name={name}></PaginationButton>}\n                            {name == 'sep' && <div class=\"pagination-btn-separator\"></div>}\n                            {\n                                name == 'info' &&\n                                <div class=\"f-full\">\n                                    <div class=\"pagination-info\">{this.pageInfo}</div>\n                                </div>\n                            }\n                            {\n                                name == 'tpl' && this.$slots.default && this.$slots.default(this.pagination)\n                            }\n                        </>\n                    ))\n                }\n            </div >\n        )\n    }\n}","﻿export const DEFAULT_FILTER_OPERATORS = {\n    nofilter: {\n        text: 'No Filter',\n        isMatch: () => {\n            return true;\n        }\n    },\n    contains: {\n        text: 'Contains',\n        isMatch: function(source, value){\n            source = String(source);\n            value = String(value);\n            return source.toLowerCase().indexOf(value.toLowerCase()) >= 0;\n        }\n    },\n    equal: {\n        text: 'Equal',\n        isMatch: function(source, value){\n            return source == value;\n        }\n    },\n    notequal: {\n        text: 'Not Equal',\n        isMatch: function(source, value){\n            return source != value;\n        }\n    },\n    beginwith: {\n        text: 'Begin With',\n        isMatch: function(source, value){\n            source = String(source);\n            value = String(value);\n            return source.toLowerCase().indexOf(value.toLowerCase()) == 0;\n        }\n    },\n    endwith: {\n        text: 'End With',\n        isMatch: function(source, value){\n            source = String(source);\n            value = String(value);\n            return source.toLowerCase().indexOf(value.toLowerCase(), source.length - value.length) !== -1;\n        }\n    },\n    less: {\n        text: 'Less',\n        isMatch: function(source, value){\n            return source < value;\n        }\n    },\n    lessorequal: {\n        text: 'Less Or Equal',\n        isMatch: function(source, value){\n            return source <= value;\n        }\n    },\n    greater: {\n        text: 'Greater',\n        isMatch: function(source, value){\n            return source > value;\n        }\n    },\n    greaterorequal: {\n        text: 'Greater Or Equal',\n        isMatch: function(source, value){\n            return source >= value;\n        }\n    }\n\n};\n\nexport default {\n    name: 'ListBase',\n    template: '',\n    props: {\n        border: {\n            type: Boolean,\n            default: true\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        loadMsg: {\n            type: String,\n            default: () => window.Locale.t('ListBase.loadMsg', 'Processing, please wait ...')\n        },\n        emptyMsg: String,\n        pagination: {\n            type: Boolean,\n            default: false\n        },\n        pagePosition: {\n            type: String,\n            default: 'bottom'\n        },\n        pageOptions: Object,\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        rowHeight: {\n            type: Number,\n            default: 32\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        pageLayout: {\n            type: Array,\n            default: () => ['first','prev','links','next','last','refresh']\n        },\n        pageList: {\n            type: Array,\n            default: () => [10,20,30,40,50]\n        },\n        pageLinks: {\n            type: Number,\n            default: 10\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        idField: String,\n        selectionMode: String,\n        selection: {\n            type: [Object,Array],\n            default: null\n        },\n        filterable: {\n            type: Boolean,\n            default: false\n        },\n        filterRules: {\n            type: Array,\n            default: () => []\n        },\n        filterDelay: {\n            type: Number,\n            default: 400\n        },\n        filterMatchingType: {\n            type: String,\n            default: 'all'\n        },\n        filterPosition: {\n            type: String,\n            default: 'bottom'\n        },\n        filterBtnPosition: {\n            type: String,\n            default: 'right'\n        },\n        filterOperators: {\n            type: Object,\n            default: () => DEFAULT_FILTER_OPERATORS\n        },\n        data: {\n            type: Array,\n            default: () => []\n        }\n    },\n    computed: {\n        selectionValue() {\n            if (this.selectionModeState == 'single'){\n                return this.selectedRows[0] || null;\n            } else if (this.selectionModeState == 'multiple'){\n                return this.selectedRows;\n            } else if (this.selectionModeState == 'cell'){\n                return this.selectedCells[0] || null;\n            } else if (this.selectionModeState == 'multicell'){\n                return this.selectedCells;\n            } else {\n                return null;\n            }\n        }\n    },\n    data() {\n        return {\n            totalState: this.total,\n            pageNumberState: this.pageNumber,\n            pageSizeState: this.pageSize,\n            pageState: null,\n            highlightRow: null,\n            highlightCell: null,\n            selectionModeState: this.selectionMode,\n            selectedRows: [],\n            selectedCells: [],\n            rows: [],\n            innerData: [],\n            filteredData: []\n        }\n    },\n    watch: {\n        total(value){\n            this.totalState = value;\n        },\n        pageNumber(value){\n            this.pageNumberState = value;\n        },\n        pageSize(value){\n            this.pageSizeState = value;\n        },\n        data(value) {\n            this.$nextTick(() => this.setData(value));\n        },\n        selection(value){\n            this.setSelectionValue(value);\n        },\n        selectionMode(value){\n            this.selectionModeState = value;\n        }\n    },\n    mounted(){\n        this.setData(this.data);\n        this.setSelectionValue(this.selection);\n    },\n    methods: {\n        afterSelectionChange(){},\n        setData(value) {\n            if (value == null){\n                value = [];\n            }\n            this.innerData = Object.assign([],value);\n            if (!this.lazy){\n                this.sortData();\n                this.filteredData = this.filterData(this.innerData);\n            } else {\n                this.filteredData = this.innerData;\n            }\n            this.setGroupData();\n            if (this.pagination){\n                if (this.lazy){\n                    if (this.filteredData.length){\n                        this.rows = this.filteredData.slice(0, this.pageSizeState);\n                    } else {\n                        if (this.totalState){\n                            this.$emit('pageChange', {\n                                pageNumber: this.pageNumberState,\n                                pageSize: this.pageSizeState\n                            });\n                        } else {\n                            this.rows = [];\n                        }\n                    }\n                } else {\n                    this.totalState = this.filteredData.length;\n                    // let start = (this.pageNumberState - 1) * this.pageSizeState;\n                    // this.rows = this.filteredData.slice(start, start + this.pageSizeState);\n                    this.setPageData();\n                }\n            } else {\n                this.rows = this.filteredData;\n            }\n        },\n        setGroupData(){\n\n        },\n        setSelectionValue(value){\n            if (value == null){\n                this.selectedRows = [];\n                this.selectedCells = [];\n                return;\n            }\n            if (this.selectionModeState == 'single'){\n                this.selectedRows = [value];\n            } else if (this.selectionModeState == 'multiple'){\n                this.selectedRows = value;\n            } else if (this.selectionModeState == 'cell'){\n                this.selectedCells = [value];\n            } else if (this.selectionModeState == 'multicell'){\n                this.selectedCells = value;\n            }\n        },\n        sortData() {\n\n        },\n        filterData(data) {\n            let isMatch = (row) => {\n                let rules = this.filterRules;\n                if (!rules.length){\n                    return true;\n                }\n                for(let i=0; i<rules.length; i++){\n                    let rule = rules[i];\n                    let source = row[rule.field];\n                    if (source == null){\n                        source = '';\n                    }\n                    let op = this.filterOperators[rule.op];\n                    let matched = op.isMatch(source, rule.value);\n                    if (this.filterMatchingType == 'any'){\n                        if (matched) {\n                            return true;\n                        }\n                    } else {\n                        if (!matched){\n                            return false;\n                        }\n                    }\n                }\n                return this.filterMatchingType == 'all';\n            };\n            let rows = data.filter(row => isMatch(row));\n            return rows;\n    \n        },\n        doFilter(rule) {\n            if (rule){\n                if (rule.value == null || rule.value == ''){\n                    this.removeFilterRule(rule.field);\n                } else {\n                    this.addFilterRule(rule);\n                }\n            }\n            // this.setData(this.data);\n            this.setData(this.innerData);\n            this.$emit('filterChange', this.filterRules);\n        },\n        doEnter() {\n            if (this.isCellSelectionMode()){\n                if (this.highlightCell){\n                    if (this.selectionModeState == 'cell'){\n                        this.selectCell(this.highlightCell.row, this.highlightCell.column);\n                    } else if (this.selectionModeState == 'multicell'){\n                        if (this.isSelected(this.highlightCell.row, this.highlightCell.column)){\n                            this.unselectCell(this.highlightCell.row, this.highlightCell.column);\n                        } else {\n                            this.selectCell(this.highlightCell.row, this.highlightCell.column);\n                        }\n                    }\n                }\n            } else {\n                if (this.highlightRow){\n                    if (this.selectionModeState == 'single'){\n                        this.selectRow(this.highlightRow);\n                    } else if (this.selectionModeState == 'multiple'){\n                        if (this.isSelected(this.highlightRow)){\n                            this.unselectRow(this.highlightRow);\n                        } else {\n                            this.selectRow(this.highlightRow);\n                        }\n                    }\n                }\n            }\n        },\n        getSelectedIndex(row){\n            if (this.idField){\n                for(let i=0; i<this.selectedRows.length; i++){\n                    if (this.selectedRows[i][this.idField] == row[this.idField]){\n                        // this.selectedRows.splice(i, 1, row);\n                        this.selectedRows[i] = row;\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return this.selectedRows.indexOf(row);\n            }\n        },\n        getSelectedCellIndex(row, column){\n            for(let i=0; i<this.selectedCells.length; i++){\n                let cell = this.selectedCells[i];\n                if (cell.column == column){\n                    if (this.idField){\n                        if (cell.row[this.idField] == row[this.idField]){\n                            return i;\n                        }\n                    } else if (cell.row == row){\n                        return i;\n                    }\n                }\n            }\n            return -1;\n        },\n        isCellSelectionMode() {\n            if (this.selectionModeState == 'cell' || this.selectionModeState == 'multicell'){\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isHighlighted(row, column = null) {\n            if (this.isCellSelectionMode()){\n                if (this.highlightCell && this.highlightCell.row == row && this.highlightCell.column == column){\n                    return true;\n                }\n            } else if (this.highlightRow == row){\n                return true;\n            }\n            return false;\n        },\n        isSelected(row, column = null){\n            if (this.isCellSelectionMode()){\n                let index = this.getSelectedCellIndex(row, column);\n                return index != -1;\n            } else {\n                let index = this.getSelectedIndex(row);\n                return index != -1;\n            }\n        },\n        selectRow(row){\n            if (this.isCellSelectionMode()){\n                return;\n            }\n            if (!this.isSelected(row)){\n                if (this.selectionModeState == 'single'){\n                    if (this.selectionValue){\n                        this.$emit('rowUnselect', this.selectionValue);\n                    }\n                    this.selectedRows = [row];\n                } else if (this.selectionModeState == 'multiple'){\n                    this.selectedRows.push(row);\n                }\n                this.$emit('rowSelect', row);\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n    \n        unselectRow(row){\n            if (this.isCellSelectionMode()){\n                return;\n            }\n            let index = this.getSelectedIndex(row);\n            if (index >= 0){\n                this.selectedRows.splice(index, 1);\n                this.$emit('rowUnselect', row);\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n        selectCell(row, column){\n            if (!this.isCellSelectionMode()){\n                return;\n            }\n            if (!this.isSelected(row, column)){\n                if (this.selectionModeState == 'cell'){\n                    if (this.selectionValue){\n                        this.$emit('cellUnselect', this.selectionValue);\n                    }\n                    this.selectedCells = [{row:row,column:column}];\n                } else if (this.selectionModeState == 'multicell'){\n                    this.selectedCells.push({row:row,column:column});\n                }\n                this.$emit('cellSelect', {row:row,column:column});\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n    \n        unselectCell(row, column){\n            if (!this.isCellSelectionMode()){\n                return;\n            }\n            let index = this.getSelectedCellIndex(row, column);\n            if (index >= 0){\n                this.selectedCells.splice(index, 1);\n                this.$emit('cellUnselect', {row:row,column:column});\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n        clearSelections() {\n            if (this.isCellSelectionMode()){\n                if (this.selectedCells.length){\n                    this.selectedCells = [];\n                    this.$emit('selectionChange', this.selectionValue);\n                    this.afterSelectionChange(this.selectionValue);\n                }\n            } else {\n                if (this.selectedRows.length){\n                    this.selectedRows = [];\n                    this.$emit('selectionChange', this.selectionValue);\n                    this.afterSelectionChange(this.selectionValue);\n                }\n            }\n        },\n        navRow(step) {\n            if (!this.rows.length){\n                return;\n            }\n            let index = this.rows.indexOf(this.highlightRow);\n            if (index == -1){\n                index = 0;\n            } else {\n                index += step;\n                if (index >= this.rows.length){\n                    index = this.rows.length - 1;\n                } else if (index < 0){\n                    index = 0;\n                }\n            }\n            this.highlightRow = this.rows[index];\n        },\n        getFilterRuleIndex(field) {\n            for(let i=0; i<this.filterRules.length; i++){\n                if (this.filterRules[i].field == field){\n                    return i;\n                }\n            }\n            return -1;\n        },\n        getFilterRule(field) {\n            let index = this.getFilterRuleIndex(field);\n            if (index != -1){\n                return this.filterRules[index];\n            } else {\n                return null;\n            }\n        },\n        addFilterRule(rule) {\n            let index = this.getFilterRuleIndex(rule.field);\n            if (index != -1){\n                Object.assign(this.filterRules[index], rule);\n            } else {\n                this.filterRules.push(rule);\n            }\n        },\n    \n        removeFilterRule(field) {\n            let index = this.getFilterRuleIndex(field);\n            if (index != -1){\n                this.filterRules.splice(index, 1);\n            }\n        },\n\n        setPageData(){\n            let start = (this.pageNumberState - 1) * this.pageSizeState;\n            this.rows = this.filteredData.slice(start, start + (+this.pageSizeState));\n        },\n\n        onPageChange(event){\n            if (this.pageState != null && !event.refresh){\n                if (this.pageState.pageNumber == event.pageNumber && this.pageState.pageSize == event.pageSize){\n                    return;\n                }\n            }\n            this.pageState = event;\n            this.pageNumberState = event.pageNumber;\n            this.pageSizeState = event.pageSize\n            if (!this.lazy){\n                // let start = (this.pageNumberState - 1) * this.pageSizeState;\n                // this.rows = this.filteredData.slice(start, start + (+this.pageSizeState));\n                this.setPageData();\n            }\n            this.$emit('pageChange', Object.assign(event, {\n                filterRules: this.filterRules\n            }));\n        },\n        onVirtualPageChange(event){\n            this.pageNumberState = event.pageNumber;\n            this.pageSizeState = event.pageSize\n            this.$emit('pageChange', Object.assign(event, {\n                filterRules: this.filterRules\n            }));\n        },\n        onRowClick(row){\n            this.$emit('rowClick', row);\n            if (this.selectionModeState == 'single'){\n                this.selectRow(row);\n            } else if (this.selectionModeState == 'multiple') {\n                if (this.isSelected(row)){\n                    this.unselectRow(row);\n                } else {\n                    this.selectRow(row);\n                }\n            }\n        },\n        onCellClick(row, column){\n            this.$emit('cellClick', {row:row, column:column});\n            if (this.selectionModeState == 'cell'){\n                this.selectCell(row, column);\n            } else if (this.selectionModeState == 'multicell'){\n                if (this.isSelected(row, column)){\n                    this.unselectCell(row, column);\n                } else {\n                    this.selectCell(row, column);\n                }\n            }\n        }\n                        \n    }\n}","﻿import domHelper from './DomHelper';\n\nexport default {\n    name: 'VirtualScroll',\n    props: {\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        rowHeight: {\n            type: Number,\n            default: 32\n        },\n        maxDivHeight: {\n            type: Number,\n            default: 10000000\n        },\n        maxVisibleHeight: {\n            type: Number,\n            default: 15000000\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        data: {\n            type: Array,\n            default: () => []\n        },\n        scrollPosition: Object\n    },\n    data() {\n        return {\n            innerData: [],\n            items: [],\n            waitingPage: 1,\n            fetchingPage: 0,\n            startIndex: 0,\n            deltaTopHeight: 0,\n            topHeights: [],\n            bottomHeights: [],\n            isUpdating: false,\n            isNewFetching: false,\n            totalState: this.total,\n            pageNumberState: this.pageNumber,\n            scrollPositionState: this.scrollPosition\n        }\n    },\n    watch: {\n        total(value) {\n            this.totalState = value;\n        },\n        pageNumber(value) {\n            this.pageNumberState = value;\n        },\n        data(value) {\n            value = value || [];\n            if (!value.length) {\n                if (!this.totalState) {\n                    this.clear();\n                    return;\n                }\n            }\n            if (this.scrollPositionState) {\n                this.scrollPosition.innerData = value;\n                return;\n            }\n            this.$nextTick(() => {\n                this.setData(value);\n                setTimeout(() => {\n                    this.scrolling();\n                }, 20)\n            });\n        }\n    },\n    mounted() {\n        this.$nextTick(() => {\n            // this.setData(this.data);\n            // this.isNewFetching = true;\n\n            if (this.scrollPositionState) {\n                this.scrollState(this.scrollPositionState);\n                this.scrollPositionState = null;\n            } else {\n                this.setData(this.data);\n                this.isNewFetching = true;\n            }\n        });\n    },\n    methods: {\n        scrollTop(value) {\n            if (value != undefined) {\n                this.$refs.bodyRef.scrollTop = value;\n            } else {\n                return this.$refs.bodyRef.scrollTop;\n            }\n        },\n        relativeScrollTop() {\n            return this.$refs.bodyRef.scrollTop - this.startIndex * this.rowHeight + this.deltaTopHeight;\n        },\n        scrollbarWidth() {\n            return domHelper.outerWidth(this.$refs.bodyRef) - domHelper.outerWidth(this.$refs.contentRef);\n        },\n        scrollState(value) {\n            if (value != undefined) {\n                this.topHeights = value.topHeights;\n                this.bottomHeights = value.bottomHeights;\n                this.deltaTopHeight = value.deltaTopHeight;\n                this.startIndex = value.startIndex;\n                this.innerData = value.innerData || [];\n                this.items = value.items || [];\n                this.$emit('update', this.items);\n                this.$nextTick(() => {\n                    this.scrollTop(value.scrollTop);\n                    this.refresh();\n                    this.scrolling();\n                });\n            } else {\n                return {\n                    topHeights: Object.assign([], this.topHeights),\n                    bottomHeights: Object.assign([], this.bottomHeights),\n                    deltaTopHeight: this.deltaTopHeight,\n                    startIndex: this.startIndex,\n                    scrollTop: this.scrollTop(),\n                    items: Object.assign([], this.items),\n                    innerData: Object.assign([], this.innerData)\n                };\n            }\n        },\n        clear() {\n            this.topHeights = [];\n            this.bottomHeights = [];\n            this.deltaTopHeight = 0;\n            this.startIndex = 0;\n            this.scrollTop(0);\n            this.items = [];\n            this.innerData = [];\n            this.populate();\n        },\n        onScroll(event) {\n            event.stopPropagation();\n            if (!this.isUpdating) {\n                this.scrolling();\n            }\n            this.$emit('bodyScroll', {\n                left: this.$refs.bodyRef.scrollLeft,\n                top: this.scrollTop(),\n                relativeTop: this.relativeScrollTop(),\n                items: this.items\n            });\n        },\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            // this.innerData = value;\n            this.innerData = Object.assign([], value);\n            this.fetchingPage = 0;\n            if (this.lazy) {\n                if (this.innerData.length) {\n                    this.waitingPage = this.pageNumberState;\n                    this.loadPage(this.innerData);\n                } else {\n                    if (this.totalState > 0) {\n                        this.fetchPage(this.waitingPage);\n                    } else {\n                        this.loadPage(this.innerData);\n                    }\n                }\n            } else {\n                this.totalState = this.innerData.length;\n                this.pageNumberState = 1;\n                this.waitingPage = 1;\n                this.startIndex = 0;\n                this.loadPage(this.innerData);\n            }\n        },\n        scrolling() {\n            this.isNewFetching = false;\n            let bodyHeight = domHelper.outerHeight(this.$refs.bodyRef);\n            let bodyOffset = domHelper.offset(this.$refs.bodyRef);\n            let contentOffset = domHelper.offset(this.$refs.contentRef);\n            let top = contentOffset.top - bodyOffset.top;\n            let bottom = top + domHelper.outerHeight(this.$refs.contentRef);\n\n            if (top > bodyHeight || bottom < 0) {\n                let scrollTop = this.$refs.bodyRef.scrollTop;\n                let index = Math.floor((scrollTop + this.deltaTopHeight) / this.rowHeight);\n                let page = Math.floor(index / this.pageSize) + 1;\n                if (page > 0) {\n                    this.isNewFetching = true;\n                    this.startIndex = (page - 1) * this.pageSize;\n                    this.waitingPage = page;\n                    this.items = [];\n                    this.fetchPage(this.waitingPage);\n                }\n            } else if (top > 0) {\n                if (this.startIndex == 0) {\n                    return;\n                }\n                let page = Math.floor(this.startIndex / this.pageSize) + 1;\n                this.waitingPage = page - 1;\n                this.fetchPage(this.waitingPage);\n            } else if (bottom < bodyHeight) {\n                if (this.startIndex + this.items.length >= this.totalState) {\n                    return;\n                }\n                let page = Math.floor(this.startIndex / this.pageSize) + 1;\n                if (this.items.length >= this.pageSize * 2) {\n                    this.waitingPage = page + 2;\n                } else {\n                    this.waitingPage = page + 1;\n                }\n                this.fetchPage(this.waitingPage);\n            }\n        },\n        populate() {\n            if (!this.$refs.bodyRef) {\n                return;\n            }\n            this.isUpdating = true;\n\n            let bodyHeight = domHelper.outerHeight(this.$refs.bodyRef);\n            let topHeight = this.startIndex * this.rowHeight;\n            let bottomHeight = this.totalState * this.rowHeight - topHeight - this.items.length * this.rowHeight;\n            this.topHeights = this.splitHeights(topHeight);\n            this.bottomHeights = this.splitHeights(bottomHeight);\n            let spos = this.$refs.bodyRef.scrollTop + this.deltaTopHeight;\n            if (topHeight > this.maxVisibleHeight) {\n                this.deltaTopHeight = topHeight - this.maxVisibleHeight;\n                this.topHeights = this.splitHeights(this.maxVisibleHeight);\n            } else {\n                this.deltaTopHeight = 0;\n            }\n            if (bottomHeight > this.maxVisibleHeight) {\n                this.bottomHeights = this.splitHeights(this.maxVisibleHeight);\n            } else if (bottomHeight == 0) {\n                let lastCount = this.totalState % this.pageSize;\n                if (lastCount) {\n                    this.bottomHeights = this.splitHeights(bodyHeight - lastCount * this.rowHeight);\n                }\n            }\n            this.$refs.bodyRef.scrollTop = spos - this.deltaTopHeight;\n            this.$emit('update', this.items);\n            this.$nextTick(() => {\n                if (this.$refs.bodyRef) {\n                    this.$refs.bodyRef.scrollTop = spos - this.deltaTopHeight;\n                    if (this.isNewFetching) {\n                        this.scrolling();\n                    }\n                    this.isUpdating = false;\n                }\n                // this.scrolling();\n            });\n        },\n        splitHeights(height) {\n            let count = Math.floor(height / this.maxDivHeight);\n            let leftHeight = height - this.maxDivHeight * count;\n            if (height < 0) {\n                leftHeight = 0;\n            }\n            let heights = [];\n            for (let i = 0; i < count; i++) {\n                heights.push(this.maxDivHeight);\n            }\n            heights.push(leftHeight);\n            return heights;\n        },\n        loadPage(items) {\n            if (this.pageNumberState != this.waitingPage) {\n                return;\n            }\n            items = items.slice(0, this.pageSize);\n            let page = Math.floor(this.startIndex / this.pageSize) + 1;\n            if (page == this.waitingPage) {\n                this.items = items;\n                this.populate();\n            } else if (this.waitingPage == page + 1) {\n                this.items = this.items.slice(0, this.pageSize).concat(items);\n                this.populate();\n            } else if (this.waitingPage == page + 2) {\n                this.startIndex += this.pageSize;\n                this.items = this.items.slice(this.pageSize, this.pageSize * 2).concat(items);\n                this.populate();\n            } else if (this.waitingPage == page - 1) {\n                this.startIndex -= this.pageSize;\n                this.items = items.concat(this.items.slice(0, this.pageSize));\n                this.populate();\n            } else {\n                this.startIndex = (this.pageNumberState - 1) * this.pageSize;\n                this.items = items;\n                this.populate();\n            }\n        },\n        fetchPage(page) {\n            if (this.fetchingPage != page) {\n                this.fetchingPage = page;\n                if (!this.lazy) {\n                    let start = (page - 1) * this.pageSize;\n                    let items = this.innerData.slice(start, start + this.pageSize);\n                    this.pageNumberState = page;\n                    this.loadPage(items);\n                }\n                this.$emit('pageChange', {\n                    pageNumber: page,\n                    pageSize: this.pageSize\n                });\n            }\n        },\n        gotoPage(page) {\n            this.startIndex = (page - 1) * this.pageSize;\n            this.waitingPage = page;\n            this.populate();\n            this.$nextTick(() => {\n                this.$refs.bodyRef.scrollTop = this.startIndex * this.rowHeight - this.deltaTopHeight;\n                this.fetchPage(page);\n            });\n        },\n        refresh() {\n            let page = Math.floor(this.startIndex / this.pageSize) + 1;\n            this.waitingPage = page;\n            this.fetchingPage = 0;\n            this.fetchPage(page);\n        }\n\n    },\n    render() {\n        return (\n            <div class=\"f-column panel-noscroll\">\n                <div ref=\"bodyRef\" class=\"scroll-body f-column f-full\" onScroll={this.onScroll}>\n                    <div ref=\"topRef\" class=\"scroll-top f-noshrink\">\n                        {\n                            this.topHeights.map(h => (\n                                <div style={{ height: h + 'px' }}></div>\n                            ))\n                        }\n                    </div>\n                    <div ref=\"contentRef\" class=\"scroll-content f-noshrink\">\n                        {this.$slots.default()}\n                    </div>\n                    <div ref=\"bottomRef\" class=\"scroll-bottom f-noshrink\">\n                        {\n                            this.bottomHeights.map(h => (\n                                <div style={{ height: h + 'px' }}></div>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\nimport ListBase from '../base/ListBase';\nimport VirtualScroll from '../base/VirtualScroll';\nimport { Pagination } from '../pagination';\n\nexport default defineComponent({\n    name: 'DataList',\n    extends: ListBase,\n    components: { VirtualScroll },\n    props: {\n        itemStyle: Object,\n        itemCls: String,\n        hoverCls: {\n            type: String,\n            default: 'datagrid-row-over'\n        },\n        selectedCls: {\n            type: String,\n            default: 'datagrid-row-selected'\n        },\n        scrollPosition: [Number, Object]\n    },\n    computed: {\n        innerClasses() {\n            return ['f-full', {\n                'f-column': this.virtualScroll\n            }];\n        },\n        innerStyle() {\n            return { overflow: this.virtualScroll ? 'hidden' : 'auto' };\n        },\n        virtualItemStyle() {\n            return Object.assign({}, this.itemStyle, { height: this.rowHeight + 'px' });\n        }\n    },\n    data() {\n        return {\n            vrows: [],\n            scrollPositionState: this.scrollPosition\n        }\n    },\n    mounted() {\n        if (this.$refs.innerRef && this.scrollPositionState) {\n            this.$nextTick(() => {\n                this.scrollTop(this.scrollPositionState);\n                this.scrollPositionState = null;\n            });\n        }\n    },\n    methods: {\n        getItemClass(row) {\n            let cc = [];\n            if (this.itemCls) {\n                cc.push(this.itemCls);\n            }\n            if (this.hoverCls && this.highlightRow == row) {\n                cc.push(this.hoverCls);\n            }\n            if (this.selectedCls && this.isSelected(row)) {\n                cc.push(this.selectedCls);\n            }\n            return cc.length ? cc.join(' ') : null;\n        },\n        getRowIndex(index) {\n            if (this.$refs.vscrollRef) {\n                return index + this.$refs.vscrollRef.startIndex;\n            } else if (this.pagination) {\n                return index + (this.pageNumberState - 1) * this.pageSizeState;\n            } else {\n                return index;\n            }\n        },\n        scrollTop(value) {\n            if (value != undefined) {\n                if (this.$refs.vscrollRef) {\n                    // this.$refs.vscrollRef.scrollTop(value);\n                    this.$refs.vscrollRef.scrollState(value);\n                } else {\n                    this.$refs.innerRef.scrollTop = value;\n                }\n            } else {\n                if (this.$refs.vscrollRef) {\n                    // return this.$refs.vscrollRef.scrollTop();\n                    return this.$refs.vscrollRef.scrollState();\n                } else {\n                    return this.$refs.innerRef.scrollTop;\n                }\n            }\n        },\n        navRow(step) {\n            ListBase.methods.navRow.call(this, step);\n            let index = this.rows.indexOf(this.highlightRow);\n            if (index >= 0) {\n                this.$nextTick(() => {\n                    let container = this.$refs.vscrollRef ? this.$refs.vscrollRef.$refs.bodyRef : this.$refs.innerRef;\n                    let item = container.querySelector('.' + this.hoverCls);\n                    if (item) {\n                        domHelper.scrollTo(container, item);\n                    }\n                })\n            }\n        },\n        highlightFirstRow() {\n            this.highlightRow = this.rows.length ? this.rows[0] : null;\n            this.navRow(0);\n        },\n        scrollToSelectedRow() {\n            let container = this.$refs.vscrollRef ? this.$refs.vscrollRef.$refs.bodyRef : this.$refs.innerRef;\n            let item = container.querySelector('.' + this.selectedCls);\n            if (item) {\n                domHelper.scrollTo(container, item);\n            }\n        },\n        renderPagination(position) {\n            if (!this.pagination) {\n                return null;\n            }\n            if (this.pagePosition != 'both' && this.pagePosition != position) {\n                return null;\n            }\n            let ref = 'pageTopRef';\n            let cls = 'datagrid-pager f-noshrink';\n            if (this.pagePosition == 'top') {\n                cls += ' datagrid-pager-top';\n            } else {\n                ref = 'pageBottomRef';\n            }\n            return (\n                <Pagination ref={ref} class={cls}\n                    total={this.totalState}\n                    pageSize={this.pageSizeState}\n                    pageNumber={this.pageNumberState}\n                    loading={this.loading}\n                    onPageChange={this.onPageChange}>\n                </Pagination>\n            )\n        },\n        renderLoading() {\n            if (!this.loading) {\n                return null;\n            }\n            return (\n                <div class=\"datagrid-loading f-row\">\n                    <div class=\"datagrid-mask\"></div>\n                    <div class=\"datagrid-mask-msg\">{this.loadMsg}</div>\n                </div>\n            )\n        },\n        renderEmpty() {\n            if (this.loading || this.rows.length) {\n                return null;\n            }\n            if (this.$slots['empty']) {\n                const content = this.$slots['empty']();\n                return (\n                    <div class=\"datagrid-empty\">{content}</div>\n                )\n            } else {\n                return null;\n            }\n        },\n        renderList() {\n            if (this.virtualScroll) {\n                return null;\n            }\n            return (\n                <>\n                    {\n                        this.rows.map((row, rowIndex) => (\n                            <div\n                                class={this.getItemClass(row)}\n                                style={this.itemStyle}\n                                onMouseenter={() => this.highlightRow = row}\n                                onMouseleave={() => this.highlightRow = null}\n                                onClick={(event) => this.onRowClick(row, event)}\n                            >\n                                {this.$slots.default({ row: row, rowIndex: this.getRowIndex(rowIndex) })}\n                            </div>\n                        ))\n                    }\n                </>\n            )\n        },\n        renderVirtualList() {\n            if (!this.virtualScroll) {\n                return null;\n            }\n            return (\n                <VirtualScroll ref=\"vscrollRef\" class=\"f-full\"\n                    data={this.rows}\n                    total={this.total}\n                    pageNumber={this.pageNumber}\n                    pageSize={this.pageSize}\n                    rowHeight={this.rowHeight}\n                    lazy={this.lazy}\n                    scrollPosition={this.scrollPosition}\n                    onUpdate={value => this.vrows = value}\n                    onPageChange={this.onVirtualPageChange}>\n                    {\n                        this.vrows.map((row, rowIndex) => (\n                            <div\n                                class={this.getItemClass(row)}\n                                style={this.virtualItemStyle}\n                                onMouseenter={() => this.highlightRow = row}\n                                onMouseleave={() => this.highlightRow = null}\n                                onClick={event => this.onRowClick(row, event)}\n                            >\n                                {this.$slots.default({ row: row, rowIndex: this.getRowIndex(rowIndex) })}\n                            </div>\n                        ))\n                    }\n                </VirtualScroll>\n            )\n        }\n    },\n    render() {\n        let bodyCls = 'panel-body panel-body-noheader datagrid f-full f-column';\n        if (!this.border) {\n            bodyCls += ' panel-body-noborder';\n        }\n        return (\n            <div class=\"f-column\">\n                <div class={bodyCls}>\n                    {this.renderPagination('top')}\n                    <div ref=\"innerRef\" class={this.innerClasses} style={this.innerStyle}>\n                        {this.renderList()}\n                        {this.renderVirtualList()}\n                    </div>\n                    {this.renderPagination('bottom')}\n                </div>\n                {this.renderLoading()}\n                {this.renderEmpty()}\n            </div>\n        )\n    }\n})","﻿import { h } from 'vue';\n\nexport default {\n    name: 'Addon',\n    props: {\n        align: {\n            type: String,\n            default: 'right'\n        }\n    },\n    render() {\n        if (!this.$slots.default) {\n            return '';\n        }\n        return h(\n            'span',\n            {\n                'class': {\n                    'textbox-addon f-inline-row f-noshrink': true,\n                    'f-order2': this.align == 'left',\n                    'f-order4': this.align == 'right'\n                }\n            },\n            [this.$slots.default()]\n        )\n    }\n}","﻿export default {\n    name: 'Label',\n    props: {\n        for: String,\n        align: {\n            type: String,\n            default: 'left'\n        }\n    },\n    computed: {\n        labelClasses() {\n            // return 'textbox-label textbox-label-'+this.align;\n            return ['textbox-label', {\n                'textbox-label-top': this.align == 'top'\n            }]\n        },\n        labelStyle() {\n            return {\n                textAlign: this.align\n            }\n        }\n    },\n    mounted() {\n        if (this.for) {\n            let att = document.createAttribute('for');\n            att.value = this.for;\n            this.$el.setAttributeNode(att);\n        }\n    },\n    render() {\n        return (\n            <label class={this.labelClasses} style={this.labelStyle}>\n                {this.$slots.default()}\n            </label>\n        )\n    }\n}","﻿import { defineComponent } from \"vue\";\n\nexport default defineComponent({\n    name: 'FieldBase',\n    template: '',\n    props: {\n        name: String,\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        validateOnCreate: {\n            type: Boolean,\n            default: true\n        },\n        validateOnBlur: {\n            type: Boolean,\n            default: false\n        },\n        validateOnChange: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            invalidState: this.invalid\n        }\n    },\n    watch: {\n        invalid(value) {\n            this.invalidState = value;\n        }\n    },\n    computed: {\n        form() {\n            let parent = this.$parent;\n            while (parent && parent.$options.name != 'Form') {\n                parent = parent.$parent;\n            }\n            return parent;\n        },\n        field() {\n            let parent = this.$parent;\n            while (parent && parent.$options.name != 'FormField') {\n                parent = parent.$parent;\n            }\n            return parent;\n        },\n        fieldName() {\n            if (this.name) {\n                return this.name;\n            }\n            return this.field ? this.field.name : null;\n        }\n    },\n    mounted() {\n        if (this.form && this.form.fieldAdd) {\n            this.form.fieldAdd(this);\n        }\n    },\n    beforeUnmount() {\n        if (this.form && this.form.fieldRemove) {\n            this.form.fieldRemove(this);\n        }\n    },\n    methods: {\n        renderField() {\n            return null;\n        },\n        afterFocus() { },\n        afterBlur() {\n            if (this.form && this.form.fieldBlur) {\n                this.form.fieldBlur(this)\n            }\n        },\n        afterValueChange() {\n            if (this.form && this.form.fieldChange) {\n                this.form.fieldChange(this)\n            }\n        },\n        setValid(valid) {\n            this.invalidState = !valid;\n        }\n    },\n    render() {\n        return this.renderField()\n    }\n})","﻿import { defineComponent } from 'vue';\nimport FieldBase from './FieldBase';\n\nexport default defineComponent({\n    name: 'InputBase',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: [String, Number, Array],\n        modelValue: [String, Number, Array],\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: true\n        },\n        iconCls: String,\n        iconAlign: {\n            type: String,\n            default: 'right'\n        },\n        placeholder: String,\n        multiline: {\n            type: Boolean,\n            default: false\n        },\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: Number,\n        cls: String,\n        inputCls: String,\n        inputStyle: Object,\n        inputId: String,\n        textFormatter: Function\n        // textFormatter: {\n        //     type: Function,\n        //     default: (value) => {return value == null ? value : String(value)}\n        // }\n    },\n    data() {\n        const v = this.value !== undefined ? this.value : this.modelValue;\n        return {\n            valueState: v,\n            textState: String(v || ''),\n            focused: false\n        }\n    },\n    computed: {\n        baseClasses() {\n            return ['textbox f-inline-row f-field', this.cls, {\n                'textbox-disabled': this.disabled,\n                'textbox-readonly': this.readonly,\n                'textbox-focused': this.focused,\n                'textbox-invalid': this.invalidState\n            }];\n        },\n        inputClasses() {\n            return ['textbox-text f-full f-order3', this.inputCls, {\n                'validatebox-invalid': this.invalidState\n            }];\n        },\n        addonClasses() {\n            return ['textbox-addon textbox-addon-icon f-inline-row f-noshrink', {\n                'f-order1': this.iconAlign == 'left',\n                'f-order5': this.iconAlign == 'right'\n            }];\n        },\n        addonIconClasses() {\n            return ['textbox-icon textbox-icon-disabled', this.iconCls];\n        },\n        text() {\n            return this.textState;\n        }\n    },\n    watch: {\n        value() {\n            this.setValue(this.value);\n        },\n        modelValue() {\n            this.setValue(this.modelValue);\n        }\n    },\n    methods: {\n        defaultTextFormatter(value) {\n            return value == null ? value : String(value);\n        },\n        setValue(value) {\n            if (value !== this.valueState) {\n                let previousValue = this.valueState;\n                this.valueState = value;\n                this.$emit('update:modelValue', this.valueState);\n                this.$emit('valueChange', {\n                    currentValue: this.valueState,\n                    previousValue: previousValue\n                });\n                this.afterValueChange();\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n        },\n        focus() {\n            if (this.$refs.inputRef) {\n                this.$refs.inputRef.focus();\n            }\n            this.focused = true;\n            this.$emit('focus');\n            this.afterFocus();\n        },\n        blur() {\n            if (this.$refs.inputRef) {\n                this.$refs.inputRef.blur();\n            }\n            this.focused = false;\n            this.$emit('blur');\n            this.afterBlur();\n        },\n        getSelectionStart() {\n            return this.getSelectionRange().start;\n        },\n        getSelectionRange() {\n            let start = 0;\n            let end = 0;\n            let target = this.$refs.inputRef;\n            if (typeof target.selectionStart == 'number') {\n                start = target.selectionStart;\n                end = target.selectionEnd;\n            }\n            return { start: start, end: end };\n        },\n        setSelectionRange(start, end) {\n            let target = this.$refs.inputRef;\n            if (target.setSelectionRange) {\n                target.setSelectionRange(start, end);\n            } else if (target.createTextRange) {\n                var range = target.createTextRange();\n                range.collapse();\n                range.moveEnd('character', end);\n                range.moveStart('character', start);\n                range.select();\n            }\n        },\n        renderInput() {\n            const pp = {\n                class: this.inputClasses,\n                style: this.inputStyle,\n                value: this.text,\n                id: this.inputId,\n                disabled: this.disabled ? 'disabled' : null,\n                readonly: (this.readonly || !this.editable) ? 'readonly' : null,\n                tabindex: this.tabindex,\n                placeholder: this.placeholder,\n                onInput: this.onInput,\n                onFocus: this.focus,\n                onBlur: this.blur\n            }\n            return (\n                <>\n                    {!this.multiline && <input ref=\"inputRef\" autocomplete=\"off\" {...pp}></input>}\n                    {this.multiline && <textarea ref=\"inputRef\" autocomplete=\"off\" {...pp}></textarea>}\n                    <input class=\"textbox-value\" type=\"hidden\" value={this.valueState} disabled={this.disabled ? 'disabled' : null}></input>\n                </>\n            )\n        },\n        renderAddon() {\n            return (\n                <>\n                    {this.$slots.default && this.$slots.default()}\n                    {\n                        this.iconCls &&\n                        <span ref=\"addonRef\" class={this.addonClasses}>\n                            <span class={this.addonIconClasses}></span>\n                        </span>\n                    }\n                </>\n            )\n        },\n        renderOthers() {\n            return null;\n        },\n        renderField() {\n            return (\n                <span class={this.baseClasses}>\n                    {this.renderInput()}\n                    {this.renderAddon()}\n                    {this.renderOthers()}\n                </span>\n            )\n        }\n\n    }\n})","﻿import domHelper from '../base/DomHelper';\nimport InputBase from './InputBase';\n\nexport default {\n    name: 'ComboBase',\n    extends: InputBase,\n    props: {\n        hasDownArrow: {\n            type: Boolean,\n            default: true\n        },\n        arrowIconCls: {\n            type: String,\n            default: 'combo-arrow'\n        },\n        arrowAlign: {\n            type: String,\n            default: 'right'\n        },\n        panelAlign: {\n            type: String,\n            default: 'left'\n        },\n        panelStyle: Object,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        separator: {\n            type: String,\n            default: ','\n        },\n        delay: {\n            type: Number,\n            default: 200\n        },\n        cls: String\n    },\n    data() {\n        return {\n            panelClosed: true,\n            panelLeft: 0,\n            panelTop: 0,\n            scrollTop: 0\n        }\n    },\n    computed: {\n        baseClasses() {\n            return ['textbox f-inline-row combo f-field', this.cls, {\n                'textbox-disabled': this.disabled,\n                'textbox-readonly': this.readonly,\n                'textbox-focused': this.focused,\n                'textbox-invalid': this.invalidState\n            }];\n        },\n        arrowClasses() {\n            return ['textbox-addon f-column f-noshrink', {\n                'f-order0': this.arrowAlign == 'left',\n                'f-order6': this.arrowAlign == 'right'\n            }];\n        }\n    },\n    mounted() {\n        domHelper.bind(document, 'click', this.onDocumentClick);\n        domHelper.bind(document, 'mousewheel', this.onDocumentMouseWheel);\n    },\n    beforeUnmount() {\n        if (this.$refs.panelRef) {\n            this.$el.appendChild(this.$refs.panelRef);\n        }\n        domHelper.unbind(document, 'click', this.onDocumentClick);\n        domHelper.unbind(document, 'mousewheel', this.onDocumentMouseWheel);\n    },\n    methods: {\n        onDocumentClick(event) {\n            if (!this.disabled && !this.editable) {\n                if (domHelper.isChild(event.target, this.$refs.inputRef)) {\n                    event.stopPropagation();\n                    this.togglePanel();\n                    return false;\n                }\n            }\n            if (this.$refs.panelRef) {\n                event.stopPropagation();\n                if (domHelper.isChild(event.target, this.$el)) {\n                    return false;\n                }\n                if (!domHelper.isChild(event.target, this.$refs.panelRef)) {\n                    this.closePanel();\n                }\n            }\n        },\n        onDocumentMouseWheel(event) {\n            if (this.$refs.panelRef) {\n                event.stopPropagation();\n                if (domHelper.isChild(event.target, this.$refs.panelRef)) {\n                    //return false;\n                } else {\n                    this.closePanel();\n                }\n            }\n        },\n        togglePanel() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            this.panelClosed ? this.openPanel() : this.closePanel();\n            this.focus();\n        },\n        alignPanel() {\n            let view = domHelper.getViewport();\n            let pos = domHelper.offset(this.$el);\n            let hwidth = domHelper.outerWidth(this.$el);\n            let pwidth = domHelper.outerWidth(this.$refs.panelRef);\n            let hheight = domHelper.outerHeight(this.$el);\t// host height\n            let pheight = domHelper.outerHeight(this.$refs.panelRef);\t\t// panel height\n            let left = pos.left;\n            if (this.panelAlign == 'right') {\n                left += hwidth - pwidth;\n            }\n            if (left + pwidth > view.width + domHelper.getScrollLeft()) {\n                left = view.width + domHelper.getScrollLeft() - pwidth;\n            }\n            if (left < 0) {\n                left = 0;\n            }\n            let top = pos.top + hheight;\n            if (top + pheight > view.height + domHelper.getScrollTop()) {\n                top = pos.top - pheight;\n            }\n            if (top < domHelper.getScrollTop()) {\n                top = pos.top + hheight;\n            }\n            this.panelTop = top;\n            this.panelLeft = left;\n        },\n\n        openPanel() {\n            if (!this.panelClosed) {\n                return;\n            }\n            this.panelClosed = false;\n            this.alignPanel();\n            this.$nextTick(() => {\n                document.body.appendChild(this.$refs.panelRef);\n                let hwidth = domHelper.outerWidth(this.$el);\n                // let pwidth = domHelper.outerWidth(this.$refs.panelRef);\n                // if (pwidth < hwidth || !this.panelStyle || !this.panelStyle['width']){\n                //     this.$refs.panelRef.style.width = hwidth+'px';\n                // }\n                if (this.panelStyle) {\n                    if (!this.panelStyle['width']) {\n                        this.$refs.panelRef.style.width = hwidth + 'px';\n                    }\n                    if (!this.panelStyle['minWidth']) {\n                        this.$refs.panelRef.style.minWidth = hwidth + 'px';\n                    }\n                } else {\n                    this.$refs.panelRef.style.width = hwidth + 'px';\n                }\n                this.alignPanel();\n                this.$refs.panelRef.scrollTop = this.scrollTop;\n            });\n        },\n        closePanel() {\n            if (!this.panelClosed) {\n                this.scrollTop = this.$refs.panelRef.scrollTop;\n                this.panelClosed = true;\n            }\n        },\n        renderArrow() {\n            if (!this.hasDownArrow) {\n                return null;\n            }\n            return (\n                <span ref=\"arrowRef\" class={this.arrowClasses} onClick={this.togglePanel}>\n                    <span class={this.arrowIconCls + ' textbox-icon f-full'}></span>\n                </span>\n            )\n        },\n        renderPanel() {\n            if (this.panelClosed) {\n                return null;\n            }\n            const style = Object.assign({}, this.panelStyle, {\n                left: this.panelLeft + 'px',\n                top: this.panelTop + 'px'\n            })\n            return (\n                <div ref=\"panelRef\"\n                    class=\"panel-body panel-body-noheader combo-panel combo-p\"\n                    style={style}>\n                    <div className=\"f-column\" style={{ height: '100%', overflow: 'hidden' }}>\n                        <div className=\"f-full f-column scroll-body\">\n                            {this.renderContent()}\n                        </div>\n                        {this.$slots['footer'] && this.$slots['footer']()}\n                    </div>\n                </div>\n            )\n        },\n        renderContent() {\n            return null;\n        },\n        renderOthers() {\n            return (\n                <>\n                    {this.renderArrow()}\n                    {this.renderPanel()}\n                </>\n            )\n        }\n    }\n}","﻿export class DateHelper {\n\n\tparseSelections(format) {\n\t\tlet selections = [];\n\t\tlet formatTokens = format.split(/[^A-Za-z]/);\n\t\tlet start = 0;\n\t\tlet end = 0;\n\t\tfor(let token of formatTokens){\n\t\t\tif (token){\n\t\t\t\tend += token.length;\n\t\t\t\tselections.push([start, end]);\n\t\t\t\tstart = end + 1;\n\t\t\t\tend = start;\n\t\t\t} else {\n\t\t\t\tstart++;\n\t\t\t\tend++;\n\t\t\t}\n\t\t}\n\t\treturn selections;\n\t}\n\n\tparseDate(value, format) {\n\t\tif (!value){\n\t\t\treturn null;\n\t\t}\n\t\tlet formatTokens = format.split(/[^A-Za-z]/).filter(t => t);\n\t\tlet dateTokens = value.split(/[^A-Za-z0-9]/).filter(t => t);\n\t\tlet date = new Date();\n\t\tdate.setHours(0);\n\t\tdate.setMinutes(0);\n\t\tdate.setSeconds(0);\n\t\tdate.setMilliseconds(0);\n\n\t\tlet parser = {\n\t\t\tdd:   (value) => date.setDate(value),\n\t\t\td:    (value) => date.setDate(value),\n\t\t\tMM:   (value) => date.setMonth(+value - 1),\n\t\t\tM:    (value) => date.setMonth(+value - 1),\n\t\t\tyyyy: (value) => date.setFullYear(value),\n\t\t\tyy:   (value) => {\n\t\t\t\tvalue = +value;\n\t\t\t\tlet year = new Date().getFullYear();\n\t\t\t\tif (value + 2000 - year < 20){\n\t\t\t\t\tvalue += 2000;\n\t\t\t\t} else {\n\t\t\t\t\tvalue += 1900;\n\t\t\t\t}\n\t\t\t\tdate.setFullYear(value);\n\t\t\t},\n\t\t\tHH:   (value) => date.setHours(value),\n\t\t\tH:    (value) => date.setHours(value),\n\t\t\tmm:   (value) => date.setMinutes(value),\n\t\t\tss:   (value) => date.setSeconds(value),\n\t\t\tSSS:  (value) => date.setMilliseconds(value),\n\t\t\tSS:   (value) => date.setMilliseconds(value),\n\t\t\tS:    (value) => date.setMilliseconds(value)\n\t\t};\n\n\t\tfor(let i=0; i<formatTokens.length; i++){\n\t\t\tlet formatToken = formatTokens[i];\n\t\t\tlet dateToken = dateTokens[i];\n\t\t\tlet f = parser[formatToken];\n\t\t\tif (f){\n\t\t\t\tf(+dateToken || 0);\n\t\t\t}\n\t\t}\n\n\t\treturn date;\n\t}\n\n\tformatDate(date, format) {\n\t\tif (!date) {\n\t\t\treturn '';\n\t\t}\n\t\tlet formatN = (value) => {\n\t\t\treturn value < 10 ? '0' + value : value;\n\t\t};\n\t\tlet formatter = {\n\t\t\tdd:   () => formatN(date.getDate()),\n\t\t\td:    () => date.getDate(),\n\t\t\tMM:   () => formatN(date.getMonth() + 1),\n\t\t\tM:    () => date.getMonth() + 1,\n\t\t\tyyyy: () => date.getFullYear(),\n\t\t\tyy:   () => String(date.getFullYear()).substr(2, 2),\n\t\t\tHH:   () => formatN(date.getHours()),\n\t\t\tmm:   () => formatN(date.getMinutes()),\n\t\t\tss:   () => formatN(date.getSeconds()),\n\t\t\tSSS:  () => formatN(date.getMilliseconds()),\n\t\t\tSS:   () => formatN(date.getMilliseconds()),\n\t\t\tS:    () => date.getMilliseconds()\n\t\t};\n\t\treturn format.replace(/dd|d|M{1,4}|yyyy|yy|HH|mm|ss|S{1,3}|E{3,4}/g, (match) => {\n\t\t\tlet f = formatter[match];\n\t\t\treturn f ? f() : match;\n\t\t});\n\t}\n}\nexport default new DateHelper();\n","﻿export class TreeHelper {\n    constructor(){\n\t\tthis.cascadeCheck = true;\n\t\tthis.$vue = null;\n\t}\n\n\tsetCheckState(node, checkState){\n\t\tif (this.$vue){\n\t\t\tnode.checkState = checkState;\n\t\t\t// this.$vue.$set(node, 'checkState', checkState);\n\t\t} else {\n\t\t\tnode.checkState = checkState;\n\t\t}\n\t}\n\n\tcheckNode(node, callback){\n\t\tif (node.checkState != 'checked'){\n\t\t\tthis.setCheckState(node, 'checked');\n\t\t\tif (this.cascadeCheck){\n\t\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\t\tthis.setParentCheckbox(node);\n\t\t\t}\n\t\t\tcallback(node);\n\t\t}\n\t}\n\n\tuncheckNode(node, callback){\n\t\tif (node.checkState != 'unchecked'){\n\t\t\tthis.setCheckState(node, 'unchecked');\n\t\t\tif (this.cascadeCheck){\n\t\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\t\tthis.setParentCheckbox(node);\n\t\t\t}\n\t\t\tcallback(node);\n\t\t}\n\t}\n\n\tuncheckAllNodes(nodes, callback){\n\t\tlet changed = false;\n\t\tthis.forNodes(nodes, (node) => {\n\t\t\tif (node.checkState != 'unchecked'){\n\t\t\t\tthis.setCheckState(node, 'unchecked');\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t});\n\t\tif (changed){\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tsetParentCheckbox(node){\n\t\tlet pnode = node.parent;\n\t\tif (pnode){\n\t\t\tthis.setCheckState(pnode, this.calcNodeState(pnode));\n\t\t\tthis.setParentCheckbox(pnode);\n\t\t}\n\t}\n\n\tsetChildCheckbox(node, checkState){\n\t\tthis.setCheckState(node, checkState);\n\t\tif (node.children){\n\t\t\tfor(let cnode of node.children){\n\t\t\t\tthis.setChildCheckbox(cnode, checkState);\n\t\t\t}\n\t\t}\n\t}\n\n\tadjustCheck(node) {\n\t\tif (!this.cascadeCheck){\n\t\t\treturn;\n\t\t}\n\t\tif (node.checkState == 'checked'){\n\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\tthis.setParentCheckbox(node);\n\t\t} else if (node.checkState == 'unchecked'){\n\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\tthis.setParentCheckbox(node);\n\t\t} else {\n\t\t\tthis.setCheckState(node, this.calcNodeState(node));\n\t\t\tthis.setParentCheckbox(node);\n\t\t}\n\t}\n\n\tcalcNodeState(node) {\n\t\tlet count = node.children ? node.children.length : 0;\n\t\tif (count){\n\t\t\tlet checkedCount = 0;\n\t\t\tlet uncheckedCount = 0;\n\t\t\tfor(let cnode of node.children){\n\t\t\t\tthis.setCheckState(cnode, cnode.checkState || 'unchecked');\n\t\t\t\tif (cnode.checkState == 'checked'){\n\t\t\t\t\tcheckedCount ++;\n\t\t\t\t} else if (cnode.checkState == 'unchecked'){\n\t\t\t\t\tuncheckedCount ++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedCount == count){\n\t\t\t\treturn 'checked';\n\t\t\t} else if (uncheckedCount == count){\n\t\t\t\treturn 'unchecked';\n\t\t\t} else {\n\t\t\t\treturn 'indeterminate';\n\t\t\t}\n\t\t}\n\t\treturn 'unchecked';\n\t}\n\n\tforNodes(fromNodes, callback){\n\t\tfromNodes = fromNodes || [];\n\t\tlet nodes = [];\n\t\tfor(let i=0; i<fromNodes.length; i++){\n\t\t\tnodes.push(fromNodes[i]);\n\t\t}\n\t\twhile(nodes.length){\n\t\t\tlet node = nodes.shift();\n\t\t\tif (callback(node) == false){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (node.children){\n\t\t\t\tfor(let i=node.children.length-1; i>=0; i--){\n\t\t\t\t\tnode.children[i].parent = node;\n\t\t\t\t\tnodes.unshift(node.children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfindNode(nodes, field, value){\n\t\tlet node = null;\n\t\tthis.forNodes(nodes, (n) => {\n\t\t\tif (n[field] == value){\n\t\t\t\tnode = n;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n}\n\nexport default new TreeHelper();\n","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\n\nexport default defineComponent({\n    name: 'GridColumn',\n    props: {\n        field: String,\n        title: String,\n        width: [Number, String],\n        rowspan: {\n            type: [Number, String],\n            default: 1\n        },\n        colspan: {\n            type: [Number, String],\n            default: 1\n        },\n        hidden: {\n            type: Boolean,\n            default: false\n        },\n        sortable: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        editRules: [Array,Object,String],\n        editMessages: Object,\n        order: {\n            type: String,\n            default: 'asc'\n        },\n        frozen: {\n            type: Boolean,\n            default: false\n        },\n        align: String,\n        halign: String,\n        sorter: Function,\n        headerCls: String,\n        headerStyle: Object,\n        cellCss: [String,Object,Function],\n        expander: {\n            type: Boolean,\n            default: false\n        },\n        filterable: {\n            type: Boolean,\n            default: true\n        },\n        filterOperators: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            grid: null,\n            widthState: 0,\n            frozenState: this.frozen,\n            currOrder: null,\n            filterOperator: 'contains',\n            filterValue: null,\n            isFiltering: false\n        }\n    },\n    watch: {\n        filterValue(){\n            this.doFilter();\n        },\n        hidden(){\n            this.grid.initColumns();\n        }\n    },\n    mounted() {\n        this.widthState = domHelper.toStyleValue(this.width);\n        this.$parent.addColumn(this);\n    },\n    beforeUnmount(){\n        this.$parent.removeColumn(this);\n    },\n    render() {\n        return '';\n    },\n    methods: {\n        doFilter(){\n            if (this.isFiltering){\n                return;\n            }\n            this.isFiltering = true;\n            setTimeout(() => {\n                if (this.filterValue == '' || this.filterValue == null){\n                    // this.filterOperator = null;\n                    this.grid.removeFilterRule(this.field);\n                    this.grid.doFilter();\n                } else if (this.filterOperator){\n                    this.grid.addFilterRule({\n                        field: this.field,\n                        op: this.filterOperator,\n                        value: this.filterValue\n                    });\n                    this.grid.doFilter();\n                }\n                this.isFiltering = false;\n            }, this.grid.filterDelay);\n        }\n    }\n})","﻿import { defineComponent } from 'vue';\n\nexport default defineComponent({\n    name: 'GridHeaderRow',\n    data() {\n        return {\n            columns: [],\n            timer: null\n        }\n    },\n    watch: {\n        columns() {\n            clearTimeout(this.timer);\n            this.timer = setTimeout(() => {\n                this.$parent.$parent.initColumns()\n                this.$parent.$parent.initHeaderHeight()\n                this.timer = null;\n            })\n        }\n    },\n    mounted() {\n        this.$parent.addRow(this);\n    },\n    beforeUnmount() {\n        this.$parent.removeRow(this);\n    },\n    methods: {\n        addColumn(column) {\n            const cc = this.columns.slice();\n            cc.push(column);\n            this.columns = cc;\n        },\n        removeColumn(column) {\n            const cc = this.columns.slice();\n            let index = cc.indexOf(column);\n            if (index >= 0) {\n                cc.splice(index, 1);\n                this.columns = cc;\n            }\n        },\n\n    },\n    render(){\n        return (\n            <div>{this.$slots.default()}</div>\n        )\n    }\n})","﻿import {h} from 'vue';\nimport GridColumn from \"./GridColumn\";\n\nexport default {\n    name: 'GridHeaderCell',\n    props: {\n        column: GridColumn\n    },\n    render(){\n        let cell = null;\n        // if (this.column.$slots.header){\n        //     cell = this.column.$slots.header;\n        // } else if (this.column.$scopedSlots.header){\n        //     cell = this.column.$scopedSlots.header({column:this.column});\n        // } else {\n        //     cell = h('span', this.column.title);\n        // }\n        if (this.column.$slots['header']){\n            cell = this.column.$slots['header']({column:this.column})\n        } else {\n            cell = <span>{this.column.title}</span>\n        }\n        return h(\n            'div',\n            {\n                'class':{\n                    'datagrid-cell':true,\n                    'datagrid-sort':this.column.field && this.column.sortable,\n                    'datagrid-sort-asc':this.column.currOrder=='asc',\n                    'datagrid-sort-desc':this.column.currOrder=='desc'\n                },\n                'style':{\n                    'text-align':this.column.halign || this.column.align || null\n                }\n            },\n            [\n                cell,\n                h('span', {class:'datagrid-sort-icon'})\n            ]\n        )\n    }\n}","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\nimport ComboBase from '../base/ComboBase';\nimport DataList from '../datalist/DataList';\nimport { FieldBase } from '../base';\n\nexport default defineComponent({\n    name: 'ComboBox',\n    extends: ComboBase,\n    components: {\n        DataList\n    },\n    props: {\n        value: [String, Number, Array],\n        valueField: {\n            type: String,\n            default: 'value'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        },\n        groupField: String,\n        limitToList: {\n            type: Boolean,\n            default: true\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        rowHeight: {\n            type: Number,\n            default: 30\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        data: {\n            type: Array,\n            default: () => []\n        },\n        filter: Function\n    },\n    data() {\n        return {\n            mappingTexts: {},\n            datalistScrollTop: 0,\n            scrollPosition: null,\n            inputingText: null,\n            displayingText: null,\n            lastFilterValue: null,\n            innerData: [],\n            items: [],\n            totalState: this.total,\n            selection: null,\n            timer: null\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n                const ftext = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n                this.setText(ftext);\n                // this.textState = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n            }\n            return this.textState;\n        }\n    },\n    watch: {\n        total(value) {\n            this.totalState = value;\n        },\n        data(value) {\n            this.setData(value);\n            this.initTextMapping();\n        }\n    },\n    mounted() {\n        domHelper.bind(this.$el, 'keydown', this.onKeyDown);\n        this.setData(this.data);\n        // this.$on('valueChange', () => {\n        //     this.updateText();\n        // });\n        // this.$on('blur', this.onBlur);\n        this.initTextMapping();\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$el, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        afterValueChange() {\n            FieldBase.methods.afterValueChange.call(this)\n            this.updateText();\n        },\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            this.onBlur();\n        },\n        defaultFilter(q, item) {\n            let index = String(item[this.textField]).toLowerCase().indexOf(q.trim().toLowerCase());\n            return index === -1 ? false : true;\n        },\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            this.innerData = Object.assign([], value);\n            this.items = this.innerData;\n            this.updateText();\n        },\n        setText(value) {\n            this.textState = value;\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n\n        },\n        onKeyDown(event) {\n            if (this.panelClosed && event.which == 40) {\n                this.openPanel();\n                event.preventDefault();\n                return;\n            }\n            switch (event.which) {\n                case 40:\t// down\n                    this.$refs.datalist.navRow(1);\n                    event.preventDefault();\n                    break;\n                case 38:\t// up\n                    this.$refs.datalist.navRow(-1);\n                    event.preventDefault();\n                    break;\n                case 13:\t// enter\n                    if (this.$refs.datalist && this.$refs.datalist.highlightRow) {\n                        this.$refs.datalist.doEnter();\n                        if (!this.multiple) {\n                            this.closePanel();\n                        }\n                        this.textState = this.displayingText;\n                    }\n                    event.preventDefault();\n                    break;\n                case 9:\t\t// tab\n                    this.fixValue();\n                    this.closePanel();\n                    break;\n                case 27:\t// escape\n                    this.closePanel();\n                    this.textState = this.displayingText;\n                    event.preventDefault();\n                    break;\n            }\n        },\n        onBlur() {\n            if (!this.panelClosed) {\n                this.fixValue();\n            }\n        },\n        fixValue() {\n            if (this.inputingText == null) {\n                return;\n            }\n            let text = this.inputingText.trim();\n            if (!text) {\n                this.setValue(null);\n                this.clearSelections();\n                return;\n            }\n            if (this.multiple) {\n                let vv = [];\n                let used = [];\n                let tt = text.split(this.separator).filter(t => t.trim() != '');\n                for (let val of (this.valueState || [])) {\n                    let text = this.mappingTexts[val];\n                    if (tt.indexOf(text) != -1) {\n                        vv.push(val);\n                        used.push(text);\n                    }\n                }\n                if (!this.limitToList) {\n                    tt = tt.filter(t => used.indexOf(t) == -1);\n                    if (tt.length) {\n                        vv = vv.concat(tt);\n                    }\n                }\n                if ((this.valueState || []).join('') != vv.join('')) {\n                    this.setValue(vv);\n                }\n            } else {\n                if (this.inputingText != this.displayingText) {\n                    this.clearSelections();\n                    this.setValue(this.limitToList ? null : this.inputingText);\n                }\n            }\n            this.inputingText = null;\n        },\n        doFilter(value) {\n            if (this.lastFilterValue == value) {\n                return;\n            }\n            // this.$refs.datalist.scrollTop(0);\n            value = (value || '').trim();\n            if (!this.lazy) {\n                if (value) {\n                    let val = value;\n                    if (this.multiple) {\n                        let tt = value.split(this.separator);\n                        val = tt[tt.length - 1] || '';\n                    }\n                    this.items = this.innerData.filter(item => {\n                        return (this.filter || this.defaultFilter).call(this, val.trim(), item)\n                    });\n                } else {\n                    this.items = this.innerData;\n                }\n                this.totalState = this.items.length;\n                this.$nextTick(() => {\n                    if (this.$refs.datalist) {\n                        this.$refs.datalist.highlightFirstRow();\n                    }\n                });\n            }\n            this.lastFilterValue = value;\n            this.$emit('filterChange', {\n                pageNumber: 1,\n                pageSize: this.pageSize,\n                filterValue: value\n            });\n        },\n        openPanel() {\n            ComboBase.methods.openPanel.call(this);\n            if (this.editable && !this.focused) {\n                this.doFilter('');\n            }\n            // setTimeout(() => {\n            //     // this.$refs.datalist.scrollTop(this.datalistScrollTop);\n            //     this.$refs.datalist.scrollToSelectedRow();\n            // },20)\n        },\n        closePanel() {\n            if (!this.panelClosed) {\n                this.scrollPosition = this.$refs.datalist.scrollTop();\n                this.datalistScrollTop = this.$refs.datalist.scrollTop();\n                ComboBase.methods.closePanel.call(this);\n            }\n        },\n        onRowClick() {\n            if (!this.multiple) {\n                this.closePanel();\n            }\n        },\n        onSelectionChange(event) {\n            // this.$emit('selectionChange', event);\n            this.inputingText = null;\n            if (event == null) {\n                this.setValue(null);\n                this.selection = null;\n                return;\n            }\n            if (this.multiple) {\n                this.setValue(event.map(row => row[this.valueField]));\n            } else {\n                this.setValue(event[this.valueField]);\n            }\n            // this.selection = event;\n        },\n        onPageChange(event) {\n            this.$emit('filterChange', Object.assign(event, {\n                filterValue: this.lastFilterValue\n            }));\n        },\n        initTextMapping() {\n            if (this.selectionValue) {\n                if (this.selectionValue instanceof Array) {\n                    this.selectionValue.forEach(row => {\n                        let v = row[this.valueField];\n                        let t = row[this.textField];\n                        this.mappingTexts[v] = t;\n                    });\n                } else {\n                    let v = this.selectionValue[this.valueField];\n                    let t = this.selectionValue[this.textField];\n                    this.mappingTexts[v] = t;\n                }\n            }\n        },\n        updateText() {\n            if (this.valueState == null) {\n                if (this.$refs.datalist) {\n                    this.mappingTexts = {};\n                }\n                this.displayingText = null;\n                this.updateSelection(null);\n            } else {\n                let mt = {};\n                let tt = [];\n                if (this.multiple) {\n                    let rows = [];\n                    for (let i = 0; i < this.valueState.length; i++) {\n                        let val = this.valueState[i];\n                        let item = this.findItem(val);\n                        if (item) {\n                            mt[val] = item[this.textField];\n                            rows.push(item);\n                        } else {\n                            mt[val] = this.mappingTexts[val] || val;\n                            let row = {};\n                            row[this.valueField] = val;\n                            row[this.textField] = mt[val];\n                            rows.push(row);\n                        }\n                        tt.push(mt[val]);\n                    }\n                    this.updateSelection(rows);\n                } else {\n                    let item = this.findItem(this.valueState);\n                    if (item) {\n                        mt[this.valueState] = item[this.textField];\n                        this.updateSelection(item);\n                    } else {\n                        mt[this.valueState] = this.mappingTexts[this.valueState] || this.valueState;\n                        let row = {};\n                        row[this.valueField] = this.valueState;\n                        row[this.textField] = mt[this.valueState];\n                        this.updateSelection(row);\n                    }\n                    tt.push(mt[this.valueState]);\n                }\n                this.mappingTexts = mt;\n                this.displayingText = tt.join(this.separator);\n            }\n        },\n\n        findItem(value) {\n            let finder = (value, items = null) => {\n                if (!items) {\n                    items = this.data || [];\n                }\n                for (let item of items) {\n                    if (item[this.valueField] == value) {\n                        return item;\n                    }\n                }\n                return null;\n            };\n\n            let item = finder(value);\n            if (!item && this.selection) {\n                let items = this.selection instanceof Array ? this.selection : [this.selection];\n                item = finder(value, items);\n            }\n            return item;\n        },\n        updateSelection(rows) {\n            if (!rows) {\n                rows = [];\n            } else {\n                rows = rows instanceof Array ? rows : [rows];\n            }\n\n            const oldSelection = this.selection;\n            // let items = [];\n            // if (this.selection){\n            //     items = this.selection instanceof Array ? this.selection : [this.selection];\n            // }\n            if (this.multiple) {\n                this.selection = rows;\n            } else {\n                this.selection = rows[0] || null;\n            }\n            // if (items.length != rows.length){\n            //     this.$emit('selectionChange', this.selection);\n            // }\n            if (this.selection != oldSelection) {\n                this.$emit('selectionChange', this.selection);\n            }\n        },\n        clearSelections() {\n            if (this.selection) {\n                if (this.multiple) {\n                    if (this.selection.length) {\n                        this.selection = [];\n                        this.$emit('selectionChange', this.selection);\n                    }\n                } else {\n                    this.selection = null;\n                    this.$emit('selectionChange', this.selection);\n                }\n            }\n        },\n        renderContent() {\n            const listslots = {\n                default: (scope) => this.$slots['item'] ? this.$slots['item'](scope) : scope.row[this.textField],\n                empty: this.$slots['empty']\n            }\n            return (\n                <DataList ref=\"datalist\" class=\"f-full\" style=\"height:100%\" itemCls=\"combobox-item\" hoverCls=\"combobox-item-hover\" selectedCls=\"combobox-item-selected\"\n                    border={false}\n                    data={this.items}\n                    lazy={this.lazy}\n                    virtualScroll={this.virtualScroll}\n                    total={this.totalState}\n                    pageNumber={this.pageNumber}\n                    pageSize={this.pageSize}\n                    rowHeight={this.rowHeight}\n                    selectionMode={this.multiple ? 'multiple' : 'single'}\n                    idField={this.valueField}\n                    selection={this.selection}\n                    scrollPosition={this.scrollPosition}\n                    onRowClick={this.onRowClick}\n                    onSelectionChange={this.onSelectionChange}\n                    onPageChange={this.onPageChange}\n                    v-slots={listslots}>\n                </DataList>\n            )\n        }\n    }\n})","﻿import ComboBox from '../combobox/ComboBox';\n\nexport default {\n    name: 'GridFilterButton',\n    extends: ComboBox,\n    props: {\n        arrowIconCls: {\n            type: String,\n            default: 'icon-filter'\n        },\n        panelStyle: {\n            type: Object,\n            default: () => { return { height: 'auto', width: '150px' } }\n        },\n        inputStyle: {\n            type: Object,\n            default: () => { return { display: 'none' } }\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        column: Object\n    },\n    mounted() {\n        this.$nextTick(() => this.initData());\n    },\n    methods: {\n        initData() {\n            if (this.column.filterOperators && this.column.filterOperators.length) {\n                let filterOperators = this.column.grid.filterOperators;\n                let data = this.column.filterOperators.map(op => {\n                    return {\n                        value: op,\n                        text: filterOperators[op].text\n                    };\n                });\n                this.setData(data);\n                let rule = this.column.grid.getFilterRule(this.column.field);\n                if (rule) {\n                    this.column.filterOperator = rule.op;\n                } else {\n                    this.column.filterOperator = null;\n                }\n            }\n\n        },\n        onSelectionChange(event) {\n            ComboBox.methods.onSelectionChange.call(this, event)\n            if (!event) {\n                return;\n            }\n            let value = event.value;\n            if (!value) {\n                this.column.filterOperator = null;\n                this.column.filterValue = null;\n                this.column.grid.removeFilterRule(this.column.field);\n                return;\n            }\n            if (value == 'nofilter') {\n                this.column.filterOperator = null;\n                this.column.filterValue = null;\n                this.column.grid.removeFilterRule(this.column.field);\n                this.column.grid.doFilter();\n            } else if (this.column.filterValue != null && this.column.filterValue != '') {\n                this.column.filterOperator = value;\n                this.column.grid.addFilterRule({\n                    field: this.column.field,\n                    op: value,\n                    value: this.column.filterValue\n                });\n                this.column.grid.doFilter();\n            }\n        }\n    }\n}","﻿import { h } from 'vue';\nimport GridColumn from \"./GridColumn\";\nimport GridFilterButton from './GridFilterButton';\n\nexport default {\n    name: 'GridFilterCell',\n    components: {\n        GridFilterButton\n    },\n    props: {\n        column: GridColumn,\n        grid: Object\n    },\n    computed: {\n        filterValue() {\n            return this.column.filterValue;\n        }\n    },\n    watch: {\n        'column.filterValue'(value) {\n            if (this.$refs.input) {\n\n                this.$refs.input.value = value;\n            }\n        }\n    },\n    methods: {\n        isOnLeft() {\n            if (this.column.filterOperators && this.column.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'left') {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnRight() {\n            if (this.column.filterOperators && this.column.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'right') {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    },\n    render() {\n        let leftButton = '';\n        if (this.isOnLeft()) {\n            rightButton = (\n                <GridFilterButton class=\"datagrid-filter-btn datagrid-filter-btn-left f-noshrink\"\n                    column={this.column}\n                    value={this.column.filterOperator}\n                />\n            )\n        }\n        let rightButton = '';\n        if (this.isOnRight()) {\n            rightButton = (\n                <GridFilterButton class=\"datagrid-filter-btn datagrid-filter-btn-right f-noshrink\"\n                    column={this.column}\n                    value={this.column.filterOperator}\n                />\n            )\n        }\n\n        let cell = null;\n        if (this.column.$slots['filter']) {\n            cell = this.column.$slots['filter']({ column: this.column });\n            // } else if (this.column.$scopedSlots.filter){\n            //     cell = this.column.$scopedSlots.filter({column:this.column});\n        } else {\n            cell = (\n                <input\n                    ref=\"input\"\n                    class=\"datagrid-editable-input datagrid-filter f-full\"\n                    value={this.column.filterValue}\n                    onInput={event=>{\n                        this.column.filterValue = event.target.value;\n                    }}\n                />\n            )\n        }\n        return h(\n            'div',\n            {\n                'class': 'datagrid-filter-c f-row'\n            },\n            [\n                leftButton, cell, rightButton\n            ]\n        )\n    }\n}","﻿import GridFilterCell from './GridFilterCell';\n\nexport default {\n    name: 'GridFilterRow',\n    components: {\n        GridFilterCell\n    },\n    props: {\n        columns: Array,\n        grid: Object\n    },\n    methods1: {\n        isOnLeft(col) {\n            if (col.filterOperators && col.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'left') {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnRight(col) {\n            if (col.filterOperators && col.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'right') {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    },\n    render() {\n        return (\n            <tr class=\"datagrid-header-row datagrid-filter-row\">\n                {\n                    this.columns.map(col => (\n                        <td>\n                            <GridFilterCell column={col} grid={this.grid}></GridFilterCell>\n                        </td>\n                    ))\n                }\n            </tr>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport { MyEvent } from '../base/DomHelper';\n\nexport default class ResizableClass {\n    constructor(el, value=null){\n        this.updateOptions(value);\n        this.$el = el;\n\t}\n    updateOptions(value){\n        let opts = Object.assign({\n            disabled: false,\n            handles: 'all', // n, e, s, w, ne, se, sw, nw, all\n            edge: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 10000,\n            maxHeight: 10000,\n            resizeStart: () => {},\n            resizing: () => {},\n            resizeStop: () => {}\n        }, this, value||{});\n        Object.assign(this, opts);\n    }\n    bindEvents(){\n\t\tthis.$el._downHandler = (e) => {\n\t\t\tthis.onMouseDown(e);\n\t\t};\n        this.$el._moveHandler = (e) => {\n            this.onMouseMove(e);\n        };\n        this.$el._leaveHandler = (e) => {\n            this.onMouseLeave(e);\n        };\n        domHelper.bind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.bind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.bind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tunbindEvents(){\n        domHelper.unbind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tparseEvent(event) {\n\t\t// let touchEvents = ['touchstart','touchmove','touchend','touchcancel'];\n\t\t// if (touchEvents.indexOf(event.type) >= 0){\n\t\t// \tlet touch = event.touches[0] || event.changedTouches[0];\n\t\t// \tevent.pageX = touch.pageX;\n\t\t// \tevent.pageY = touch.pageY;\n\t\t// }\n\t\t// return event;\n\t\treturn new MyEvent(event);\n\t}\n\tonMouseDown(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tlet dir = this.getDirection(event);\n\t\tif (!dir){\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tlet style = getComputedStyle(this.$el);\n\t\tthis.state = {\n\t\t\ttarget: this.$el,\n\t\t\tdir: dir,\n\t\t\twidth: domHelper.outerWidth(this.$el),\n\t\t\theight: domHelper.outerHeight(this.$el),\n\t\t\tstartWidth: domHelper.outerWidth(this.$el),\n\t\t\tstartHeight: domHelper.outerHeight(this.$el),\n\t\t\tstartX: event.pageX,\n\t\t\tstartY: event.pageY,\n\t\t\tleft: parseInt(style.left) || 0,\n\t\t\ttop: parseInt(style.top) || 0,\n\t\t\tstartLeft: parseInt(style.left) || 0,\n\t\t\tstartTop: parseInt(style.top) || 0\n\t\t};\n        this.isResizing = true;\n        document.body.style.cursor = dir ? dir+'-resize' : '';\n\t\tthis.bindDocumentEvents();\n\t\tthis.resizeStart(this.state);\n\t}\n\tonMouseMove(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tif (this.isResizing){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n        let dir = this.getDirection(event);\n\t\tthis.$el.style.cursor = dir ? dir+'-resize' : '';\n\t\tthis.$el.resizeCursor = dir ? dir+'-resize' : '';\n\t}\n\tonMouseLeave(){\n\t\tif (this.disabled){\n\t\t\treturn;\n        }\n        this.$el.style.cursor = '';\n\t\tthis.$el.resizeCursor = '';\n\t}\n\tdoMove(event){\n\t\tif (!this.isResizing){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tthis.doResize(event);\n\t\tthis.applySize();\n\t\tthis.resizing(this.state);\n\t\treturn false;\n\t}\n\tdoUp(event){\n\t\tevent = this.parseEvent(event);\n        this.isResizing = false;\n\t\tdocument.body.style.cursor = '';\n\t\tthis.doResize(event);\n\t\tthis.applySize();\n\t\tthis.unbindDocumentEvents();\n\t\tthis.resizeStop(this.state);\n\t\treturn false;\n\t}\n\tgetDirection(e) {\n\t\tlet dir = '';\n\t\tlet offset = domHelper.offset(this.$el);\n\t\tlet width = domHelper.outerWidth(this.$el);\n\t\tlet height = domHelper.outerHeight(this.$el);\n\t\tif (e.pageY > offset.top && e.pageY < offset.top + this.edge) {\n\t\t\tdir += 'n';\n\t\t} else if (e.pageY < offset.top + height && e.pageY > offset.top + height - this.edge) {\n\t\t\tdir += 's';\n\t\t}\n\t\tif (e.pageX > offset.left && e.pageX < offset.left + this.edge) {\n\t\t\tdir += 'w';\n\t\t} else if (e.pageX < offset.left + width && e.pageX > offset.left + width - this.edge) {\n\t\t\tdir += 'e';\n\t\t}\n\t\t\n\t\tlet handles = this.handles.split(',').map(h => h.trim().toLowerCase());\n\t\tif (handles.indexOf('all') >= 0 || handles.indexOf(dir) >= 0){\n\t\t\treturn dir;\n\t\t}\n\t\tfor(var i=0; i<dir.length; i++){\n\t\t\tlet index = handles.indexOf(dir.substr(i, 1));\n\t\t\tif (index >= 0){\n\t\t\t\treturn handles[index];\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\tdoResize(e) {\n\t\tlet resizeData = this.state;\n\t\tif (resizeData.dir.indexOf('e') != -1) {\n\t\t\tlet width = resizeData.startWidth + e.pageX - resizeData.startX;\n\t\t\twidth = Math.min(\n\t\t\t\t\t\tMath.max(width, this.minWidth),\n\t\t\t\t\t\tthis.maxWidth\n\t\t\t\t\t);\n\t\t\tresizeData.width = width;\n\t\t}\n\t\tif (resizeData.dir.indexOf('s') != -1) {\n\t\t\tlet height = resizeData.startHeight + e.pageY - resizeData.startY;\n\t\t\theight = Math.min(\n\t\t\t\t\tMath.max(height, this.minHeight),\n\t\t\t\t\tthis.maxHeight\n\t\t\t);\n\t\t\tresizeData.height = height;\n\t\t}\n\t\tif (resizeData.dir.indexOf('w') != -1) {\n\t\t\tlet width = resizeData.startWidth - e.pageX + resizeData.startX;\n\t\t\twidth = Math.min(\n\t\t\t\t\t\tMath.max(width, this.minWidth),\n\t\t\t\t\t\tthis.maxWidth\n\t\t\t\t\t);\n\t\t\tresizeData.width = width;\n\t\t\tresizeData.left = resizeData.startLeft + resizeData.startWidth - resizeData.width;\n\t\t}\n\t\tif (resizeData.dir.indexOf('n') != -1) {\n\t\t\tlet height = resizeData.startHeight - e.pageY + resizeData.startY;\n\t\t\theight = Math.min(\n\t\t\t\t\t\tMath.max(height, this.minHeight),\n\t\t\t\t\t\tthis.maxHeight\n\t\t\t\t\t);\n\t\t\tresizeData.height = height;\n\t\t\tresizeData.top = resizeData.startTop + resizeData.startHeight - resizeData.height;\n\t\t}\n\t}\n\n\tapplySize() {\n        this.$el.style.left = this.state.left + 'px';\n        this.$el.style.top = this.state.top + 'px';\n\t\tif (this.state.width != this.state.startWidth){\n            this.$el.style.width = this.state.width + 'px';\n\t\t}\n\t\tif (this.state.height != this.state.startHeight){\n            this.$el.style.height = this.state.height + 'px';\n\t\t}\n\t}\n\tbindDocumentEvents() {\n\t\tthis.$el._docMoveHandler = (e) => {\n\t\t\tthis.doMove(e);\n\t\t};\n\t\tthis.$el._docUpHandler = (e) => {\n\t\t\tthis.doUp(e);\n\t\t};\n\t\tdomHelper.bind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.bind(document, 'touchend', this.$el._docUpHandler);\n\t}\n\tunbindDocumentEvents() {\n\t\tdomHelper.unbind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.unbind(document, 'touchend', this.$el._docUpHandler);\n\t}\n\n}","﻿import ResizableClass from './ResizableClass';\n\nexport default {\n    name: 'Resizable',\n    mounted(el, binding){\n        el._resizeInstance = new ResizableClass(el, binding.value);\n        el._resizeInstance.bindEvents();\n    },\n    updated(el, binding){\n        el._resizeInstance.updateOptions(binding.value);\n    },\n    beforeUnmount(el){\n        el._resizeInstance.unbindEvents();\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridHeaderCell from './GridHeaderCell';\nimport GridFilterRow from './GridFilterRow';\nimport Resizable from '../resizable/Resizable';\n\nexport default {\n    name: 'GridHeader',\n    components: {\n        GridHeaderCell,\n        GridFilterRow\n    },\n    directives: {\n        Resizable\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        columnGroup: Object,\n        paddingWidth: {\n            type: Number,\n            default: 0\n        },\n        filterable: {\n            type: Boolean,\n            default: false\n        },\n        grid: Object\n    },\n    data() {\n        return {\n            heightState: 0,\n            scrollLeftState: 0,\n            hoverColumn: null,\n            dragScope: {}\n        }\n    },\n    computed: {\n        filterOnTop() {\n            if (this.grid.filterable) {\n                if (this.grid.filterPosition == 'both' || this.grid.filterPosition == 'top') {\n                    return true;\n                }\n            }\n            return false;\n        },\n        filterOnBottom() {\n            if (this.grid.filterable) {\n                if (this.grid.filterPosition == 'both' || this.grid.filterPosition == 'bottom') {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n    methods: {\n        height(value) {\n            if (value == undefined) {\n                return domHelper.outerHeight(this.$refs.contentRef);\n            } else {\n                this.heightState = value ? value - 1 : value;\n            }\n        },\n        scrollLeft(value) {\n            if (value == undefined) {\n                return this.scrollLeftState;\n            } else {\n                this.scrollLeftState = value;\n                this.$refs.headerRef.scrollLeft = value;\n            }\n        },\n        onCellClick(event, col) {\n            this.$emit('cellClick', {\n                column: col,\n                originalEvent: event\n            });\n        },\n        getResizableOpts(col) {\n            return {\n                disabled: !this.grid.columnResizing || !col.field,\n                handles: 'e',\n                resizing: (event) => { this.onColumnResizing(col, event) },\n                resizeStop: (event) => { this.onColumnResizeStop(col, event) }\n            }\n        },\n        getDraggableOpts(col) {\n            return {\n                disabled: !this.grid.columnMoving || !col.field,\n                revert: true,\n                deltaX: 0,\n                deltaY: 0,\n                edge: 5,\n                scope: this.dragScope,\n                proxy: this.$refs.proxy,\n                dragStart: (event) => { this.onColumnDragStart(col, event) }\n            }\n        },\n        getDroppableOpts(col) {\n            return {\n                field: col.field,\n                dragOver: (scope) => { this.onColumnDragOver(col, scope) },\n                dragLeave: (scope) => { this.onColumnDragLeave(col, scope) },\n                drop: (scope) => { this.onColumnDrop(col, scope) }\n            }\n        },\n        onColumnResizing(col, event) {\n            event.target.style.width = null;\n            event.target.style.left = null;\n            event.target.style.top = null;\n            this.grid.resizeColumn(col.field, event.width);\n        },\n        onColumnResizeStop(col, event) {\n            event.target.style.width = null;\n            event.target.style.left = null;\n            event.target.style.top = null;\n            this.grid.resizeColumn(col.field, event.width);\n        },\n        onColumnDragStart(col, event) {\n            Object.assign(this.dragScope, {\n                column: col,\n                event: event,\n                fromIndex: this.grid.allColumns.indexOf(col),\n                viewOffset: domHelper.offset(this.grid.$refs.viewRef)\n            })\n        },\n        onColumnDragOver(col, scope) {\n            if (!scope) {\n                return;\n            }\n            scope.toIndex = this.grid.allColumns.indexOf(col);\n            const diff = scope.fromIndex - scope.toIndex;\n            scope.point = diff === 0 ? null : (diff < 0 ? 'after' : 'before');\n            let splitStyle = null;\n            if (diff !== 0) {\n                let el = scope.event.target.currDroppable.$el;\n                let offset = domHelper.offset(el);\n                let left = offset.left - scope.viewOffset.left;\n                if (scope.toIndex !== 0) {\n                    left -= 1;\n                }\n                splitStyle = {\n                    left: domHelper.toStyleValue(diff < 0 ? left + domHelper.outerWidth(el) : left),\n                    top: 0\n                };\n            }\n            this.grid.splitStyle = splitStyle\n        },\n        onColumnDragLeave() {\n            this.grid.splitStyle = null;\n        },\n        onColumnDrop(col, scope) {\n            if (!scope) {\n                return;\n            }\n            this.dragScope = {};\n            this.$nextTick(() => {\n                if (scope.point) {\n                    this.grid.moveColumn(scope.column.field, col.field, scope.point)\n                }\n            })\n        },\n        renderGroupCells() {\n            if (!this.columnGroup) {\n                return null;\n            }\n            return (\n                <tbody>\n                    {this.filterOnTop && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                    {\n                        this.columnGroup.rows.map(row => (\n                            <tr class=\"datagrid-header-row\">\n                                {\n                                    row.columns.map(col => (\n                                        <td\n                                            v-Resizable={this.getResizableOpts(col)}\n                                            rowspan={col.rowspan}\n                                            colspan={col.colspan}\n                                            class={(col.field ? 'datagrid-field-td' : '') + (this.hoverColumn == col && col.sortable ? ' datagrid-header-over' : '')}\n                                            onMouseenter={()=>this.hoverColumn = col}\n                                            onMouseleave={()=>this.hoverColumn = null}\n                                            onClick={event => this.onCellClick(event, col)}>\n                                            <GridHeaderCell column={col}></GridHeaderCell>\n                                        </td>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                    {this.filterOnBottom && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                </tbody>\n            )\n        },\n        renderRowCells() {\n            if (this.columnGroup) {\n                return null;\n            }\n            return (\n                <tbody>\n                    {this.filterOnTop && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                    <tr class=\"datagrid-header-row\">\n                        {\n                            this.columns.map(col => (\n                                <td\n                                    v-Resizable={this.getResizableOpts(col)}\n                                    v-Draggable={this.getDraggableOpts(col)}\n                                    v-Droppable={this.getDroppableOpts(col)}\n                                    class={'datagrid-field-td' + (this.hoverColumn == col && col.sortable ? ' datagrid-header-over' : '')}\n                                    onMouseenter={() => this.hoverColumn = col}\n                                    onMouseleave={() => this.hoverColumn = null}\n                                    onClick={event => this.onCellClick(event, col)}>\n                                    <GridHeaderCell column={col}></GridHeaderCell>\n                                </td>\n                            ))\n                        }\n                    </tr>\n                    {this.filterOnBottom && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                </tbody>\n            )\n        }\n    },\n    render() {\n        return (\n            <div class=\"datagrid-header f-row f-noshrink\">\n                <div ref=\"headerRef\" class=\"datagrid-header-inner f-full\" style={{ height: this.heightState + 'px' }}>\n                    <table ref=\"contentRef\" class=\"datagrid-htable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                        <colgroup>\n                            {\n                                this.columns.map(col => (\n                                    <col style={{ width: col.widthState }}></col>\n                                ))\n                            }\n                        </colgroup>\n                        {this.renderGroupCells()}\n                        {this.renderRowCells()}\n\n                    </table>\n                </div >\n                {this.paddingWidth && <div class=\"datagrid-header f-noshrink\" style={{ width: this.paddingWidth + 'px' }}></div>}\n                <DraggableProxy ref=\"proxy\">\n                    <div class=\"datagrid-moving-proxy\">{this.dragScope.column ? this.dragScope.column.title : null}</div>\n                </DraggableProxy>\n            </div >\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'GridBody',\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            scrollTopState: 0\n        }\n    },\n    methods: {\n        onScroll(){\n            this.$emit('bodyScroll', {\n                left: this.$refs.bodyRef.scrollLeft,\n                top: this.$refs.bodyRef.scrollTop\n            });\n        },\n        scrollTop(value){\n            if (value == undefined){\n                return this.scrollTopState;\n            } else {\n                this.scrollTopState = value;\n                this.$refs.bodyRef.scrollTop = value;\n            }\n        },\n        scrollbarWidth(){\n            return domHelper.outerWidth(this.$refs.bodyRef) - domHelper.outerWidth(this.$refs.innerRef);\n        }\n    }\n}","﻿\nexport default {\n    name: 'GridFooterCell',\n    props: {\n        row: Object,\n        column: Object,\n        rowIndex: Number\n    },\n    render() {\n        let cell = null;\n        if (this.column.$slots['footer']) {\n            cell = this.column.$slots['footer']({\n                row: this.row,\n                column: this.column,\n                rowIndex: this.rowIndex\n            });\n        } else {\n            cell = this.row[this.column.field];\n        }\n        return (\n            <div class=\"datagrid-cell\" style={{ textAlign: this.column.align || null }}>{cell}</div>\n        )\n    }\n}","﻿import GridFooterCell from './GridFooterCell';\n\nexport default {\n    name: 'GridFooter',\n    components: {\n        GridFooterCell\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        paddingWidth: {\n            type: Number,\n            default: 0\n        }\n    },\n    data() {\n        return {\n            scrollLeftState: 0\n        }\n    },\n    methods: {\n        scrollLeft(value) {\n            if (value == undefined) {\n                return this.scrollLeftState;\n            } else {\n                this.scrollLeftState = value;\n                this.$refs.footerRef.scrollLeft = value;\n            }\n        }\n    },\n    render() {\n        return (\n            <div class=\"datagrid-footer f-row f-noshrink\">\n                <div ref=\"footerRef\" class=\"datagrid-footer-inner f-full\">\n                    <table class=\"datagrid-ftable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                        <colgroup>\n                            {\n                                this.columns.map(col => (\n                                    <col style={{ width: col.widthState }}></col>\n                                ))\n                            }\n                        </colgroup>\n                        <tbody>\n                            {\n                                this.rows.map((row, rowIndex) => (\n                                    <tr class=\"datagrid-row\">\n                                        {\n                                            this.columns.map(col => (\n                                                <td>\n                                                    <GridFooterCell row={row} column={col} rowIndex={rowIndex}></GridFooterCell>\n                                                </td>\n\n                                            ))\n                                        }\n                                    </tr>\n\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                {this.paddingWidth && <div class=\"datagrid-footer f-noshrink\" style={{ width: this.paddingWidth + 'px' }}></div>}\n            </div>\n        )\n    }\n}","﻿import GridHeader from './GridHeader';\nimport GridBody from './GridBody';\nimport GridFooter from './GridFooter';\n\nexport default {\n    name: 'GridView',\n    components: {\n        GridHeader,\n        GridBody,\n        GridFooter\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        columnGroup: Object,\n        viewIndex: {\n            type: Number,\n            default: 2\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        footerRows: {\n            type: Array,\n            default: () => []\n        },\n        filterable: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            headerPaddingWidth: 0\n        }\n    },\n    computed: {\n        viewCls() {\n            return 'f-column datagrid-view' + this.viewIndex + (this.viewIndex == 2 ? ' f-full' : ' f-noshrink');\n        },\n    },\n    watch: {\n        rows() {\n            this.$nextTick(() => {\n                this.headerPaddingWidth = this.getHeaderPaddingWidth();\n            })\n        }\n    },\n    methods: {\n        scrollTop(value) {\n            if (value == undefined) {\n                return this.$refs.body.scrollTop();\n            } else {\n                this.$refs.body.scrollTop(value);\n            }\n        },\n        headerHeight(value) {\n            if (value == undefined) {\n                return this.$refs.header ? this.$refs.header.height() : 0;\n            } else {\n                if (this.$refs.header) {\n                    this.$refs.header.height(value);\n                }\n            }\n        },\n        getHeaderPaddingWidth() {\n            if (this.viewIndex == 2) {\n                let width = this.$refs.body ? this.$refs.body.scrollbarWidth() : 0;\n                if (width > 0) {\n                    return width;\n                }\n            }\n            return null;\n        },\n        onBodyScroll(event) {\n            // this.headerPaddingWidth = this.getHeaderPaddingWidth();\n            if (this.$refs.header) {\n                this.$refs.header.scrollLeft(event.left);\n            }\n            if (this.$refs.footer) {\n                this.$refs.footer.scrollLeft(event.left);\n            }\n            this.$emit('bodyScroll', event);\n        },\n        onResize() {\n\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.viewCls}>\n                <GridHeader ref=\"header\"\n                    columnGroup={this.columnGroup}\n                    columns={this.columns}\n                    paddingWidth={this.headerPaddingWidth}>\n                </GridHeader>\n                <GridBody ref=\"body\" align=\"center\"\n                    columns={this.columns}\n                    rows={this.rows}\n                    onBodyScroll={this.onBodyScroll}>\n                </GridBody>\n            </div>\n        )\n    }\n}","﻿import { defineComponent } from 'vue';\nimport ListBase from '../base/ListBase';\nimport domHelper from '../base/DomHelper';\nimport GridColumn from './GridColumn';\nimport GridHeaderRow from './GridHeaderRow';\nimport GridHeader from './GridHeader';\nimport GridView from './GridView';\n\nexport default defineComponent({\n    name: 'GridBase',\n    extends: ListBase,\n    components: {\n        GridColumn,\n        GridHeaderRow,\n        GridHeader,\n        GridView\n    },\n    props: {\n        rowHeight: {\n            type: Number,\n            default: 32\n        },\n        striped: {\n            type: Boolean,\n            default: false\n        },\n        rowCss: [Object, Function],\n        frozenWidth: {\n            type: [Number, String],\n            default: '200px'\n        },\n        frozenAlign: {\n            type: String,\n            default: 'left'\n        },\n        sorts: {\n            type: [Object, Array],\n            default: () => []\n        },\n        multiSort: {\n            type: Boolean,\n            default: false\n        },\n        showHeader: {\n            type: Boolean,\n            default: true\n        },\n        showFooter: {\n            type: Boolean,\n            default: false\n        },\n        editMode: String,   // row, cell\n        tipOptions: Object,\n        clickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        dblclickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        footerData: {\n            type: Array,\n            default: () => []\n        },\n        filterRules: {\n            type: Array,\n            default: () => []\n        },\n        columnResizing: {\n            type: Boolean,\n            default: false\n        },\n        columnMoving: {\n            type: Boolean,\n            default: false\n        },\n        cellSpan: {\n            type: Function,\n            default: () => {\n                return {\n                    rowspan: 1,\n                    colspan: 1\n                }\n            }\n        }\n    },\n    data() {\n        return {\n            leftGroup: null,\n            rightGroup: null,\n            centerGroup: null,\n            leftColumns: [],\n            rightColumns: [],\n            centerColumns: [],\n            columnRefs: [],\n            groupRefs: [],\n            sortsState: this.sorts,\n            editingItem: null,\n            headerHeight: 0,\n            splitStyle: null\n        }\n    },\n    computed: {\n        allColumns() {\n            let cc = [];\n            if (this.leftColumns) {\n                cc = cc.concat(this.leftColumns);\n            }\n            if (this.centerColumns) {\n                cc = cc.concat(this.centerColumns);\n            }\n            if (this.rightColumns) {\n                cc = cc.concat(this.rightColumns);\n            }\n            return cc;\n        },\n        footerRows() {\n            if (this.footerData instanceof Array) {\n                return this.footerData;\n            } else {\n                return [this.footerData];\n            }\n        },\n        leftFrozenWidth() {\n            let width = this.leftGroup ? this.leftGroup.widthState : 0;\n            return width ? width : this.frozenWidth;\n        },\n        rightFrozenWidth() {\n            let width = this.rightGroup ? this.rightGroup.widthState : 0;\n            return width ? width : this.frozenWidth;\n        }\n    },\n    watch: {\n        groupRefs() {\n            this.initColumns();\n            this.initHeaderHeight();\n        },\n        columnRefs() {\n            this.initColumns();\n            this.initHeaderHeight();\n        },\n        filterRules() {\n            this.initFilterRules();\n        }\n    },\n    created() {\n        this.initColumnSort();\n        if (window.EventHub) {\n            window.EventHub.$on('tabSelect', (tab) => {\n                if (domHelper.isChild(this.$el, tab.$el)) {\n                    if (!this.headerHeight) {\n                        this.initHeaderHeight();\n                    }\n                }\n            })\n            window.EventHub.$on('panelSelect', (panel) => {\n                if (domHelper.isChild(this.$el, panel.$el)) {\n                    if (!this.headerHeight) {\n                        this.initHeaderHeight();\n                    }\n                }\n            })\n        }\n    },\n    mounted() {\n        this.hasDestroyed = false;\n        this.initFilterRules();\n        this.$nextTick(() => this.initHeaderHeight());\n        if (window.EventHub){\n            window.EventHub.$emit('gridMounted', this);\n        }\n    },\n    beforeUnmount() {\n        this.hasDestroyed = true;\n    },\n    methods: {\n        addColumn(column) {\n            this.columnRefs.push(column);\n            this.changeColumns();\n        },\n        removeColumn(column) {\n            let index = this.columnRefs.indexOf(column);\n            if (index >= 0) {\n                this.columnRefs.splice(index, 1);\n                this.changeColumns();\n            }\n        },\n        addColumnGroup(group) {\n            this.groupRefs.push(group);\n            this.changeColumns();\n        },\n        removeColumnGroup(group) {\n            let index = this.columnRefs.indexOf(group);\n            if (index >= 0) {\n                this.groupRefs.splice(index, 1);\n                this.changeColumns();\n            }\n        },\n        changeColumns() {\n            if (this.hasDestroyed) {\n                return;\n            }\n            clearTimeout(this.columnTimer);\n            this.columnTimer = setTimeout(() => {\n                this.initColumns();\n                this.initHeaderHeight();\n            })\n        },\n        // initColumns() {\n        //     this.leftGroup = null;\n        //     this.leftColumns = null;\n        //     this.rightGroup = null;\n        //     this.rightColumns = null;\n        //     this.centerGroup = null;\n        //     this.centerColumns = null;\n        //     if (this.groupRefs && this.groupRefs.length) {\n        //         this.groupRefs.forEach((g) => {\n        //             let cc = this.getColumnLayout(g);\n        //             let columns = cc[cc.length - 1];\n        //             if (g.frozen) {\n        //                 if (g.align == 'left') {\n        //                     this.leftGroup = g;\n        //                     this.leftColumns = columns;\n        //                 } else {\n        //                     this.rightGroup = g;\n        //                     this.rightColumns = columns;\n        //                 }\n        //             } else {\n        //                 this.centerGroup = g;\n        //                 this.centerColumns = columns;\n        //             }\n        //         });\n        //     }\n        //     if (!this.centerColumns) {\n        //         this.centerColumns = this.columnRefs.filter((c) => {\n        //             return !c.frozenState;\n        //         });\n        //         let frozenColumns = this.columnRefs.filter((c) => {\n        //             return c.frozenState;\n        //         });\n        //         if (frozenColumns.length) {\n        //             if (this.frozenAlign == 'left') {\n        //                 this.leftColumns = frozenColumns;\n        //             } else {\n        //                 this.rightColumns = frozenColumns;\n        //             }\n        //         }\n        //     }\n        //     this.allColumns.forEach(c => c.grid = this);\n        //     this.initColumnSort();\n        // },\n        initColumns() {\n            const { columnRefs, groupRefs } = this;\n            let newState = {\n                leftGroup: null,\n                leftColumns: null,\n                rightGroup: null,\n                rightColumns: null,\n                centerGroup: null,\n                centerColumns: null\n            };\n            if (groupRefs && groupRefs.length) {\n                groupRefs.forEach((g) => {\n                    let cc = this.getColumnLayout(g);\n                    let columns = cc[cc.length - 1];\n                    if (g.frozen) {\n                        if (g.align == 'left') {\n                            newState.leftGroup = g;\n                            newState.leftColumns = columns;\n                        } else {\n                            newState.rightGroup = g;\n                            newState.rightColumns = columns;\n                        }\n                    } else {\n                        newState.centerGroup = g;\n                        newState.centerColumns = columns;\n                    }\n                });\n            }\n            if (!newState.centerColumns) {\n                newState.centerColumns = columnRefs.filter((c) => {\n                    return !c.frozenState && !c.hidden;\n                });\n                let frozenColumns = columnRefs.filter((c) => {\n                    return c.frozenState && !c.hidden;\n                });\n                if (frozenColumns.length) {\n                    if (this.frozenAlign == 'left') {\n                        newState.leftColumns = frozenColumns;\n                    } else {\n                        newState.rightColumns = frozenColumns;\n                    }\n                }\n            }\n            Object.assign(this, newState);\n            this.allColumns.forEach(c => c.grid = this);\n            this.initColumnSort();\n        },\n        initHeaderHeight() {\n            if (this.$refs.view1) {\n                this.$refs.view1.headerHeight(null);\n            }\n            if (this.$refs.view2) {\n                this.$refs.view2.headerHeight(null);\n            }\n            if (this.$refs.view3) {\n                this.$refs.view3.headerHeight(null);\n            }\n            this.$nextTick(() => {\n                let h1 = this.$refs.view1 ? this.$refs.view1.headerHeight() : 0;\n                let h2 = this.$refs.view2 ? this.$refs.view2.headerHeight() : 0;\n                let h3 = this.$refs.view3 ? this.$refs.view3.headerHeight() : 0;\n                this.headerHeight = Math.max(h1, h2, h3);\n                if (this.$refs.view1) {\n                    this.$refs.view1.headerHeight(this.headerHeight);\n                }\n                if (this.$refs.view2) {\n                    this.$refs.view2.headerHeight(this.headerHeight);\n                }\n                if (this.$refs.view3) {\n                    this.$refs.view3.headerHeight(this.headerHeight);\n                }\n            })\n        },\n        initFilterRules() {\n            this.filterRules.forEach(r => {\n                let col = this.findColumn(r.field);\n                if (col) {\n                    col.filterValue = r.value;\n                    col.filterOperator = r.op;\n                }\n            });\n        },\n        getColumnLayout(group) {\n            let aa = [];\n            let count = this.getColumnCount(group);\n            for (let i = 0; i < group.rows.length; i++) {\n                aa[i] = new Array(count);\n            }\n            group.rows.forEach((row, rowIndex) => {\n                row.columns.filter(c => !c.hidden).forEach(col => {\n                    let colIndex = this.getColumnIndex(aa[rowIndex]);\n                    if (colIndex >= 0) {\n                        for (let c = 0; c < col.colspan; c++) {\n                            for (let r = 0; r < col.rowspan; r++) {\n                                aa[rowIndex + r][colIndex + c] = col || '';\n                            }\n                        }\n                    }\n                })\n            });\n            return aa;\n        },\n        getColumnCount(group) {\n            let count = 0;\n            group.rows[0].columns.filter(c => !c.hidden).forEach(col => {\n                count += Number(col.colspan);\n            });\n            return count;\n        },\n        getColumnIndex(a) {\n            for (let i = 0; i < a.length; i++) {\n                if (a[i] == undefined) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        onBodyScroll(event) {\n            let top = event ? event.top : this.view2.scrollTop();\n            if (this.$refs.view1) {\n                this.$refs.view1.scrollTop(top);\n            }\n            if (this.$refs.view3) {\n                this.$refs.view3.scrollTop(top);\n            }\n        },\n        addSort(col) {\n            let index = -1;\n            for (let i = 0; i < this.sortsState.length; i++) {\n                if (this.sortsState[i].field == col.field) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index >= 0) {\n                let nextOrder = this.sortsState[index].order == 'asc' ? 'desc' : 'asc';\n                if (this.multiSort && nextOrder == col.order) {\n                    this.sortsState.splice(index, 1);\n                } else {\n                    this.sortsState[index].order = nextOrder;\n                }\n            } else {\n                if (this.multiSort) {\n                    this.sortsState.push({\n                        field: col.field,\n                        order: col.order\n                    });\n                } else {\n                    this.sortsState = [{\n                        field: col.field,\n                        order: col.order\n                    }];\n                }\n            }\n            this.initColumnSort();\n        },\n        initColumnSort() {\n            this.sortsState = this.sortsState || [];\n            if (!(this.sortsState instanceof Array)) {\n                this.sortsState = [this.sortsState];\n            }\n            if (!this.multiSort) {\n                this.sortsState = this.sortsState.slice(0, 1);\n            }\n            for (let c = 0; c < this.allColumns.length; c++) {\n                let col = this.allColumns[c];\n                col.currOrder = null;\n                for (let s = 0; s < this.sortsState.length; s++) {\n                    let sort = this.sortsState[s];\n                    if (sort.field == col.field) {\n                        col.currOrder = sort.order;\n                        break;\n                    }\n                }\n            }\n        },\n        findColumn(field) {\n            let cc = this.allColumns;\n            for (let i = 0; i < cc.length; i++) {\n                if (cc[i].field == field) {\n                    return cc[i];\n                }\n            }\n            return null;\n        },\n        addFilterRule(rule) {\n            // super.addFilterRule(rule);\n            ListBase.methods.addFilterRule.call(this, rule);\n            let col = this.findColumn(rule.field);\n            if (col) {\n                col.filterValue = rule.value;\n                col.filterOperator = rule.op;\n            }\n        },\n        resizeColumn(field, width) {\n            const col = this.findColumn(field);\n            if (col) {\n                col.widthState = domHelper.toStyleValue(width);\n                this.$emit('columnResize', col);\n            }\n        },\n        moveColumn(fromField, toField, point) {\n            const leftCount = (this.leftColumns || []).length;\n            const centerCount = (this.centerColumns || []).length;\n            const columnRefs = this.columnRefs.slice();\n            const fromIndex = columnRefs.findIndex(col => col.field === fromField);\n            const fromCol = columnRefs[fromIndex];\n            columnRefs.splice(fromIndex, 1);\n            const toIndex = columnRefs.findIndex(col => col.field === toField);\n            columnRefs.splice(toIndex + (point === 'before' ? 0 : 1), 0, fromCol);\n            for (let i = 0; i < columnRefs.length; i++) {\n                columnRefs[i].frozenState = true;\n            }\n            for (let i = leftCount; i < leftCount + centerCount; i++) {\n                columnRefs[i].frozenState = false;\n            }\n            this.columnRefs = columnRefs;\n            this.splitStyle = null;\n            this.$nextTick(() => {\n                this.$emit('columnMove', {\n                    from: this.findColumn(fromField),\n                    to: this.findColumn(toField),\n                    point\n                })\n            })\n        },\n\n        isEditing(row, column = null) {\n            if (this.editMode && this.editingItem) {\n                if (this.editMode == 'cell' && this.editingItem.column != column) {\n                    return false;\n                }\n                if (this.idField) {\n                    if (this.editingItem.row[this.idField] == row[this.idField]) {\n                        return true;\n                    }\n                } else {\n                    if (this.editingItem.row == row) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        beginEdit(row, column = null, rowEl = null) {\n            if (!this.isEditing(row, column)) {\n                this.endEdit();\n                if (this.editingItem) {\n                    setTimeout(() => {\n                        if (this.editMode == 'row') {\n                            this.selectRow(this.editingItem.row);\n                        } else if (this.editMode == 'cell') {\n                            this.selectCell(this.editingItem.row, this.editingItem.column);\n                        }\n                    });\n                    return;\n                }\n                let originalValue = this.editMode == 'row' ? Object.assign({}, row) : row[column.field];\n                this.editingItem = {\n                    row: row,\n                    column: column,\n                    originalValue: originalValue,\n                    element: rowEl\n                };\n                this.$emit('editBegin', this.editingItem);\n            }\n        },\n        endEdit() {\n            if (this.editingItem) {\n                let el = this.editingItem.element;\n                if (el && el.querySelector('.validatebox-invalid')) {\n                    return;\n                }\n                if (this.editingItem.invalid) {\n                    return;\n                }\n                this.$emit('editEnd', this.editingItem);\n                this.editingItem = null;\n            }\n        },\n        cancelEdit() {\n            if (this.editingItem) {\n                let item = this.editingItem;\n                this.editingItem = null;\n                setTimeout(() => {\n                    if (this.editMode == 'cell') {\n                        item.row[item.column.field] = item.originalValue;\n                    } else {\n                        Object.assign(item.row, item.originalValue);\n                    }\n                    this.$emit('editCancel', item);\n                });\n            }\n        },\n        navRow(step) {\n            ListBase.methods.navRow.call(this, step);\n            let index = this.rows.indexOf(this.highlightRow);\n            if (index >= 0) {\n                this.$nextTick(() => {\n                    let container = this.$refs.view2.$refs.body.$refs.bodyRef;\n                    let item = container.querySelector('.datagrid-row-over');\n                    if (item) {\n                        domHelper.scrollTo(container, item);\n                    }\n                })\n            }\n        },\n\n    }\n})","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\n\nexport default defineComponent({\n    name: 'GridColumnGroup',\n    props: {\n        frozen: {\n            type: Boolean,\n            default: false\n        },\n        align: {\n            type: String,\n            default: 'left'\n        },\n        width: [Number, String]\n    },\n    data() {\n        return {\n            widthState: 0,\n            rows: []\n        }\n    },\n    mounted() {\n        this.widthState = domHelper.toStyleValue(this.width);\n        this.$parent.addColumnGroup(this);\n    },\n    beforeUnmount() {\n        this.$parent.removeColumnGroup(this);\n    },\n    methods: {\n        addRow(row){\n            this.rows.push(row);\n        },\n        removeRow(row){\n            let index = this.rows.indexOf(row);\n            if (index >= 0){\n                this.rows.splice(index,1);\n            }\n        }\n    },\n    render(){\n        return (\n            <div>{this.$slots.default()}</div>\n        )\n    }\n})","﻿export default {\n    name: 'GridEmpty',\n    props: {\n        grid: Object\n    },\n    render() {\n        let content = null;\n        if (this.grid.$slots['empty']) {\n            content = this.grid.$slots['empty']()\n        }\n        if (content) {\n            return (\n                <div class=\"datagrid-empty\">{content}</div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿import InputBase  from '../base/InputBase';\n\nexport default {\n    name: 'TextBox',\n    extends: InputBase,\n    computed: {\n        text() {\n            return this.focused ? this.textState : (this.textFormatter||this.defaultTextFormatter)(this.textState);\n        }\n    },\n    methods: {\n        setValue(value){\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        onInput(event){\n            this.textState = event.target.value;\n            this.setValue(this.textState);\n        }\n    }\n}","﻿import { TextBox } from \"../textbox\";\nexport default {\n    name: 'GridBodyCell',\n    props: {\n        row: Object,\n        column: Object,\n        rowIndex: Number\n    },\n    data() {\n        return {\n            error: null\n        }\n    },\n    computed: {\n        grid() {\n            let t = this;\n            while (t.$options.name !== 'DataGrid' && t.$options.name !== 'TreeGrid') {\n                t = t.$parent;\n            }\n            return t;\n        }\n    },\n    methods: {\n        onKeyDown(event) {\n            if (this.grid.editMode == 'cell') {\n                setTimeout(() => {\n                    if (event.which == 13) {\n                        event.stopPropagation();\n                        this.grid.endEdit();\n                    } else if (event.which == 27) {\n                        event.stopPropagation();\n                        this.grid.cancelEdit();\n                    }\n                });\n            }\n        },\n        onValidate(errors) {\n            if (!this.grid.editingItem) {\n                return;\n            }\n            const field = this.column.field;\n            let error = errors[field];\n            error = error ? error[0] : null;\n            this.error = error;\n            let editingItem = this.grid.editingItem;\n            editingItem.errors = editingItem.errors || {};\n            Object.assign(editingItem.errors, { [field]: errors[field] });\n            let errCount = 0;\n            for (let field in editingItem.errors) {\n                errCount += editingItem.errors[field].length;\n            }\n            editingItem.invalid = errCount > 0;\n            this.grid.$emit('editValidate', editingItem);\n        }\n    },\n    render() {\n        let isEditable = this.$parent.isEditable(this.row, this.column);\n        let cell = null;\n        if (isEditable) {\n            if (this.column.$slots['edit']) {\n                cell = this.column.$slots['edit']({\n                    row: this.row,\n                    column: this.column,\n                    rowIndex: this.rowIndex,\n                    error: this.error\n                });\n                cell.forEach(c => {\n                    c.props.name = this.column.field;\n                });\n            } else {\n                cell = (\n                    <TextBox\n                        class=\"f-full\"\n                        name={this.column.field}\n                        value={this.row[this.column.field]}\n                        onValueChange={e => {\n                            this.row[this.column.field] = e.currentValue;\n                            this.$refs.form.validate();\n                        }}\n                    />\n                )\n            }\n            cell = (\n                <Form\n                    ref=\"form\"\n                    class=\"f-column\"\n                    model={this.row}\n                    rules={{ [this.column.field]: this.column.editRules }}\n                    messages={{ [this.column.field]: this.column.editMessages }}\n                    onValidate={errors => {\n                        this.onValidate(errors);\n                    }}\n                    onSubmit={event => event.preventDefault()}\n                    onKeydown={this.onKeyDown}\n                    v-Tooltip={Object.assign({\n                        closed: !this.error,\n                        content: this.error\n                    }, this.grid.tipOptions)}\n                >\n                    {cell}\n                </Form>\n            )\n        } else {\n            if (this.column.$slots['body']) {\n                cell = this.column.$slots['body']({\n                    row: this.row,\n                    column: this.column,\n                    rowIndex: this.rowIndex\n                });\n            } else if (this.column.$slots['cell']) {\n                cell = this.column.$slots['cell']({\n                    row: this.row,\n                    column: this.column,\n                    rowIndex: this.rowIndex\n                });\n            } else {\n                cell = this.row[this.column.field];\n                // cell = String(this.row[this.column.field]);\n            }\n        }\n        return (\n            <div\n                class={['datagrid-cell', { 'datagrid-editable': isEditable }]}\n                style={{ textAlign: this.column.align || null }}\n            >\n                {cell}\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'DataGridRowDetail',\n    props: {\n        gridBody: Object,\n        row: Object,\n        rowIndex: Number\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        }\n    },\n    render() {\n        if (this.gridBody.view.viewIndex == 2) {\n            return (\n                <div class=\"datagrid-row-detail\">\n                    {\n                        this.grid.$slots['detail']({\n                            row: this.row,\n                            rowIndex: this.rowIndex\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return '';\n        }\n    }\n}","﻿import {h} from 'vue';\n\nexport default {\n    name: 'DataGridRowGroup',\n    props: {\n        row: Object,\n        left: Number,\n        grid: Object\n    },\n    render(){\n        return h(\n            'div',\n            {\n                'class':'datagrid-group-title',\n                'style':{left:this.left+'px'}\n            },\n            [\n                this.grid.$slots['group'] ? this.grid.$slots['group']({\n                    value: this.row.value,\n                    rows: this.row.rows\n                }) : this.row.value\n            ]\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridBodyCell from '../gridbase/GridBodyCell';\nimport DataGridRowDetail from './DataGridRowDetail';\nimport DataGridRowGroup from './DataGridRowGroup';\n\nexport default {\n    name: 'DataGridTable',\n    components: {\n        GridBodyCell,\n        DataGridRowDetail,\n        DataGridRowGroup\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        gridBody: Object\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        }\n    },\n    methods: {\n        showExpandIcon() {\n            if (this.grid.leftColumns) {\n                if (this.gridBody.view.viewIndex == 1) {\n                    return true;\n                }\n            } else if (this.gridBody.view.viewIndex == 2) {\n                return true;\n            }\n            return false;\n        },\n        groupTitleWidth() {\n            return domHelper.outerWidth(this.$refs.groupTitleRef);\n        },\n        titleLeft() {\n            if (this.gridBody.view.viewIndex == 2) {\n                if (this.grid.leftColumns) {\n                    if (this.grid.view1) {\n                        let width = domHelper.outerWidth(this.grid.$refs.view1.$refs.body.$refs.bodyRef);\n                        return width - this.grid.expanderWidth;\n                    }\n                }\n            }\n            return null;\n        },\n        onRowClick(row) {\n            this.grid.onRowClick(row);\n        },\n        onRowDblClick(row) {\n            this.grid.$emit('rowDblClick', row);\n        },\n        onRowContextMenu(row, event) {\n            this.grid.$emit('rowContextMenu', { row: row, originalEvent: event });\n        },\n        onCellClick(row, col, event) {\n            let cellEl = domHelper.closest(event.currentTarget, '.datagrid-td');\n            let rowEl = domHelper.closest(cellEl, '.datagrid-row');\n            this.grid.onCellClick(row, col, event);\n            if (this.grid.clickToEdit || (this.grid.dblclickToEdit && this.grid.editingItem)) {\n                this.doEdit(row, col, rowEl, cellEl);\n            }\n        },\n        onCellDblClick(row, col, event) {\n            let cellEl = domHelper.closest(event.currentTarget, '.datagrid-td');\n            let rowEl = domHelper.closest(cellEl, '.datagrid-row');\n            this.grid.$emit('cellDblClick', { row: row, column: col });\n            if (this.grid.dblclickToEdit) {\n                this.doEdit(row, col, rowEl, cellEl);\n            }\n        },\n        onCellContextMenu(row, col, event) {\n            this.grid.$emit('cellContextMenu', { row: row, column: col, originalEvent: event });\n        },\n        onCellKeyDown() {\n            // if (this.grid.editMode == 'cell'){\n            //     setTimeout(() => {\n            //         if (event.which == 13){\n            //             event.stopPropagation();\n            //             this.grid.endEdit();\n            //         } else if (event.which == 27){\n            //             event.stopPropagation();\n            //             this.grid.cancelEdit();\n            //         }\n            //     });\n            // }\n        },\n        doEdit(row, col, rowEl, cellEl) {\n            this.grid.beginEdit(row, col, rowEl);\n            setTimeout(() => {\n                let input = cellEl.querySelector('.textbox-text');\n                if (input) {\n                    input.focus();\n                }\n            });\n        },\n        onGroupExpanderClick(value, event) {\n            event.stopPropagation();\n            this.grid.toggleGroup(value);\n        },\n        onDetailExpanderClick(row, event) {\n            event.stopPropagation();\n            this.grid.toggleRow(row);\n        },\n        getRowIndex(rowIndex, row) {\n            if (this.grid.groupField) {\n                rowIndex = row._rowIndex;\n            }\n            return this.grid.getAbsoluteIndex(rowIndex);\n        },\n        getCss(css, row, value, type) {\n            if (css) {\n                let cssValue = typeof css == 'function' ? css(row, value) : css;\n                if (type == 'class') {\n                    return typeof cssValue == 'string' ? cssValue : null;\n                } else {\n                    return typeof cssValue == 'object' ? cssValue : null;\n                }\n            }\n            return null;\n        },\n        getRowClass(row) {\n            return this.getCss(this.grid.rowCss, row, null, 'class');\n        },\n        getRowStyle(row) {\n            return this.getCss(this.grid.rowCss, row, null, 'style');\n        },\n        getCellClass(column, row) {\n            return this.getCss(column.cellCss, row, row[column.field], 'class');\n        },\n        getCellStyle(column, row) {\n            return this.getCss(column.cellCss, row, row[column.field], 'style');\n        },\n        isEditable(row, col) {\n            if (this.grid.isEditing(row, col)) {\n                if (col.editable) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getCellSpan(row, column, rowIndex) {\n            return this.grid.cellSpan({ row, column, rowIndex });\n        },\n        hasCellSpan(row, column, rowIndex) {\n            const span = this.getCellSpan(row, column, rowIndex);\n            return span.rowspan && span.colspan;\n        },\n        renderGroupRow(row) {\n            if (!row || !this.grid.isGroupRow(row)) {\n                return null;\n            }\n            return (\n                <tr class=\"datagrid-row datagrid-group-row\">\n                    <td class=\"datagrid-td-group\" colspan={this.columns.length}>\n                        <div class=\"datagrid-group f-row\">\n                            {\n                                this.showExpandIcon() &&\n                                <span\n                                    class=\"datagrid-group-expander f-row f-content-center f-noshrink\"\n                                    style={{ width: this.grid.expanderWidth + 'px' }}\n                                    onClick={event => this.onGroupExpanderClick(row.value, event)}>\n                                    <span class={'datagrid-row-expander' + (row.collapsed ? ' datagrid-row-expand' : ' datagrid-row-collapse')}>\n                                    </span>\n                                </span>\n                            }\n                            <DataGridRowGroup grid={this.grid} left={-this.titleLeft()} row={row}></DataGridRowGroup>\n                        </div>\n                    </td>\n                </tr>\n            )\n        },\n        renderDefaultRow(row, rowIndex) {\n            if (!row || this.grid.isGroupRow(row)) {\n                return null;\n            }\n            return (\n                <tr class={'datagrid-row ' + this.getRowClass(row) + (this.grid.isHighlighted(row) ? ' datagrid-row-over' : '') + (this.grid.isSelected(row) ? ' datagrid-row-selected' : '') + (this.grid.striped && this.getRowIndex(rowIndex) % 2 ? ' datagrid-row-alt' : '')}\n                    style={this.getRowStyle(row)}\n                    onMouseenter={() => this.grid.highlightRow = row}\n                    onMouseleave={() => this.grid.highlightRow = null}\n                    onClick={event => this.onRowClick(row, event)}\n                    onDblclick={event => this.onRowDblClick(row, event)}\n                    onContextmenu={event => this.onRowContextMenu(row, event)}>\n                    {\n                        this.columns.map(col => (\n                            <>\n                                {\n                                    col.expander &&\n                                    <td class=\"datagrid-td-expander\">\n                                        <div class=\"datagrid-cell f-row f-content-center\">\n                                            <span class={'datagrid-row-expander' + (this.grid.isRowExpanded(row) ? ' datagrid-row-collapse' : ' datagrid-row-expand')}\n                                                onClick={event => this.onDetailExpanderClick(row, event)}>\n                                            </span>\n                                        </div>\n                                    </td>\n                                }\n                                {\n                                    !col.expander && this.hasCellSpan(row, col, rowIndex) &&\n                                    <td\n                                        class={'datagrid-td ' + this.getCellClass(col, row) + (this.grid.isSelected(row, col) ? ' datagrid-row-selected' : '') + (this.grid.isHighlighted(row, col) ? ' datagrid-row-over' : '')}\n                                        style={this.getCellStyle(col, row)}\n                                        rowspan={this.getCellSpan(row, col, rowIndex).rowspan}\n                                        colspan={this.getCellSpan(row, col, rowIndex).colspan}\n                                        onMouseenter={() => this.grid.highlightCell = { row: row, column: col }}\n                                        onMouseleave={() => this.grid.highlightCell = null}\n                                        onClick={event => this.onCellClick(row, col, event)}\n                                        onDblclick={event => this.onCellDblClick(row, col, event)}\n                                        onContextmenu={event => this.onCellContextMenu(row, col, event)}\n                                        onKeydown={event => this.onCellKeyDown(row, col, event)}>\n                                        <GridBodyCell row={row} column={col} rowIndex={this.getRowIndex(rowIndex, row)}></GridBodyCell>\n                                    </td>\n                                }\n                            </>\n\n                        ))\n                    }\n                </tr>\n            )\n        },\n        renderDetailRow(row, rowIndex) {\n            if (this.grid.$slots['detail'] && this.grid.isRowExpanded(row) && !this.grid.isGroupRow(row)) {\n                return (\n                    <tr>\n                        <td colspan={this.columns.length}>\n                            <DataGridRowDetail gridBody={this.gridBody} row={row} rowIndex={this.getRowIndex(rowIndex, row)}></DataGridRowDetail>\n                        </td>\n                    </tr>\n                )\n            } else {\n                return null;\n            }\n        }\n\n    },\n    render() {\n        return (\n            <table class=\"datagrid-btable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                <colgroup>\n                    {\n                        this.columns.map(col => (\n                            <col style={{ width: col.widthState }}></col>\n                        ))\n                    }\n                </colgroup>\n                <tbody>\n                    {\n                        (this.rows || []).map((row, rowIndex) => (\n                            <>\n                                {\n                                    this.renderGroupRow(row)\n                                }\n                                {\n                                    this.renderDefaultRow(row, rowIndex)\n                                }\n                                {\n                                    this.renderDetailRow(row, rowIndex)\n                                }\n                            </>\n                        ))\n                    }\n                </tbody>\n            </table>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridBody from '../gridbase/GridBody';\nimport DataGridTable from './DataGridTable';\n// import { DomHelper } from '../base/DomHelper';\n\nexport default {\n    name: 'DataGridBody',\n    extends: GridBody,\n    components: {\n        DataGridTable\n    },\n    data() {\n        return {\n            marginTop: 0,\n            currRows: []\n        }\n    },\n    computed: {\n        view() {\n            return this.$parent;\n        },\n        isVirtualScroll() {\n            if (this.view.grid.virtualScroll && this.view.viewIndex == 2) {\n                return true;\n            } else {\n                return false;\n            }\n\n        }\n    },\n    watch: {\n        rows() {\n            // this.currRows = this.rows;\n            // if (this.view.grid.virtualScroll && this.view.viewIndex != 2){\n            //     this.currRows = this.rows.slice(0, this.view.grid.pageSize*2);\n            // }\n            if (this.view.grid.virtualScroll) {\n                this.currRows = this.rows.slice(0, this.view.grid.pageSize * 2);\n            } else {\n                this.currRows = this.rows;\n            }\n        }\n    },\n    methods: {\n        scrollTop(value) {\n            if (value == undefined) {\n                if (this.isVirtualScroll) {\n                    return this.$refs.vscroll.relativeScrollTop();\n                } else {\n                    return this.$refs.bodyRef.scrollTop;\n                }\n            } else {\n                if (!this.isVirtualScroll) {\n                    this.marginTop = -value;\n                }\n            }\n        },\n        scrollbarWidth() {\n            if (this.$refs.vscroll) {\n                return this.$refs.vscroll.scrollbarWidth();\n            } else {\n                return domHelper.outerWidth(this.$refs.bodyRef) - domHelper.outerWidth(this.$refs.innerRef);\n            }\n        },\n        onVirtualScroll(event) {\n            this.$emit('bodyScroll', event);\n        },\n        onVirtualPageChange(event) {\n            this.view.grid.onVirtualPageChange(event);\n        },\n        onVirtualPageUpdate(event) {\n            this.currRows = event;\n            this.view.grid.updateFrozenView(this.$refs.vscroll ? this.$refs.vscroll.scrollTop : 0, this.currRows);\n        }\n    },\n    render() {\n        return (\n            <div ref=\"bodyRef\" class={'datagrid-body f-full' + (this.isVirtualScroll ? ' datagrid-vbody f-column' : '')} style=\"margin-top:0\" onScroll={this.onScroll}>\n                <div ref=\"innerRef\" class={'datagrid-body-inner' + (this.isVirtualScroll ? ' f-column f-full panel-noscroll' : '')} style={{ marginTop: this.marginTop + 'px' }}>\n                    {\n                        !this.isVirtualScroll &&\n                        <DataGridTable columns={this.columns} rows={this.currRows} gridBody={this}></DataGridTable>\n                    }\n                    {\n                        this.isVirtualScroll &&\n                        <VirtualScroll ref=\"vscroll\"\n                            class=\"f-full\"\n                            data={this.rows}\n                            total={this.view.grid.total}\n                            pageSize={this.view.grid.pageSize}\n                            rowHeight={this.view.grid.rowHeight}\n                            lazy={this.view.grid.lazy}\n                            pageNumber={this.view.grid.pageNumber}\n                            onUpdate={this.onVirtualPageUpdate}\n                            onBodyScroll={this.onVirtualScroll}\n                            onPageChange={this.onVirtualPageChange}\n                        >\n                            <DataGridTable columns={this.columns} rows={this.currRows} gridBody={this}></DataGridTable>\n                        </VirtualScroll>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","﻿import GridView from '../gridbase/GridView';\nimport DataGridBody from './DataGridBody';\n\nexport default {\n    name: 'DataGridView',\n    extends: GridView,\n    components: {\n        DataGridBody\n    },\n    computed: {\n        grid() {\n            return this.$parent;\n        }\n    },\n    methods: {\n        onHeaderCellClick(event) {\n            let col = event.column;\n            if (col.sortable) {\n                this.grid.addSort(event.column);\n                this.grid.setData(this.grid.innerData);\n                if (this.$refs.body.vscroll) {\n                    this.$refs.body.vscroll.refresh();\n                }\n                this.grid.$emit('sortChange', this.grid.sortsState);\n            }\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.viewCls}>\n                {\n                    this.grid.showHeader &&\n                    <GridHeader ref=\"header\"\n                        columnGroup={this.columnGroup}\n                        columns={this.columns}\n                        paddingWidth={this.headerPaddingWidth}\n                        grid={this.grid}\n                        onCellClick={this.onHeaderCellClick}>\n                    </GridHeader>\n                }\n                <DataGridBody ref=\"body\" align=\"center\"\n                    columns={this.columns}\n                    rows={this.rows}\n                    onBodyScroll={this.onBodyScroll}>\n                </DataGridBody>\n                {\n                    this.grid.showFooter &&\n                    <GridFooter ref=\"footer\"\n                        columns={this.columns}\n                        rows={this.footerRows}\n                        paddingWidth={this.headerPaddingWidth}>\n                    </GridFooter>\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Pagination from '../pagination/Pagination';\nimport ListBase from '../base/ListBase';\nimport GridBase from '../gridbase/GridBase';\nimport GridEmpty from '../gridbase/GridEmpty';\nimport DataGridView from './DataGridView';\n\nexport default {\n    name: 'DataGrid',\n    extends: GridBase,\n    components: {\n        Pagination,\n        DataGridView,\n        GridEmpty\n    },\n    props: {\n        groupField: String,\n        expanderWidth: {\n            type: Number,\n            default: 30\n        },\n        aggregate: Function\n    },\n    data() {\n        return {\n            groupData: [],\n            expandedRows: [],\n            frozenRows: [],\n            splitStyle: null\n        }\n    },\n    watch: {\n        rows() {\n            if (!this.virtualScroll) {\n                this.frozenRows = this.rows;\n            }\n        }\n    },\n    methods: {\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            ListBase.methods.setData.call(this, value);\n            this.frozenRows = this.virtualScroll ? [] : this.rows;\n        },\n        setGroupData() {\n            if (this.groupField) {\n                if (!this.isGrouped(this.filteredData)) {\n                    this.groupData = this.makeGroup(this.filteredData);\n                    this.filteredData = this.makeGroupedRows();\n                    let index = 0;\n                    this.filteredData.forEach(row => {\n                        if (!this.isGroupRow(row)) {\n                            row._rowIndex = index++;\n                        }\n                    });\n                }\n            }\n        },\n        setPageData() {\n            if (this.groupField) {\n                const dataRows = this.makeGroupedRows();\n                const getIndex = (index) => {\n                    let count = 0;\n                    let currIndex = 0;\n                    if (index === 0) {\n                        return 0;\n                    }\n                    for (let i = 0; i < dataRows.length && count < index; i++) {\n                        let row = dataRows[i];\n                        if (!this.isGroupRow(row)) {\n                            count++;\n                            currIndex = i;\n                        } else {\n                            let group = this.getGroup(row.value);\n                            if (group) {\n                                row.collapsed = group.collapsed;\n                            }\n                        }\n                    }\n                    return currIndex + 1;\n                }\n                let start = (this.pageNumberState - 1) * this.pageSizeState;\n                let end = start + (+this.pageSizeState);\n                let rows = dataRows.slice(getIndex(start), getIndex(end));\n                let groupedRows = dataRows.filter(row => this.isGroupRow(row));\n                this.totalState = dataRows.length - groupedRows.length;\n                let lastRows = [];\n                let pageCount = (!this.totalState ? 0 : Math.ceil(this.totalState / this.pageSizeState) || 1);\n                if (this.pageNumberState === pageCount) {\n                    for (let i = groupedRows.length - 1; i >= 0; i--) {\n                        let row = groupedRows[i];\n                        if (row.collapsed) {\n                            lastRows.unshift(row);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                this.rows = rows.concat(lastRows);\n            } else {\n                ListBase.methods.setPageData.call(this);\n            }\n        },\n        updateFrozenView(scrollTop, rows) {\n            if (rows) {\n                this.frozenRows = rows;\n            }\n            if (this.$refs.view1) {\n                this.$refs.view1.scrollTop(scrollTop);\n            }\n            if (this.$refs.view3) {\n                this.$refs.view3.scrollTop(scrollTop);\n            }\n        },\n        onBodyScroll(event) {\n            this.updateFrozenView(event.relativeTop || event.top, event.items);\n        },\n        getRowIndex(row) {\n            let body = this.$refs.view2.$refs.body;\n            let index = body.currRows.indexOf(row);\n            if (index == -1) {\n                return -1;\n            }\n            if (body.$refs.vscroll) {\n                return index + body.$refs.vscroll.startIndex;\n            } else if (this.pagination) {\n                return index + (this.pageNumberState - 1) * this.pageSizeState;\n            } else {\n                return index;\n            }\n        },\n        getAbsoluteIndex(index) {\n            let body = this.$refs.view2.$refs.body;\n            if (body.$refs.vscroll) {\n                return index + body.$refs.vscroll.startIndex;\n            } else if (this.pagination) {\n                return index + (this.pageNumberState - 1) * this.pageSizeState;\n            } else {\n                return index;\n            }\n        },\n        scrollTo(row) {\n            let index = this.$refs.view2.$refs.body.currRows.indexOf(row);\n            if (index >= 0) {\n                let body = this.$refs.view2.$refs.body.$refs.bodyRef;\n                let tr = body.querySelector('table>tbody>tr:nth-child(' + (index + 1) + ')');\n                domHelper.scrollTo(body, tr);\n                this.updateFrozenView(this.$refs.view2.$refs.body.scrollTop(), this.rows);\n            }\n        },\n        sortData() {\n            if (!this.sortsState || !this.sortsState.length) {\n                return;\n            }\n            let cc = [];\n            for (let i = 0; i < this.sortsState.length; i++) {\n                cc.push(this.findColumn(this.sortsState[i].field));\n            }\n            let sortFunc = (a, b) => {\n                return a == b ? 0 : (a > b ? 1 : -1);\n            };\n            this.innerData.sort((r1, r2) => {\n                let r = 0;\n                for (let i = 0; i < this.sortsState.length; i++) {\n                    let sort = this.sortsState[i];\n                    if (cc[i] && cc[i].sorter) {\n                        r = cc[i].sorter(r1, r2);\n                    } else {\n                        r = sortFunc(r1[sort.field], r2[sort.field]);\n                    }\n                    r = r * (sort.order == 'asc' ? 1 : -1);\n                    if (r != 0) {\n                        return r;\n                    }\n                }\n                return r;\n            });\n        },\n\n        isGroupRow(row) {\n            return row._groupRow ? true : false;\n        },\n        isGrouped(data) {\n            if (data && data.length) {\n                if (this.isGroupRow(data[0])) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getGroup(value, groups) {\n            if (!groups) {\n                groups = this.groupData;\n            }\n            for (let group of groups) {\n                if (group.value == value) {\n                    return group;\n                }\n            }\n            return null;\n        },\n        makeGroup(data) {\n            let groups = [];\n            for (let row of data) {\n                if (!this.isGroupRow(row)) {\n                    let group = this.getGroup(row[this.groupField], groups);\n                    if (group) {\n                        group.rows.push(row);\n                    } else {\n                        group = {\n                            value: row[this.groupField],\n                            collapsed: false,\n                            rows: [row]\n                        };\n                        groups.push(group);\n                    }\n                }\n            }\n            if (this.aggregate) {\n                groups.forEach(group => {\n                    const row = this.aggregate(group.rows);\n                    group.rows.push(row);\n                })\n            }\n            return groups;\n        },\n        makeGroupedRows() {\n            let rows = [];\n            for (let group of this.groupData) {\n                rows.push({\n                    _groupRow: true,\n                    value: group.value,\n                    rows: group.rows,\n                    collapsed: group.collapsed\n                });\n                if (!group.collapsed) {\n                    rows = rows.concat(group.rows);\n                }\n            }\n            return rows;\n        },\n        collapseGroup(value) {\n            let group = this.getGroup(value);\n            if (group) {\n                group.collapsed = true;\n                this.rows = this.makeGroupedRows();\n                if (this.pagination && !this.lazy) {\n                    this.setPageData();\n                }\n                this.$emit('groupCollapse', group);\n            }\n        },\n        expandGroup(value) {\n            let group = this.getGroup(value);\n            if (group) {\n                group.collapsed = false;\n                this.rows = this.makeGroupedRows();\n                if (this.pagination && !this.lazy) {\n                    this.setPageData();\n                }\n                this.$emit('groupExpand', group);\n            }\n        },\n        toggleGroup(value) {\n            let group = this.getGroup(value);\n            if (group) {\n                if (group.collapsed) {\n                    this.expandGroup(value);\n                } else {\n                    this.collapseGroup(value);\n                }\n            }\n        },\n        getExpandedIndex(row) {\n            if (this.idField) {\n                for (let i = 0; i < this.expandedRows.length; i++) {\n                    if (this.expandedRows[i][this.idField] == row[this.idField]) {\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return this.expandedRows.indexOf(row);\n            }\n        },\n        isRowExpanded(row) {\n            let index = this.getExpandedIndex(row);\n            return index != -1;\n        },\n        collapseRow(row) {\n            let index = this.getExpandedIndex(row);\n            if (index >= 0) {\n                this.expandedRows.splice(index, 1);\n                this.$emit('rowCollapse', row);\n            }\n        },\n        expandRow(row) {\n            if (!this.isRowExpanded(row)) {\n                this.expandedRows.push(row);\n                this.$emit('rowExpand', row);\n            }\n        },\n        toggleRow(row) {\n            if (this.isRowExpanded(row)) {\n                this.collapseRow(row);\n            } else {\n                this.expandRow(row);\n            }\n        },\n        renderPagination(position) {\n            if (!this.pagination) {\n                return null;\n            }\n            if (this.pagePosition != 'both' && this.pagePosition != position) {\n                return null;\n            }\n            return (\n                <Pagination class=\"datagrid-pager datagrid-pager-top f-noshrink\"\n                    total={this.totalState}\n                    pageSize={this.pageSizeState}\n                    pageNumber={this.pageNumberState}\n                    layout={this.pageLayout}\n                    pageList={this.pageList}\n                    links={this.pageLinks}\n                    loading={this.loading}\n                    onPageChange={this.onPageChange}\n                >\n                    {this.$slots['tpl'] && this.$slots['tpl']({ datagrid: this })}\n                </Pagination>\n            )\n        }\n\n    },\n    render() {\n        let bodyCls = 'panel-body panel-body-noheader datagrid datagrid-wrap f-full f-column';\n        if (!this.border) {\n            bodyCls += ' panel-body-noborder';\n        }\n        return (\n            <div class=\"f-column panel-noscroll\">\n                <div style=\"display:none\">{this.$slots.default()}</div>\n                <div class={bodyCls}>\n                    {this.renderPagination('top')}\n                    <div ref=\"viewRef\" class=\"datagrid-view f-row f-full\">\n                        {\n                            (this.leftGroup || this.leftColumns) &&\n                            <DataGridView ref=\"view1\"\n                                key=\"view1\"\n                                viewIndex={1}\n                                columnGroup={this.leftGroup}\n                                columns={this.leftColumns}\n                                rows={this.frozenRows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.leftFrozenWidth }}\n                            />\n                        }\n                        <DataGridView ref=\"view2\"\n                            key=\"view2\"\n                            viewIndex={2}\n                            columnGroup={this.centerGroup}\n                            columns={this.centerColumns}\n                            rows={this.rows}\n                            footerRows={this.footerRows}\n                            onBodyScroll={this.onBodyScroll}\n                        />\n                        {\n                            (this.rightGroup || this.rightColumns) &&\n                            <DataGridView ref=\"view3\"\n                                key=\"view3\"\n                                viewIndex={3}\n                                columnGroup={this.rightGroup}\n                                columns={this.rightColumns}\n                                rows={this.frozenRows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.rightFrozenWidth }}\n                            />\n                        }\n                        {\n                            this.splitStyle && <div class=\"datagrid-split-proxy\" style={this.splitStyle}></div>\n                        }\n                    </div>\n                    {this.renderPagination('bottom')}\n                </div>\n                {\n                    this.emptyMsg && !this.rows.length && !this.loading &&\n                    <div class=\"datagrid-empty\">{this.emptyMsg}</div>\n                }\n                {\n                    this.loading &&\n                    <div class=\"datagrid-loading f-row\">\n                        <div class=\"datagrid-mask\"></div>\n                        <div class=\"datagrid-mask-msg\">{this.loadMsg}</div>\n                    </div>\n                }\n                {\n                    !this.rows.length && !this.loading &&\n                    <GridEmpty grid={this}></GridEmpty>\n                }\n            </div>\n        )\n    }\n\n}","﻿import InputBase from './InputBase';\n\nexport default {\n    name: 'SpinnerBase',\n    extends: InputBase,\n    props: {\n        reversed: {\n            type: Boolean,\n            default: false\n        },\n        spinners: {\n            type: Boolean,\n            default: true\n        },\n        spinAlign: {\n            type: String,\n            default: 'right'\n        },\n    },\n    methods: {\n        onClickUp() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            if (this.spinAlign == 'left' || this.spinAlign == 'right') {\n                this.doSpinUp();\n            } else {\n                this.reversed ? this.doSpinDown() : this.doSpinUp();\n            }\n        },\n        onClickDown() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            if (this.spinAlign == 'left' || this.spinAlign == 'right') {\n                this.doSpinDown();\n            } else {\n                this.reversed ? this.doSpinUp() : this.doSpinDown();\n            }\n        },\n        doSpinUp() { },\n        doSpinDown() { },\n        renderHorizontal() {\n            let upcls = 'spinner-button';\n            let downcls = 'spinner-button';\n            if (this.reversed) {\n                upcls += ' spinner-button-up';\n                downcls += ' spinner-button-down';\n            } else {\n                upcls += ' spinner-button-down';\n                downcls += ' spinner-button-up';\n            }\n            return (\n                <>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-left f-inline-row f-noshrink f-order1\" onClick={this.onClickDown}>\n                        <span class={upcls}></span>\n                    </span>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-right f-inline-row f-noshrink f-order5\" onClick={this.onClickUp}>\n                        <span class={downcls}></span>\n                    </span>\n                </>\n            )\n        },\n        renderVertical() {\n            let upcls = 'spinner-button';\n            let downcls = 'spinner-button';\n            if (this.reversed) {\n                upcls += ' spinner-button-up';\n                downcls += ' spinner-button-down';\n            } else {\n                upcls += ' spinner-button-down';\n                downcls += ' spinner-button-up';\n            }\n            return (\n                <>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-bottom f-noshrink\" onClick={this.onClickDown}>\n                        <span class={upcls}></span>\n                    </span>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-top f-noshrink\" onClick={this.onClickUp}>\n                        <span class={downcls}></span>\n                    </span>\n                </>\n            )\n        },\n        renderDefault() {\n            let cls = 'textbox-addon spinner-button-updown f-column f-noshrink';\n            if (this.spinAlign == 'left') {\n                cls += ' f-order1';\n            } else if (this.spinAlign == 'right') {\n                cls += ' f-order5';\n            }\n            return (\n                <>\n                    <span class={cls}>\n                        <span class=\"spinner-arrow spinner-button-top f-full\" onClick={this.onClickUp}>\n                            <span class=\"spinner-arrow-up\"></span>\n                        </span>\n                        <span class=\"spinner-arrow spinner-button-bottom f-full\" onClick={this.onClickDown}>\n                            <span class=\"spinner-arrow-down\"></span>\n                        </span>\n                    </span>\n                </>\n            )\n        },\n        renderOthers() {\n            if (!this.spinners) {\n                return null;\n            }\n            if (this.spinAlign === 'horizontal') {\n                return this.renderHorizontal();\n            } else if (this.spinAlign === 'vertical') {\n                return this.renderVertical();\n            } else {\n                return this.renderDefault();\n            }\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport SpinnerBase from '../base/SpinnerBase';\nimport InputBase from '../base/InputBase';\n\nexport default {\n    name: 'NumberBox',\n    extends: SpinnerBase,\n    props: {\n        value: Number,\n        min: Number,\n        max: Number,\n        increment: {\n            type: Number,\n            default: 1\n        },\n        precision: {\n            type: Number,\n            default: 0\n        },\n        decimalSeparator: {\n            type: String,\n            default: '.'\n        },\n        groupSeparator: {\n            type: String,\n            default: ''\n        },\n        prefix: {\n            type: String,\n            default: ''\n        },\n        suffix: {\n            type: String,\n            default: ''\n        }\n    },\n    created() {\n        this.setValue(this.parser.call(this, this.valueState));\n    },\n    mounted() {\n        domHelper.bind(this.$refs.inputRef, 'keypress', this.onKeyPress);\n        domHelper.bind(this.$refs.inputRef, 'blur', this.onBlur);\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$refs.inputRef);\n    },\n    methods: {\n        defaultTextFormatter(value){\n            return this.formatter.call(this, value);\n        },\n        setValue(value){\n            value = this.parser(value);\n            this.textState = this.formatter(value);\n            InputBase.methods.setValue.call(this, value);\n        },\n        onKeyPress(event){\n            if (this.focused){\n                if (event.keyCode == 13){\n                    this.onBlur();\n                }\n                return this.filter.call(this, event);\n            }\n        },\n        onBlur(){\n            let value = this.parser(this.textState);\n            this.setValue(value);\n        },\n        filter(e){\n            var s = this.text;\n            if (e.metaKey || e.ctrlKey){\n                return true;\n            }\n            if (['46','8','13','0'].indexOf(String(e.which)) !== -1){\n                return true;\n            }\n            let c = String.fromCharCode(e.which);\n            if (!c){\n                return true;\n            }\n            if (c == '-' || c == this.decimalSeparator){\n                return (s.indexOf(c) == -1) ? true : false;\n            } else if (c == this.groupSeparator){\n                return true;\n            } else if ('0123456789'.indexOf(c) >= 0){\n                return true;\n            } else {\n                return false;\n            }\n        },\n        formatter(value){\n            if (value == null){\n                return null;\n            }\n            value = parseFloat(value+'');\n            let s = this.precision != -1 ? value.toFixed(this.precision) : String(value);\n            let s1 = s;\n            let s2 = '';\n            let dpos = s.indexOf('.');\n            if (dpos >= 0){\n                s1 = s.substring(0, dpos);\n                s2 = s.substring(dpos+1, s.length);\n            }\n            if (this.groupSeparator){\n                let p = /(\\d+)(\\d{3})/;\n                while (p.test(s1)){\n                    s1 = s1.replace(p, '$1' + this.groupSeparator + '$2');\n                }\n            }\n            if (s2){\n                return this.prefix + s1 + this.decimalSeparator + s2 + this.suffix;\n            } else {\n                return this.prefix + s1 + this.suffix;\n            }\n        },\n        parser(s){\n            if (s == null){\n                return null;\n            }\n            s = (s+'').trim();\n            if (this.prefix) {\n                s = s.replace(new RegExp('\\\\'+this.prefix,'g'), '');\n            }\n            if (this.suffix) {\n                s = s.replace(new RegExp('\\\\'+this.suffix,'g'), '');\n            }\n            if (this.groupSeparator){\n                s = s.replace(new RegExp('\\\\'+this.groupSeparator,'g'), '');\n            }\n            if (this.decimalSeparator){\n                s = s.replace(new RegExp('\\\\'+this.decimalSeparator,'g'), '.')\n            }\n            s = s.replace(/\\s/g,'');\n            let v = parseFloat(s);\n            if (isNaN(v)){\n                return null;\n            } else {\n                if (this.precision != -1){\n                    v = parseFloat(v.toFixed(this.precision));\n                }\n                if (this.min != null && this.min > v){\n                    v = this.min;\n                }\n                if (this.max != null && this.max < v){\n                    v = this.max;\n                }\n                return v;\n            }\n        },\n        doSpinUp() {\n            let v = (this.valueState || 0) + this.increment;\n            this.setValue(this.parser(String(v)));\n        },\n        doSpinDown() {\n            let v = (this.valueState || 0) - this.increment;\n            this.setValue(this.parser(String(v)));\n        }\n                    \n    }\n}","﻿import FieldBase from '../base/FieldBase';\n\nexport default {\n    name: 'SwitchButton',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: {\n            type: Boolean,\n            default: false\n        },\n        modelValue: {\n            type: Boolean,\n            default: false\n        },\n        onText: {\n            type: String,\n            default: 'ON'\n        },\n        offText: {\n            type: String,\n            default: 'OFF'\n        },\n        handleText: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        inputId: String\n    },\n    computed: {\n        buttonClasses() {\n            return ['switchbutton f-inline-row', {\n                'switchbutton-readonly': this.readonly,\n                'switchbutton-disabled': this.disabled,\n                'switchbutton-checked': this.valueState\n            }];\n        }\n    },\n    data() {\n        return {\n            valueState: this.modelValue\n        }\n    },\n    watch: {\n        value() {\n            if (this.value !== this.valueState) {\n                this.valueState = this.value;\n            }\n        },\n        modelValue() {\n            if (this.modelValue !== this.valueState) {\n                this.valueState = this.modelValue;\n            }\n        }\n    },\n    methods: {\n        onClick(event) {\n            event.stopPropagation();\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            this.valueState = !this.valueState;\n            // this.$emit('input', this.valueState);\n            this.$emit('update:modelValue', this.valueState);\n        }\n    },\n    render() {\n        return (\n            <span class={this.buttonClasses} onClick={this.onClick}>\n                <span class=\"switchbutton-inner\">\n                    <span class=\"switchbutton-on\">\n                        <span class=\"f-row f-content-center\">{this.onText}</span>\n                    </span>\n                    <span class=\"switchbutton-handle\">\n                        <span class=\"f-row f-content-center\">{this.handleText}</span>\n                    </span>\n                    <span class=\"switchbutton-off\">\n                        <span class=\"f-row f-content-center\">{this.offText}</span>\n                    </span>\n                    <input class=\"switchbutton-value\" type=\"checkbox\" id={this.inputId} />\n                </span>\n            </span>\n        )\n    }\n}","﻿import FieldBase from '../base/FieldBase';\n\nexport default {\n    name: 'CheckBox',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: String,\n        name: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        inputId: String,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        modelValue: [Boolean, Array]\n    },\n    model: {\n        prop: 'modelValue',\n        event: 'modelChange'\n    },\n    data() {\n        return {\n            checked: false,\n            values: []\n        }\n    },\n    watch: {\n        modelValue() {\n            let previousChecked = this.checked;\n            this.initChecked();\n            if (previousChecked != this.checked) {\n                this.$emit('checkedChange', this.checked);\n            }\n        }\n    },\n    mounted() {\n        this.initChecked();\n    },\n    computed: {\n        checkClasses() {\n            return ['f-full', {\n                'checkbox-disabled': this.disabled,\n                'checkbox-checked': this.checked\n            }]\n        }\n    },\n    methods: {\n        initChecked() {\n            if (this.multiple) {\n                if (this.modelValue == null) {\n                    this.values = [];\n                } else {\n                    this.values = this.modelValue instanceof Array ? this.modelValue : [this.modelValue];\n                }\n                this.setChecked(this.values.indexOf(this.value) != -1);\n            } else {\n                this.setChecked(this.modelValue);\n            }\n        },\n        setChecked(value) {\n            this.$refs.inputRef.checked = value;\n            this.checked = value;\n        },\n        isChecked() {\n            return this.$refs.inputRef ? this.$refs.inputRef.checked : false;\n        },\n        onClickButton(event) {\n            event.preventDefault();\n            if (!this.disabled) {\n                this.setChecked(!this.isChecked());\n                this.updateValues();\n            }\n        },\n        onChange() {\n            this.updateValues();\n        },\n        updateValues() {\n            this.checked = this.isChecked();\n            if (this.multiple) {\n                if (this.checked) {\n                    this.values.push(this.value)\n                } else {\n                    this.values = this.values.filter(v => v != this.value);\n                }\n                // this.$emit('modelChange', this.values);\n                this.$emit('update:modelValue', this.values);\n            } else {\n                // this.$emit('modelChange', this.checked);\n                this.$emit('update:modelValue', this.checked);\n            }\n            this.$emit('checkedChange', this.checked);\n        }\n    },\n    render() {\n        return (\n            <span class={['f-inline-row checkbox', { 'checkbox-invalid': this.invalidState }]}>\n                <span class={this.checkClasses} onClick={this.onClickButton}>\n                    {\n                        this.checked &&\n                        <svg class=\"checkbox-inner\" xml:space=\"preserve\" focusable=\"false\" version=\"1.1\" viewBox=\"0 0 24 24\"><path d=\"M4.1,12.7 9,17.6 20.3,6.3\" fill=\"none\" stroke=\"white\"></path></svg>\n                    }\n                </span>\n                <div class=\"checkbox-value\">\n                    <input ref=\"inputRef\" id={this.inputId} type=\"checkbox\" name={this.name} disabled={this.disabled} onChange={this.onChange} />\n                </div>\n            </span>\n        )\n    }\n}","﻿import FieldBase from '../base/FieldBase';\n\nexport default {\n    name: 'RadioButton',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: String,\n        name: String,\n        inputId: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        modelValue: String\n    },\n    model: {\n        prop: 'modelValue',\n        event: 'modelChange'\n    },\n    data() {\n        return {\n            checked: false\n        }\n    },\n    watch: {\n        modelValue() {\n            this.initValue();\n        }\n    },\n    computed: {\n        radioClasses() {\n            return ['f-full', {\n                'radiobutton-disabled': this.disabled,\n                'radiobutton-checked': this.checked\n            }]\n        }\n    },\n    mounted() {\n        this.initValue();\n    },\n    methods: {\n        initValue() {\n            let checked = (this.value == this.modelValue);\n            this.setChecked(checked);\n        },\n        onClickButton() {\n            this.select();\n        },\n        onChange() {\n            this.select();\n        },\n        isChecked() {\n            return this.$refs.inputRef ? this.$refs.inputRef.checked : false;\n        },\n        setChecked(value) {\n            this.$refs.inputRef.checked = value;\n            this.checked = value;\n        },\n        select() {\n            if (this.disabled) {\n                return;\n            }\n            this.setChecked(true);\n            // this.$emit('modelChange', this.value);\n            this.$emit('update:modelValue', this.value);\n        }\n    },\n    render() {\n        return (\n            <span class={['f-inline-row radiobutton', { 'radiobutton-invalid': this.invalidState }]}>\n                <span class={this.radioClasses} onClick={this.onClickButton}>\n                    {\n                        this.checked &&\n                        <span class=\"radiobutton-inner\"></span>\n                    }\n                </span>\n                <div class=\"radiobutton-value\">\n                    <input ref=\"inputRef\" id={this.inputId} type=\"radio\" name={this.name} disabled={this.disabled} onChange={this.onChange} />\n                </div>\n            </span>\n        )\n    }\n}","﻿export default {\n    name: 'TreeNodeTitle',\n    props: {\n        tree: Object,\n        node: Object\n    },\n    render() {\n        let cell = this.node.text;\n        if (this.tree.$slots.default){\n            cell=this.tree.$slots.default({\n                node:this.node\n            })\n        }\n        return (\n            <span class=\"tree-title\">{cell}</span>\n        )\n    }\n}","﻿export default {\n    name: 'Form',\n    props: {\n        model: Object,\n        rules: Object,\n        messages: Object,\n        labelPosition: {\n            type: String,\n            default: 'before'\n        },\n        labelAlign: {\n            type: String,\n            default: 'left'\n        },\n        labelWidth: {\n            type: [Number, String],\n            default: 80\n        },\n        floatingLabel: {\n            type: Boolean,\n            default: false\n        },\n        errorType: {\n            type: String,\n            default: 'label'\n        },\n        tooltipPosition: {\n            type: String,\n            default: 'right'\n        }\n    },\n    data() {\n        return {\n            fields: [],\n            errors: {}\n        }\n    },\n    computed: {\n        valid() {\n            let count = 0;\n            for (let field in this.errors) {\n                count += this.errors[field].length;\n            }\n            return count == 0;\n        },\n        invalid() {\n            return !this.valid;\n        }\n    },\n    methods: {\n        fieldAdd(f) {\n            this.fields.push(f);\n            if (f.validateOnCreate) {\n                this.validateField(f);\n            }\n        },\n        fieldRemove(f) {\n            let index = this.fields.indexOf(f);\n            if (index >= 0) {\n                this.fields.splice(index, 1);\n            }\n        },\n        fieldFocus() {\n\n        },\n        fieldBlur(f) {\n            if (f.validateOnBlur) {\n                this.validateField(f);\n            }\n        },\n        fieldChange(f) {\n            if (f.validateOnChange) {\n                this.validateField(f);\n            }\n        },\n\n        validate(callback) {\n            let vtotal = this.fields.length;\n            let vcount = 0;\n            this.fields.forEach(field => {\n                this.validateField(field, () => {\n                    vcount++;\n                    if (vcount >= vtotal && callback) {\n                        callback(this.getErrors());\n                    }\n                });\n            });\n        },\n        validateField(field, callback) {\n            // let name = field.name;\n            let name = field.fieldName;\n            let vtotal = 1;\n            let vcount = 0;\n            let validity = () => {\n                let valid = this.errors[name].length == 0;\n                this.fields.filter(f => f.fieldName == name).forEach(f => f.setValid(valid));\n                vcount++;\n                if (vcount >= vtotal) {\n                    this.errors = Object.assign({}, this.errors);\n                    this.$emit('validate', this.errors);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n            let setMessage = (message, param) => {\n                param = param || [];\n                for (var i = 0; i < param.length; i++) {\n                    message = message.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), param[i]);\n                }\n                this.errors[name].push(message);\n            };\n            let doValidate = (vtype, vparam) => {\n                if (!vtype) {\n                    validity();\n                    return;\n                }\n                let value = this.model[name];\n                if (vtype != 'required') {\n                    if (window.ValidateRules['required']['validator'](value) == false) {\n                        validity();\n                        return;\n                    }\n                }\n                if (vparam && vparam.validator) {\n                    let result = vparam.validator(value);\n                    if (result instanceof Promise) {\n                        result.then(valid => {\n                            if (!valid) {\n                                setMessage(vparam.message);\n                            }\n                            validity();\n                        });\n                    } else {\n                        if (!result) {\n                            setMessage(vparam.message);\n                        }\n                        validity();\n                    }\n                    return;\n                }\n\n                let parts = /([a-zA-Z_]+)(.*)/.exec(vtype);\n                vtype = parts[1];\n                let paramStr = parts[2] || '';\n                let rule = window.ValidateRules[vtype];\n                if (rule) {\n                    let message = window.Locale.t('Rules.' + vtype, rule['message']);\n                    if (this.messages && this.messages[name]) {\n                        message = this.messages[name][vtype] || message;\n                    }\n                    let param = vparam || eval(paramStr) || [];\n                    let result = rule['validator'](value, param);\n                    if (result instanceof Promise) {\n                        result.then((valid) => {\n                            if (!valid) {\n                                setMessage(message, param);\n                            }\n                            validity();\n                        });\n                    } else {\n                        if (!result) {\n                            setMessage(message, param);\n                        }\n                        validity();\n                    }\n                } else {\n                    validity();\n                }\n            };\n\n            if (!this.rules) {\n                return;\n            }\n            this.errors[name] = [];\n            let rule = this.rules[name];\n            if (!rule) {\n                doValidate();\n                return;\n            }\n            if (rule instanceof Array) {\n                vtotal = rule.length;\n                for (let i = 0; i < rule.length; i++) {\n                    doValidate(rule[i]);\n                }\n            } else if (typeof rule == 'string') {\n                vtotal = 1;\n                doValidate(rule);\n            } else {\n                vtotal = Object.keys(rule).length;\n                for (let vtype in rule) {\n                    let vparam = rule[vtype];\n                    doValidate(vtype, vparam);\n                }\n            }\n        },\n        hasError(name) {\n            return this.getError(name) != null;\n        },\n        getError(name) {\n            let errors = this.errors[name];\n            return errors ? errors[0] : null;\n        },\n        getErrors(name) {\n            if (name) {\n                let errors = this.errors[name];\n                return errors.length ? errors : null;\n            } else {\n                if (this.valid) {\n                    return null;\n                } else {\n                    let errors = {};\n                    for (let field in this.errors) {\n                        if (this.errors[field].length) {\n                            errors[field] = this.errors[field];\n                        }\n                    }\n                    return errors;\n                }\n            }\n        },\n        getValue(name) {\n            return this.model[name];\n        },\n        isFocused(name) {\n            const ff = this.fields.filter(f => f.fieldName == name);\n            if (ff.length) {\n                return ff[0].focused || false;\n            }\n            return false;\n        }\n    },\n    render() {\n        return (\n            <form>\n                {this.$slots.default()}\n            </form>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'TooltipContent',\n    props: {\n        tooltipIdIndex: Number,\n        target: HTMLElement,\n        content: [String, Object],\n        component: [String, Object, Function],\n        propsData: Object,\n        store: Object,\n        tooltipCls: String,\n        tooltipStyle: Object,\n        zIndex: {\n            type: Number,\n            default: 11000000\n        },\n        position: {\n            type: String,\n            default: 'bottom'\n        },\n        trackMouse: {\n            type: Boolean,\n            default: false\n        },\n        trackMouseX: {\n            type: Number,\n            default: 0\n        },\n        trackMouseY: {\n            type: Number,\n            default: 0\n        },\n        deltaX: {\n            type: Number,\n            default: 0\n        },\n        deltaY: {\n            type: Number,\n            default: 0\n        },\n        valign: {\n            type: String,\n            default: 'middle'\n        },\n        showDelay: {\n            type: Number,\n            default: 200\n        },\n        hideDelay: {\n            type: Number,\n            default: 200\n        },\n        closed: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tooltipShow: Function,\n        tooltipHide: Function\n    },\n    data() {\n        return {\n            closedState: this.closed,\n            contentState: this.content,\n            left: 0,\n            top: 0,\n            targetWidth: 0,\n            targetHeight: 0,\n            tipWidth: 0,\n            tipHeight: 0,\n            showTimer: null,\n            hideTimer: null\n        }\n    },\n    watch: {\n        closed() {\n            this.setClosed(this.closed);\n        },\n        content() {\n            this.contentState = this.content;\n            if (this.$refs.tooltipRef) {\n                this.$nextTick(() => {\n                    this.setClosed(this.closedState)\n                })\n            }\n        }\n    },\n    computed: {\n        tooltipClasses() {\n            return ['tooltip', 'tooltip-' + this.position, this.tooltipCls];\n        },\n        tooltipStyles() {\n            return [this.tooltipStyle, {\n                left: this.left + 'px',\n                top: this.top + 'px',\n                display: 'block',\n                zIndex: this.zIndex\n            }];\n        }\n    },\n    mounted() {\n        window.EventHub.$on('tooltipUpdate', (props) => {\n            if (this.tooltipIdIndex == props.tooltipIdIndex) {\n                this.contentState = props.content;\n                this.setClosed(this.closedState)\n            }\n        })\n        window.EventHub.$on('tooltipShow', (props) => {\n            if (this.tooltipIdIndex == props.tooltipIdIndex) {\n                this.show();\n            }\n        })\n        window.EventHub.$on('tooltipHide', (props) => {\n            if (this.tooltipIdIndex == props.tooltipIdIndex) {\n                this.hide();\n            }\n        })\n    },\n    methods: {\n        onMouseEnter() {\n            this.show();\n        },\n        onMouseLeave() {\n            this.hide();\n        },\n        getPosition(pos = 'bottom') {\n            pos = pos || 'bottom';\n            let left = 0;\n            let top = 0;\n            let offset = domHelper.offset(this.target);\n            let targetWidth = this.targetWidth;\n            let targetHeight = this.targetHeight;\n            let tipWidth = this.tipWidth;\n            let tipHeight = this.tipHeight;\n            if (this.trackMouse) {\n                left = this.trackMouseX + this.deltaX;\n                top = this.trackMouseY + this.deltaY;\n                targetWidth = targetHeight = 0;\n            } else {\n                left = offset.left + this.deltaX;\n                top = offset.top + this.deltaY;\n            }\n            switch (pos) {\n                case 'right':\n                    left += targetWidth + 12 + (this.trackMouse ? 12 : 0);\n                    if (this.valign == 'middle') {\n                        top -= (tipHeight - targetHeight) / 2;\n                    }\n                    break;\n                case 'left':\n                    left -= tipWidth + 12 + (this.trackMouse ? 12 : 0);\n                    if (this.valign == 'middle') {\n                        top -= (tipHeight - targetHeight) / 2;\n                    }\n                    break;\n                case 'top':\n                    left -= (tipWidth - targetWidth) / 2;\n                    top -= tipHeight + 12 + (this.trackMouse ? 12 : 0);\n                    break;\n                case 'bottom':\n                    left -= (tipWidth - targetWidth) / 2;\n                    top += targetHeight + 12 + (this.trackMouse ? 12 : 0);\n                    break;\n            }\n            return {\n                left: left,\n                top: top\n            };\n        },\n        reposition() {\n            if (!this.$refs.tooltipRef) {\n                return;\n            }\n            let view = domHelper.getViewport();\n            let pos = this.getPosition(this.position);\n            if (this.position == 'top' && pos.top < domHelper.getScrollTop()) {\n                pos = this.getPosition('bottom');\n            } else if (this.position == 'bottom') {\n                if (pos.top + this.tipHeight > view.height + domHelper.getScrollTop()) {\n                    pos = this.getPosition('top');\n                }\n            }\n            if (pos.left < domHelper.getScrollLeft()) {\n                if (this.position == 'left') {\n                    pos = this.getPosition('right');\n                } else {\n                    let arrowLeft = this.tipWidth / 2 + pos.left - domHelper.getScrollLeft();\n                    this.$refs.arrowOuterRef.style.left = arrowLeft + 'px';\n                    this.$refs.arrowInnerRef.style.left = arrowLeft + 'px';\n                    pos.left = domHelper.getScrollLeft();\n                }\n            } else if (pos.left + this.tipWidth > view.width + domHelper.getScrollLeft()) {\n                if (this.position == 'right') {\n                    pos = this.getPosition('left');\n                } else {\n                    let arrowLeft = pos.left;\n                    pos.left = view.width + domHelper.getScrollLeft() - this.tipWidth;\n                    arrowLeft = this.tipWidth / 2 - (pos.left - arrowLeft);\n                    this.$refs.arrowOuterRef.style.left = arrowLeft + 'px';\n                    this.$refs.arrowInnerRef.style.left = arrowLeft + 'px';\n                }\n            }\n            this.left = pos.left;\n            this.top = pos.top;\n            let bc = 'border-' + this.position + '-color';\n            let borderColor = this.$refs.tooltipRef.style.borderColor;\n            let backColor = this.$refs.tooltipRef.style.backgroundColor;\n            this.$refs.arrowOuterRef.style[bc] = borderColor;\n            this.$refs.arrowInnerRef.style[bc] = backColor;\n        },\n        setClosed(closed) {\n            this.closedState = closed;\n            if (!this.closedState) {\n                this.$nextTick(() => {\n                    // this.$refs.tooltipRef.style.display = 'block';\n                    this.targetWidth = domHelper.outerWidth(this.target);\n                    this.targetHeight = domHelper.outerHeight(this.target);\n                    this.tipWidth = domHelper.outerWidth(this.$refs.tooltipRef);\n                    this.tipHeight = domHelper.outerHeight(this.$refs.tooltipRef);\n                    this.reposition();\n                    if (this.tooltipShow) {\n                        this.tooltipShow();\n                    }\n                });\n            } else {\n                if (this.tooltipHide) {\n                    this.tooltipHide();\n                }\n            }\n        },\n        show() {\n            if (this.disabled) {\n                return;\n            }\n            if (!this.contentState && !this.component) {\n                return;\n            }\n            this.clearTimeouts();\n            this.showTimer = setTimeout(() => {\n                this.setClosed(false);\n            }, this.showDelay);\n        },\n        hide() {\n            this.clearTimeouts();\n            this.hideTimer = setTimeout(() => {\n                this.setClosed(true);\n            }, this.hideDelay);\n        },\n        clearTimeouts() {\n            clearTimeout(this.showTimer);\n            clearTimeout(this.hideTimer);\n        }\n\n    },\n    render() {\n        if (this.closedState) {\n            return null;\n        }\n        if (!this.contentState) {\n            return null;\n        }\n        return (\n            <div ref=\"tooltipRef\" tabindex=\"-1\"\n                class={this.tooltipClasses}\n                style={this.tooltipStyles}\n                onMouseenter={this.onMouseEnter}\n                onMouseleave={this.onMouseLeave}>\n                <div class=\"tooltip-content\">\n                    {this.contentState}\n                </div>\n                <div ref=\"arrowOuterRef\" class=\"tooltip-arrow-outer\"></div>\n                <div ref=\"arrowInnerRef\" class=\"tooltip-arrow\"></div>\n            </div>\n        )\n    }\n}\n","﻿import { createVNode, render } from 'vue';\nimport domHelper from '../base/DomHelper';\nimport TooltipContent from './TooltipContent';\n\nlet getOptions = (el, value) => {\n    let opts = typeof value == 'object'\n        ? Object.assign({}, value)\n        : { content: String(value) };\n    return Object.assign({\n        showEvent: 'mouseenter',\n        hideEvent: 'mouseleave',\n        target: el\n    }, opts);\n};\n\nlet bindEvents = (el, showEvent = '', hideEvent = '') => {\n    let bind = (key, eventName, handler) => {\n        if (el[key]) {\n            if (el[key] != eventName) {\n                el[key].split(' ').forEach(event => {\n                    domHelper.unbind(el, event, handler);\n                });\n                el[key] = eventName;\n                el[key].split(' ').forEach(event => {\n                    domHelper.bind(el, event, handler);\n                });\n            }\n        } else {\n            el[key] = eventName;\n            el[key].split(' ').forEach(event => {\n                domHelper.bind(el, event, handler);\n            });\n        }\n    }\n    bind('_showEvent', showEvent, el._activeHandler);\n    bind('_hideEvent', hideEvent, el._deactiveHandler);\n};\n\nwindow.TooltipIdIndex = window.TooltipIdIndex || 1;\n\nexport default {\n    name: 'Tooltip',\n    mounted(el, binding) {\n        el._activeHandler = function () {\n            if (!el._tip) {\n                const Tip = createVNode(TooltipContent, {\n                    ...el._opts,\n                    store: el._opts.store,\n                    tooltipIdIndex: window.TooltipIdIndex++\n                });\n                el._tip = Tip;\n                render(Tip, document.querySelector('body'))\n            } else {\n                Object.assign(el._tip.props, el._opts);\n                window.EventHub.$emit('tooltipUpdate', el._tip.props)\n            }\n            window.EventHub.$emit('tooltipShow', el._tip.props)\n        };\n        el._deactiveHandler = function () {\n            if (el._tip) {\n                window.EventHub.$emit('tooltipHide', el._tip.props)\n                el._tip = null;\n            }\n        }\n        el._opts = getOptions(el, binding.value);\n        bindEvents(el, el._opts.showEvent, el._opts.hideEvent);\n    },\n    updated(el, binding) {\n        el._opts = getOptions(el, binding.value);\n        if (el._tip) {\n            Object.assign(el._tip.props, el._opts);\n            window.EventHub.$emit('tooltipUpdate', el._tip.props)\n        }\n        bindEvents(el, el._opts.showEvent, el._opts.hideEvent);\n    },\n    beforeUnmount(el) {\n        if (el._tip) {\n            el._tip = null;\n        }\n        bindEvents(el, '', '');\n    }\n}\n","﻿import domHelper from '../base/DomHelper';\nimport Form from '../form/Form';\nimport Tooltip from '../tooltip/Tooltip';\n\nexport default {\n    name: 'TreeNodeEditor',\n    components: {\n        Form\n    },\n    directives: {\n        Tooltip\n    },\n    props: {\n        tree: Object,\n        node: Object\n    },\n    data() {\n        return {\n            width: 50,\n            error: null\n        }\n    },\n    mounted() {\n        this.autoSizeInput();\n        const input = this.getInput();\n        domHelper.bind(input, 'keydown', this.onKeyDown);\n        this.$refs.form.validate();\n        this.$nextTick(() => input.focus());\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.getInput(), 'keydown', this.onKeyDown);\n    },\n    methods: {\n        onKeyDown(event) {\n            if (event.keyCode == 13) {   // enter\n                this.tree.endEdit();\n            } else if (event.keyCode == 27) {    // esc\n                this.tree.cancelEdit();\n            }\n            setTimeout(() => this.autoSizeInput())\n        },\n        getInput() {\n            return this.$el.querySelector('.textbox-text');\n        },\n        autoSizeInput() {\n            const input = this.getInput();\n            if (!input) {\n                return;\n            }\n            let style = getComputedStyle(input);\n            let tmp = document.createElement('span');\n            Object.assign(tmp.style, {\n                position: 'absolute',\n                top: -9999,\n                left: -9999,\n                width: 'auto',\n                fontFamily: style.fontFamily,\n                fontSize: style.fontSize,\n                fontWeight: style.fontWeight,\n                whiteSpace: 'nowrap'\n            });\n            tmp.innerHTML = input.value;\n            document.body.appendChild(tmp);\n\n            let getWidth = (val) => {\n                val = val || '';\n                var s = val.replace(/&/g, '&amp;').replace(/\\s/g, ' ').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n                tmp.innerHTML = s;\n                return domHelper.outerWidth(tmp);\n            };\n            let width = getWidth(input.value);\n            document.body.removeChild(tmp);\n            this.width = width + 50;\n        }\n    },\n    render() {\n        let editor = null;\n        if (this.tree.$slots.editor) {\n            editor = this.tree.$slots.editor(this.node);\n            editor[0].data.class = 'f-full';\n            // editor[0].data.style = {verticalAlign:'top',height:'auto'};\n        } else {\n            editor = (\n                <TextBox\n                    class=\"f-full\"\n                    name=\"text\"\n                    value={this.node.text}\n                    onValueChange={e => {\n                        this.node.text = e.currentValue;\n                        this.$refs.form.validate();\n                    }} />\n            )\n        }\n        return (\n            <Form\n                ref=\"form\"\n                class=\"tree-title tree-editing f-inline-row\"\n                style={{ width: this.width + 'px' }}\n                model={this.node}\n                rules={{ 'text': this.tree.editRules }}\n                onValidate={errors => {\n                    if (errors && errors['text'].length) {\n                        this.tree.editingItem.invalid = true;\n                        this.error = errors['text'][0];\n                    } else {\n                        this.tree.editingItem.invalid = false;\n                        this.error = null;\n                    }\n                }}\n                onSubmit={e => e.preventDefault()}\n                v-Tooltip={Object.assign({\n                    closed: !this.error,\n                    content: this.error\n                }, this.tree.tipOptions)}\n            >\n                {editor}\n            </Form>\n        )\n\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport { MyEvent } from '../base/DomHelper';\n\nclass DraggableClass {\n    constructor(el, value=null){\n        this.updateOptions(value);\n        this.$el = el;\n\t}\n\tupdateOptions(value){\n        let opts = Object.assign({\n\t\t\tscope: null,\n            handle: null,\n            disabled: false,\n            revert: false,\n            deltaX: null,\n            deltaY: null,\n            edge: 0,\n            delay: 100,\n            axis: null, // v or h\n            cursor: 'move',\n\t\t\tproxy: null,\n\t\t\tdragStart: () => {},\n\t\t\tdrag: () => {},\n\t\t\tdragEnd: () => {}\n        }, this, value||{});\n\t\tObject.assign(this, opts);\n\t}\n    bindEvents(){\n\t\tthis.$el._downHandler = (e) => {\n\t\t\tthis.onMouseDown(e);\n\t\t};\n        this.$el._moveHandler = (e) => {\n            this.onMouseMove(e);\n        };\n        this.$el._leaveHandler = (e) => {\n            this.onMouseLeave(e);\n        };\n        domHelper.bind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.bind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.bind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tunbindEvents(){\n        domHelper.unbind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tparseEvent(event) {\n\t\t// let touchEvents = ['touchstart','touchmove','touchend','touchcancel'];\n\t\t// if (touchEvents.indexOf(event.type) >= 0){\n\t\t// \tlet touch = event.touches[0] || event.changedTouches[0];\n\t\t// \tevent.pageX = touch.pageX;\n\t\t// \tevent.pageY = touch.pageY;\n\t\t// }\n\t\t// return event;\n\t\treturn new MyEvent(event);\n\t}\n\tgetHandle() {\n\t\tif (this.handle){\n\t\t\tif (this.handle instanceof Element){\n\t\t\t\treturn this.handle;\n\t\t\t} else {\n\t\t\t\treturn this.$el.querySelector(this.handle);\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.$el;\n\t\t}\n\t}\n\tcheckArea(e) {\n\t\tlet handle = this.getHandle();\n\t\tlet offset = domHelper.offset(handle);\n\t\tlet width = domHelper.outerWidth(handle);\n\t\tlet height = domHelper.outerHeight(handle);\n\t\tlet t = e.pageY - offset.top;\n\t\tlet r = offset.left + width - e.pageX;\n\t\tlet b = offset.top + height - e.pageY;\n\t\tlet l = e.pageX - offset.left;\n\t\t\n\t\treturn Math.min(t,r,b,l) > this.edge;\n\t}\n\tdoMove(event){\n\t\tevent = this.parseEvent(event);\n\t\tthis.state.pageX = event.pageX;\n\t\tthis.state.pageY = event.pageY;\n\t\tlet x1 = event.pageX;\n\t\tlet y1 = event.pageY;\n\t\tlet x2 = this.state.startX;\n\t\tlet y2 = this.state.startY;\n\t\tlet d = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n\t\tif (d > 3 && !this.isDragging){\n\t\t\tthis.isDragging = true;\n\t\t\tif (this.proxy){\n\t\t\t\tthis.proxy.closed = false;\n\t\t\t} else {\n\t\t\t\tthis.$el.style.position = 'absolute';\n\t\t\t}\n\t\t\tthis.doDrag(event);\n\t\t\tthis.applyDrag();\n\t\t\tthis.dragStart(this.state);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.isDragging){\n\t\t\tthis.doDrag(event);\n\t\t\tthis.applyDrag();\n\t\t\tthis.checkDrag(event);\n\t\t\tthis.drag(this.state);\n\t\t}\n\t\treturn false;\n\t}\n\tdoUp(event){\n\t\tif (!this.isDragging){\n\t\t\tthis.clearDragging();\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tthis.doMove(event);\n\t\tif (this.revert){\n\t\t\tif (this.checkDrop(event)){\n\t\t\t\tthis.restorePosition();\n\t\t\t} else {\n\t\t\t\tthis.revertPosition();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.$el.style.position = 'absolute';\n\t\t\tthis.$el.style.left = this.state.left+'px';\n\t\t\tthis.$el.style.top = this.state.top+'px';\n\t\t\tthis.checkDrop(event);\n\t\t}\n\t\tthis.clearDragging();\n\t\tthis.dragEnd(this.state);\n\t\treturn false;\n\t}\n\tdoDrag(e) {\n\t\tlet dragData = this.state;\n\t\tlet left = 0;\n\t\tlet top = 0;\n\t\tif (this.proxy){\n\t\t\tthis.proxy.reverting = false;\n\t\t\tif (this.deltaX != null){\n\t\t\t\tleft = e.pageX + this.deltaX;\n\t\t\t} else {\n\t\t\t\tleft = e.pageX - dragData.offsetWidth;\n\t\t\t}\n\t\t\tif (this.deltaY != null){\n\t\t\t\ttop = e.pageY + this.deltaY;\n\t\t\t} else {\n\t\t\t\ttop = e.pageY - dragData.offsetHeight;\n\t\t\t}\n\t\t} else {\n\t\t\tleft = dragData.startLeft + e.pageX - dragData.startX;\n\t\t\ttop = dragData.startTop + e.pageY - dragData.startY;\n\t\t}\n\t\tif (this.$el.parentNode != document.body){\n\t\t\tleft += this.$el.parentNode.scrollLeft;\n\t\t\ttop += this.$el.parentNode.scrollTop;\n\t\t}\n\t\tif (this.axis == 'h'){\n\t\t\tdragData.left = left;\n\t\t} else if (this.axis == 'v'){\n\t\t\tdragData.top = top;\n\t\t} else {\n\t\t\tdragData.left = left;\n\t\t\tdragData.top = top;\n\t\t}\n\t}\n\tapplyDrag() {\n\t\tif (this.proxy){\n\t\t\tthis.proxy.left = this.state.left;\n\t\t\tthis.proxy.top = this.state.top;\n\t\t} else {\n\t\t\tthis.$el.style.left = this.state.left+'px';\n\t\t\tthis.$el.style.top = this.state.top+'px';\n\t\t}\n\t\tdocument.body.style.cursor = this.cursor;\n\t}\n\tclearDragging() {\n\t\tthis.unbindDocumentEvents();\n\t\tthis.isDragging = false;\n\t\tsetTimeout(() => {\n\t\t\tdocument.body.style.cursor = '';\n\t\t});\n\t}\n\tfindDroppable(e) {\n\t\tfor(let i=DraggableClass.droppables.length-1; i>=0; i--){\n\t\t\tlet dropObj = DraggableClass.droppables[i];\n\t\t\tif (dropObj.disabled){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (dropObj.$el == this.$el){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet p2 = domHelper.offset(dropObj.$el);\n\t\t\tlet width = domHelper.outerWidth(dropObj.$el);\n\t\t\tlet height = domHelper.outerHeight(dropObj.$el);\n\t\t\tif (e.pageX > p2.left && e.pageX < p2.left + width\n\t\t\t\t\t&& e.pageY > p2.top && e.pageY < p2.top + height){\n\t\t\t\tif (dropObj.checkDrop(this.scope)){\n\t\t\t\t\treturn dropObj;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tcheckDrag(e) {\n\t\tlet dropObj = this.findDroppable(e);\n\t\tif (this.currDroppable && this.currDroppable != dropObj){\n\t\t\tif (this.entered){\n\t\t\t\tthis.entered = false;\n\t\t\t\tthis.currDroppable.dragLeave(this.scope);\n\t\t\t\tthis.currDroppable = null;\n\t\t\t}\n\t\t}\n\t\tif (dropObj){\n\t\t\tthis.currDroppable = dropObj;\n\t\t\tif (!this.entered){\n\t\t\t\tthis.entered = true;\n\t\t\t\tdropObj.dragEnter(this.scope);\n\t\t\t}\n\t\t\tdropObj.dragOver(this.scope);\n\t\t}\n\t}\n\tcheckDrop(e) {\n\t\tlet dropObj = this.findDroppable(e);\n\t\tif (dropObj){\n\t\t\tif (this.revert){\n\t\t\t\tthis.restorePosition();\n\t\t\t}\n\t\t\tthis.removeProxy();\n\t\t\tthis.entered = false;\n\t\t\tdropObj.drop(this.scope);\n\t\t\treturn true;\n\t\t}\n\t\tif (!this.revert){\n\t\t\tthis.removeProxy();\n\t\t}\n\t\treturn false;\n\t}\n\tremoveProxy() {\n\t\tif (this.proxy){\n\t\t\tthis.proxy.reverting = false;\n\t\t\tthis.proxy.closed = true;\n\t\t}\n\t}\n\trevertPosition() {\n\t\tif (this.proxy){\n\t\t\tif (this.state.startX != this.state.left || this.state.startY != this.state.top){\n\t\t\t\tthis.proxy.reverting = true;\n\t\t\t\tthis.proxy.left = this.state.startX - this.state.offsetWidth;\n\t\t\t\tthis.proxy.top = this.state.startY - this.state.offsetHeight;\n\t\t\t} else {\n\t\t\t\tthis.proxy.closed = true;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.$el._transitionendHandler = () => {\n\t\t\t\tdomHelper.removeClass(this.$el, 'draggable-reverting');\n\t\t\t\tthis.$el.style.position = this.state.startPosition;\n\t\t\t\tdomHelper.unbind(this.$el, 'transitionend');\n\t\t\t};\n\t\t\tdomHelper.bind(this.$el, 'transitionend', this.$el._transitionendHandler);\n\t\t\tdomHelper.addClass(this.$el, 'draggable-reverting');\n\t\t\tthis.$el.style.left = this.state.startLeft+'px';\n\t\t\tthis.$el.style.top = this.state.startTop+'px';\n\t\t}\n\t}\n\trestorePosition() {\n\t\tthis.$el.position = this.state.startPosition;\n\t\tthis.$el.style.left = this.state.startLeft+'px';\n\t\tthis.$el.style.top = this.state.startTop+'px';\n\t}\n\tonMouseDown(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tif (this.checkArea(event) == false){\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tlet handle = this.getHandle();\n\t\tlet style = getComputedStyle(this.$el);\n\t\tlet position = domHelper.position(this.$el);\n\t\tlet offset = domHelper.offset(this.$el);\n\t\tthis.state = {\n\t\t\ttarget: this,\n\t\t\tstartPosition: style.position,\n\t\t\tstartLeft: position.left,\n\t\t\tstartTop: position.top,\n\t\t\tleft: position.left,\n\t\t\ttop: position.top,\n\t\t\tstartX: event.pageX,\n\t\t\tstartY: event.pageY,\n\t\t\twidth: domHelper.outerWidth(this.$el),\n\t\t\theight: domHelper.outerHeight(this.$el),\n\t\t\toffsetWidth: event.pageX - offset.left,\n\t\t\toffsetHeight: event.pageY - offset.top\n\t\t};\n\t\thandle.style.cursor = '';\n\t\tthis.bindDocumentEvents();\n\t}\n\tonMouseMove(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tif (this.isDragging){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tlet handle = this.getHandle();\n\t\tif (this.checkArea(event)){\n            handle.style.cursor = this.cursor;\n\t\t} else {\n\t\t\t// handle.style.cursor = '';\n\t\t\thandle.style.cursor = this.$el.resizeCursor || '';\n\t\t}\n    }\n    onMouseLeave(){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\t// event = this.parseEvent(event);\n\t\tlet handle = this.getHandle();\n\t\thandle.style.cursor = '';\n\t}\n\tbindDocumentEvents() {\n\t\tthis.$el._docMoveHandler = (e) => {\n\t\t\treturn this.doMove(e);\n\t\t};\n\t\tthis.$el._docUpHandler = (e) => {\n\t\t\treturn this.doUp(e);\n\t\t};\n\t\tdomHelper.bind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.bind(document, 'touchend', this.$el._docUpHandler);\n\t}\n\tunbindDocumentEvents() {\n\t\tdomHelper.unbind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.unbind(document, 'touchend', this.$el._docUpHandler);\n\t}\n}\n\nDraggableClass.droppables = [];\n\nexport default DraggableClass;\n","﻿import DraggableClass from './DraggableClass';\n\nexport default {\n    name: 'Draggable',\n    mounted(el, binding){\n        el._dragInstance = new DraggableClass(el, binding.value);\n        el._dragInstance.bindEvents();\n    },\n    updated(el, binding){\n        el._dragInstance.updateOptions(binding.value);\n    },\n    beforeUnmount(el){\n        el._dragInstance.unbindEvents();\n    }\n}","﻿export default class DroppableClass {\n    constructor(el, value=null){\n        this.updateOptions(value);\n        this.$el = el;\n\t}\n    updateOptions(value){\n        let opts = Object.assign({\n            scope: null,\n            disabled: false,\n            dragEnter: () => {},\n            dragOver: () => {},\n            dragLeave: () => {},\n            drop: () => {}\n        }, this, value||{});\n        Object.assign(this, opts);\n    }\n\tcheckDrop(scope=null) {\n\t\tif (!scope || !this.scope){\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof this.scope == 'string' && this.scope == scope){\n\t\t\treturn true;\n\t\t} else if (this.scope instanceof Array){\n\t\t\tfor(let i=0; i<this.scope.length; i++){\n\t\t\t\tif (this.scope[i] == scope){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}","﻿import DraggableClass from '../draggable/DraggableClass';\nimport DroppableClass from './DroppableClass';\n\nexport default {\n    name: 'Droppable',\n    mounted(el, binding){\n        el._dropInstance = new DroppableClass(el, binding.value);\n        DraggableClass.droppables.push(el._dropInstance);\n    },\n    updated(el, binding){\n        el._dropInstance.updateOptions(binding.value);\n    },\n    beforeUnmount(el){\n        let index = DraggableClass.droppables.indexOf(el._dropInstance);\n\t\tif (index >= 0){\n\t\t\tDraggableClass.droppables.splice(index, 1);\n        }\n        el._dropInstance = null;\n    }\n}","﻿export default {\n    name: 'TreeNodeIcon',\n    props: {\n        tree: Object,\n        node: Object\n    },\n    render(){\n        return this.tree.$slots['icon']({node:this.node})\n    }\n}","﻿import SlideUpDown from '../base/SlideUpDown';\nimport TreeNodeTitle from './TreeNodeTitle';\nimport TreeNodeEditor from './TreeNodeEditor';\nimport domHelper from '../base/DomHelper';\nimport Draggable from '../draggable/Draggable';\nimport Droppable from '../droppable/Droppable';\nimport treeHelper from '../base/TreeHelper';\nimport TreeNodeIcon from './TreeNodeIcon';\n\nexport default {\n    name: 'TreeNode',\n    components: { TreeNodeTitle, TreeNodeEditor, TreeNodeIcon },\n    directives: {\n        SlideUpDown,\n        Draggable,\n        Droppable\n    },\n    props: {\n        tree: Object,\n        node: Object,\n        pnode: Object,\n        depth: {\n            type: Number,\n            default: 0\n        },\n        nodeCls: String\n    },\n    data() {\n        return {\n            loading: false,\n            innerNode: this.node,\n            dndCls: null\n        }\n    },\n    created() {\n        this.node.parent = this.pnode;\n    },\n    computed: {\n        indentWidth() {\n            if (this.isLeaf) {\n                return (this.depth + 1) * 16;\n            } else {\n                return this.depth * 16;\n            }\n        },\n        nodeClasses() {\n            return ['tree-node f-row f-vcenter', this.dndCls, this.node.nodeCls, {\n                'tree-node-hover': this.node == this.tree.highlightNode,\n                'tree-node-selected': this.isSelected,\n                'tree-node-disabled': this.node.disabled\n            }];\n        },\n        hitClasses() {\n            return ['tree-hit', {\n                'tree-expanded': this.isExpanded,\n                'tree-collapsed': this.isCollapsed\n            }];\n        },\n        iconClasses() {\n            return ['tree-icon tree-folder', this.node.iconCls, {\n                'tree-folder-open': this.isExpanded,\n                'tree-file': this.isLeaf,\n                'tree-loading': this.loading\n            }];\n        },\n        checkboxClasses() {\n            let cc = ['unchecked', 'checked', 'indeterminate'];\n            let index = cc.indexOf(this.node.checkState);\n            if (index == -1) {\n                index = 0;\n            }\n            return 'tree-checkbox tree-checkbox' + index;\n        },\n        isExpanded() {\n            if (!this.node.state || this.node.state == 'open') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isCollapsed() {\n            if (this.node.state && this.node.state == 'closed') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isSelected() {\n            return this.node == this.tree.selectionState;\n        },\n        isLeaf() {\n            if (this.node.state == 'closed') {\n                return false;\n            } else {\n                if (this.node.children && this.node.children.length) {\n                    this.loading = false;\n                    return false;\n                } else {\n                    if (this.loading) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        }\n    },\n    methods: {\n        getDraggableOpts() {\n            return {\n                disabled: this.tree.dnd ? this.node.disabled : true,\n                revert: true,\n                deltaX: 0,\n                deltaY: 0,\n                edge: 5,\n                scope: this.tree.dragScope,\n                proxy: this.tree.$refs.proxy,\n                dragStart: (event) => { this.onDragStart(event) },\n                dragEnd: (event) => { this.onDragEnd(event) }\n            }\n        },\n        getDroppableOpts() {\n            return {\n                disabled: this.tree.dnd ? (this.node.disabled || this.node.dropDisabled) : true,\n                node: this.node,\n                dragOver: (scope) => { this.onDragOver(scope) },\n                dragLeave: (scope) => { this.onDragLeave(scope) },\n                drop: (scope) => { this.onDrop(scope) }\n            }\n        },\n        onDragStart(event) {\n            Object.assign(this.tree.dragScope, {\n                node: this.node,\n                event: event,\n                obj: this\n            })\n            this.tree.dragCls = 'tree-dnd-no';\n            treeHelper.forNodes([this.node], (n) => {\n                n.dropDisabled = true;\n            })\n        },\n        onDragEnd() {\n            treeHelper.forNodes(this.tree.innerData, (node) => {\n                node.dropDisabled = false;\n            })\n        },\n        onDragOver(scope) {\n            if (this.node.dropDisabled) {\n                this.tree.dragCls = 'tree-dnd-no';\n                return;\n            }\n            this.tree.dragCls = 'tree-dnd-yes';\n            const event = scope.event;\n            const el = event.target.currDroppable.$el;\n            const top = domHelper.offset(el).top;\n            const bottom = top + domHelper.outerHeight(el);\n            const pageY = event.pageY;\n            if (pageY > top + (bottom - top) / 2) {\n                if (bottom - pageY < 5) {\n                    scope.point = 'bottom';\n                    this.dndCls = 'tree-node-bottom';\n                    // this.$set(this, 'dndCls', 'tree-node-bottom')\n                } else {\n                    scope.point = 'append';\n                    this.dndCls = 'tree-node-append';\n                    // this.$set(this, 'dndCls', 'tree-node-append')\n                }\n            } else {\n                if (pageY - top < 5) {\n                    scope.point = 'top';\n                    this.dndCls = 'tree-node-top';\n                    // this.$set(this, 'dndCls', 'tree-node-top')\n                } else {\n                    scope.point = 'append';\n                    this.dndCls = 'tree-node-append';\n                    // this.$set(this, 'dndCls', 'tree-node-append')\n                }\n            }\n\n        },\n        onDragLeave() {\n            this.dndCls = null;\n            // this.$set(this, 'dndCls', null)\n            this.tree.dragCls = 'tree-dnd-no';\n        },\n        onDrop(scope) {\n            this.dndCls = null;\n            // this.$set(this, 'dndCls', null)\n            this.tree.dragCls = null;\n            if (scope.point) {\n                this.tree.$emit('nodeDrop', { from: scope.node, to: this.node, point: scope.point })\n                this.tree.moveNode(scope.node, this.node, scope.point)\n                this.$nextTick(() => {\n                    const event = scope.event;\n                    const el = event.target.$el;\n                    el.style.left = null;\n                    el.style.top = null;\n                })\n            }\n        },\n        toggle(event) {\n            event.stopPropagation();\n            if (this.isExpanded) {\n                this.node.state = 'closed';\n                // this.$set(this.node, 'state', 'closed');\n                this.tree.$emit('nodeCollapse', this.node);\n            } else {\n                this.loading = true;\n                this.node.state = 'open';\n                // this.$set(this.node, 'state', 'open');\n                this.tree.$emit('nodeExpand', this.node);\n            }\n        },\n        onClickNode(event) {\n            const { clickToEdit, dblclickToEdit, editingItem } = this.tree;\n            event.stopPropagation();\n            this.tree.$emit('nodeClick', this.node);\n            this.tree.selectNode(this.node);\n            if (clickToEdit || (dblclickToEdit && editingItem)) {\n                this.tree.beginEdit(this.node, domHelper.closest(event.target, '.tree-node'));\n            }\n        },\n        onDblClickNode(event) {\n            event.stopPropagation();\n            this.tree.$emit('nodeDblClick', this.node);\n            if (this.tree.dblclickToEdit) {\n                this.tree.beginEdit(this.node, domHelper.closest(event.target, '.tree-node'));\n            }\n        },\n        onCheckNode(event) {\n            event.stopPropagation();\n            if (this.node.checkState == 'checked') {\n                this.tree.uncheckNode(this.node);\n            } else {\n                this.tree.checkNode(this.node);\n            }\n        },\n        onNodeContextMenu(event) {\n            this.tree.$emit('nodeContextMenu', { node: this.node, originalEvent: event });\n        }\n\n    },\n    render() {\n        return (\n            <li>\n                <div class={this.nodeClasses}\n                    onMouseenter={() => this.tree.highlightNode = this.node}\n                    onMouseleave={() => this.tree.highlightNode = null}\n                    onContextmenu={this.onNodeContextMenu}\n                    onClick={this.onClickNode}\n                    onDblclick={this.onDblClickNode}\n                    v-Draggable={this.getDraggableOpts()}\n                    v-Droppable={this.getDroppableOpts()}\n                >\n                    <span class=\"tree-indent\" style={{ width: this.indentWidth + 'px' }}></span>\n                    {!this.isLeaf && <span class={this.hitClasses} onClick={this.toggle}></span>}\n                    {!this.tree.$slots['icon'] && <span class={this.iconClasses}></span>}\n                    {this.tree.$slots['icon'] && <TreeNodeIcon tree={this.tree} node={this.node}></TreeNodeIcon>}\n                    {this.tree.checkboxState && <span class={this.checkboxClasses} onClick={this.onCheckNode}></span>}\n                    {!this.tree.isEditing(this.node) && <TreeNodeTitle tree={this.tree} node={this.node}></TreeNodeTitle>}\n                    {this.tree.isEditing(this.node) && <TreeNodeEditor tree={this.tree} node={this.node}></TreeNodeEditor>}\n                </div>\n                {\n                    this.node.children && this.node.children.length > 0 &&\n                    <ul class=\"f-block\" v-SlideUpDown={{ animate: this.tree.animate, collapsed: this.node.state == 'closed', disabled: false }}>\n                        {\n                            this.node.children.map(cnode => (\n                                <>\n                                    {\n                                        !cnode.hidden &&\n                                        <TreeNode node={cnode} pnode={this.node} depth={this.depth + 1} tree={this.tree}></TreeNode>\n                                    }\n                                </>\n                            ))\n                        }\n                    </ul>\n                }\n            </li>\n        )\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport TreeNode from './TreeNode';\n\nexport default {\n    name: 'Tree',\n    components: {\n        TreeNode\n    },\n    props: {\n        data: Array,\n        selection: Object,\n        animate: {\n            type: Boolean,\n            default: false\n        },\n        selectLeafOnly: {\n            type: Boolean,\n            default: false\n        },\n        checkbox: {\n            type: Boolean,\n            default: false\n        },\n        cascadeCheck: {\n            type: Boolean,\n            default: true\n        },\n        clickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        dblclickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        dnd: {\n            type: Boolean,\n            default: false\n        },\n        dndCls: String,\n        dndStyle: Object,\n        editRules: [Array, Object],\n        tipOptions: Object,\n        filterIncludingChild: {\n            type: Boolean,\n            default: false\n        },\n        filter: {\n            type: Function,\n            default: (q, node) => {\n                if (!q) {\n                    return true;\n                }\n                let qq = (q instanceof Array) ? q : [q];\n                qq = qq.map((q) => q.trim()).filter((q) => q);\n                for (let i = 0; i < qq.length; i++) {\n                    let index = node.text.toLowerCase().indexOf(qq[i].toLowerCase());\n                    if (index >= 0) {\n                        return true;\n                    }\n                }\n                return !qq.length;\n            }\n        }\n    },\n    data() {\n        return {\n            highlightNode: null,\n            editingItem: null,\n            innerData: [],\n            selectionState: this.selection,\n            checkboxState: this.checkbox,\n            dragScope: {},\n            dragCls: null\n        }\n    },\n    computed: {\n        tree() {\n            return this;\n        }\n    },\n    watch: {\n        data(value) {\n            this.setData(value);\n        },\n        selection(value) {\n            this.selectNode(value);\n        },\n        checkbox(value) {\n            this.checkboxState = value;\n        }\n    },\n    created() {\n        treeHelper.$vue = this;\n    },\n    mounted() {\n        this.setData(this.data);\n        if (window.EventHub){\n            window.EventHub.$emit('treeMounted', this);\n        }\n    },\n    methods: {\n        afterSelectionChange(){},\n        afterCheckChange(){},\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            this.innerData = Object.assign([], value);\n        },\n        getCheckedNodes(state = 'checked') {\n            let nodes = [];\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.forNodes(this.innerData, (node) => {\n                if (node.checkState == state) {\n                    nodes.push(node);\n                }\n            });\n            return nodes;\n        },\n\n        selectNode(node) {\n            if (node.children && node.children.length && this.selectLeafOnly) {\n                return;\n            }\n            if (this.selectionState != node) {\n                this.selectionState = node;\n                this.$emit('selectionChange', node);\n                this.afterSelectionChange(node);\n            }\n        },\n        checkNode(node) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.checkNode(node, () => {\n                this.$emit('nodeCheck', node);\n                this.$emit('checkChange', this.getCheckedNodes());\n                this.afterCheckChange(this.getCheckedNodes());\n            });\n        },\n        uncheckNode(node) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.uncheckNode(node, () => {\n                this.$emit('nodeUncheck', node);\n                this.$emit('checkChange', this.getCheckedNodes());\n                this.afterCheckChange(this.getCheckedNodes());\n            });\n        },\n        uncheckAllNodes() {\n            treeHelper.uncheckAllNodes(this.innerData, () => {\n                this.$emit('checkChange', []);\n                this.afterCheckChange([]);\n            });\n        },\n        adjustCheck(node) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.adjustCheck(node);\n        },\n        showNode(node) {\n            node.hidden = false;\n            // this.$set(node, 'hidden', false);\n        },\n        hideNode(node) {\n            node.hidden = true;\n            // this.$set(node, 'hidden', true);\n        },\n        doFilter(q) {\n            let nodes = [];\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.forNodes(this.innerData, (node) => {\n                if (this.filter(q, node)) {\n                    this.showNode(node);\n                    nodes.push(node);\n                } else {\n                    this.hideNode(node);\n                }\n            });\n            for (let node of nodes) {\n                let pnode = node.parent;\n                while (pnode) {\n                    this.showNode(pnode);\n                    pnode = pnode.parent;\n                }\n                if (this.filterIncludingChild && node.children) {\n                    treeHelper.forNodes(node.children, (node) => {\n                        this.showNode(node);\n                    });\n                }\n            }\n        },\n        isEditing(node) {\n            if (this.editingItem) {\n                return this.editingItem.node == node;\n            }\n            return false;\n        },\n        beginEdit(node, el = null) {\n            if (!this.isEditing(node)) {\n                this.endEdit();\n                if (this.editingItem) {\n                    setTimeout(() => {\n                        this.selectNode(this.editingItem.node)\n                    })\n                    return;\n                }\n                this.editingItem = {\n                    node: node,\n                    originalValue: node.text,\n                    element: el\n                }\n                this.$emit('editBegin', this.editingItem);\n            }\n        },\n        endEdit() {\n            if (this.editingItem) {\n                let el = this.editingItem.element;\n                if (el && el.querySelector('.validatebox-invalid')) {\n                    return;\n                }\n                if (this.editingItem.invalid) {\n                    return;\n                }\n                this.$emit('editEnd', this.editingItem);\n                this.editingItem = null;\n            }\n        },\n        cancelEdit() {\n            if (this.editingItem) {\n                this.editingItem.node.text = this.editingItem.originalValue;\n                this.$emit('editCancel', this.editingItem);\n                this.editingItem = null;\n            }\n        },\n        moveNode(from, to, point) {\n            const data = this.innerData;\n            const fchildren = from.parent ? from.parent.children : data\n            const index = fchildren.indexOf(from);\n            if (index >= 0) {\n                fchildren.splice(index, 1);\n                if (point === 'append') {\n                    const children = (to.children || []).slice();\n                    children.push(from);\n                    to.children = children;\n                    // this.$set(to, 'children', children)\n                } else if (point === 'top') {\n                    const pchildren = to.parent ? to.parent.children : data;\n                    const index = pchildren.indexOf(to);\n                    if (index >= 0) {\n                        pchildren.splice(index, 0, from)\n                    }\n                } else if (point === 'bottom') {\n                    const pchildren = to.parent ? to.parent.children : data;\n                    const index = pchildren.indexOf(to);\n                    if (index >= 0) {\n                        pchildren.splice(index + 1, 0, from)\n                    }\n                }\n                this.$emit('nodeMove', {\n                    from, to, point, data\n                })\n            }\n        }\n\n    },\n    render() {\n        return (\n            <ul class=\"tree\">\n                {\n                    this.innerData.map(node => (\n                        <>\n                            {!node.hidden && <TreeNode node={node} tree={this.tree}></TreeNode>}\n                        </>\n                    ))\n                }\n                {\n                    this.dnd &&\n                    <DraggableProxy ref=\"proxy\" proxyCls={this.dndCls} proxyStyle={this.dndStyle}>\n                        <div class=\"tree-node-proxy\">\n                            <span class={['tree-dnd-icon', this.dragCls]}>&nbsp;</span>\n                            <span>{this.dragScope.node ? this.dragScope.node.text : null}</span>\n                        </div>\n                    </DraggableProxy>\n                }\n            </ul>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'TabPanelHeader',\n    props: {\n        panel: Object\n    },\n    render() {\n        let title = null;\n        if (this.panel.$slots['header']) {\n            title = this.panel.$slots['header']();\n        } else {\n            title = (\n                <span class={['tabs-title', {\n                    'tabs-with-icon': this.panel.iconCls,\n                    'tabs-closable': this.panel.closable\n                }]}>{this.panel.title}</span>\n            )\n        }\n        let icon = null;\n        if (this.panel.iconCls) {\n            icon = <span class={['tabs-icon', this.panel.iconCls]}></span>\n        }\n        let closable = null;\n        if (this.panel.closable) {\n            closable = (\n                <a href=\"javascript:;\" tabindex=\"-1\" class=\"tabs-close\"\n                    onClick={event => {\n                        this.$emit('close', event)\n                    }}\n                />\n            )\n        }\n        return (\n            <span\n                class={['tabs-inner f-inline-row f-full', this.panel.headerCls]}\n                style={[this.panel.headerStyle, {\n                    width: !this.$parent.isHorizontal ? domHelper.toStyleValue(this.$parent.tabWidth) : null,\n                    height: this.$parent.isHorizontal ? domHelper.toStyleValue(this.$parent.tabHeight) : null\n                }]}\n                onContextmenu={event => {\n                    this.panel.$emit('contextMenu', event)\n                }}\n            >\n                {title}\n                {icon}\n                {closable}\n            </span>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport TabPanelHeader from './TabPanelHeader';\n\nexport default {\n    name: 'Tabs',\n    components: {\n        TabPanelHeader\n    },\n    props: {\n        headerWidth: {\n            type: [Number, String],\n            default: 150\n        },\n        headerHeight: {\n            type: [Number, String],\n            default: 35\n        },\n        tabWidth: [Number, String],\n        tabHeight: {\n            type: [Number, String],\n            default: 32\n        },\n        tabPosition: {\n            type: String,\n            default: 'top'\n        },\n        plain: {\n            type: Boolean,\n            default: false\n        },\n        narrow: {\n            type: Boolean,\n            default: false\n        },\n        justified: {\n            type: Boolean,\n            default: false\n        },\n        border: {\n            type: Boolean,\n            default: true\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        scrollIncrement: {\n            type: Number,\n            default: 100\n        },\n        selectedIndex: {\n            type: Number,\n            default: 0\n        }\n    },\n    data() {\n        return {\n            panels: [],\n            selectedHis: [],\n            scrollDistance: 0,\n            maxScrollDistance: 0\n        }\n    },\n    computed: {\n        containerClasses() {\n            return 'tabs-container ' + (this.isHorizontal ? 'f-row' : 'f-column');\n        },\n        headerClasses() {\n            return ['tabs-header f-row f-noshrink', {\n                'tabs-header-plain': this.plain,\n                'tabs-header-narrow': this.narrow,\n                'tabs-header-noborder': !this.border,\n                'tabs-header-bottom f-order2': this.tabPosition == 'bottom',\n                'tabs-header-left f-column': this.tabPosition == 'left',\n                'tabs-header-right f-column f-order2': this.tabPosition == 'right'\n            }]\n        },\n        headerStyle() {\n            return {\n                width: this.isHorizontal ? domHelper.toStyleValue(this.headerWidth) : null,\n                height: !this.isHorizontal ? domHelper.toStyleValue(this.headerHeight) : null\n            }\n        },\n        bodyClasses() {\n            return ['tabs-panels f-column f-full', {\n                'tabs-panels-noborder': !this.border,\n                'tabs-panels-top': this.tabPosition == 'bottom',\n                'tabs-panels-right': this.tabPosition == 'left',\n                'tabs-panels-left': this.tabPosition == 'right'\n            }]\n        },\n        tabsClasses() {\n            return ['tabs f-full', {\n                'f-row': !this.isHorizontal,\n                'f-column': this.isHorizontal,\n                'tabs-scrollable': this.isScrollable,\n                'tabs-narrow': this.narrow\n            }]\n        },\n        tabsStyle() {\n            if (this.isScrollable) {\n                return {\n                    left: (-this.scrollDistance) + 'px'\n                };\n            } else {\n                return null;\n            }\n        },\n        isHorizontal() {\n            return this.tabPosition == 'left' || this.tabPosition == 'right';\n        },\n        isScrollable() {\n            if (this.isHorizontal) {\n                return false;\n            } else {\n                return this.scrollable && !this.justified;\n            }\n        },\n        isScrollerVisible() {\n            if (this.isScrollable) {\n                return this.maxScrollDistance > 0;\n            } else {\n                return false;\n            }\n        },\n        usedPanels() {\n            return this.panels.filter((p) => { return p.isUsed });\n        }\n\n\n    },\n    watch: {\n        panels() {\n            this.initPanels();\n        }\n    },\n    methods: {\n        addPanel(panel) {\n            // this.panels.push(panel);\n            const pp = this.panels.slice();\n            pp.push(panel);\n            this.panels = pp;\n        },\n        removePanel(panel) {\n            const pp = this.panels.slice();\n            let index = pp.indexOf(panel);\n            if (index >= 0) {\n                pp.splice(index, 1);\n                this.panels = pp;\n            }\n            this.removeHis(panel);\n        },\n        setMaxScrollDistance() {\n            if (!this.$refs.tabsRef) {\n                this.maxScrollDistance = 0;\n            }\n            let width = this.$refs.tabsRef.scrollWidth;\n            let wrapWidth = this.$refs.tabsWrapRef.offsetWidth;\n            this.maxScrollDistance = width > wrapWidth ? width - wrapWidth : 0;\n        },\n        onClickTab(panel, event) {\n            event.stopPropagation();\n            panel.select();\n        },\n        onCloseTab(panel, event) {\n            event.stopPropagation();\n            if (!panel.disabled) {\n                panel.close();\n            }\n        },\n        initPanels() {\n            if (this.panels.length) {\n                this.panels.forEach((p) => {\n                    p.isFirst = false;\n                    p.isLast = false;\n                });\n                let pp = this.panels.filter((p) => { return p.isUsed });\n                if (pp.length) {\n                    pp[0].isFirst = true;\n                    pp[pp.length - 1].isLast = true;\n                }\n                this.initSelectedPanel();\n            }\n            this.$nextTick(() => this.setScrollers());\n        },\n        initSelectedPanel() {\n            let panel = this.getSelectedPanel();\n            if (!panel) {\n                panel = this.selectedHis.pop();\n            }\n            if (!panel) {\n                panel = this.getPanel(this.selectedIndex);\n            }\n            if (panel) {\n                this.usedPanels.filter(p => p != panel).forEach(p => p.selectedState = false);\n                panel.selectedState = true;\n                this.selectedHis = this.selectedHis.filter(p => this.getPanelIndex(p) != -1);\n                this.removeHis(panel);\n                this.addHis(panel);\n            }\n        },\n        setScrollers() {\n            if (!this.isScrollable) {\n                return;\n            }\n            this.setMaxScrollDistance();\n            let panel = this.getSelectedPanel();\n            if (panel) {\n                let wrapWidth = domHelper.outerWidth(this.$refs.tabsWrapRef);\n                let index = this.getPanelIndex(panel);\n                let li = this.$refs.tabsRef.children[index];\n                let width = domHelper.outerWidth(li, true);\n                let pos = domHelper.position(li);\n                let left = pos.left - this.scrollDistance;\n                let right = left + width;\n                if (left < 0) {\n                    let distance = left - (wrapWidth - width) / 2;\n                    this.scrollBy(distance);\n                } else if (right > wrapWidth) {\n                    let distance = left - (wrapWidth - width) / 2;\n                    this.scrollBy(distance);\n                } else {\n                    this.scrollBy(0);\n                }\n            }\n        },\n        addHis(panel) {\n            this.selectedHis.push(panel);\n        },\n        removeHis(panel) {\n            this.selectedHis = this.selectedHis.filter(p => p != panel);\n        },\n        backHis() {\n            let panel = this.selectedHis.pop();\n            if (panel) {\n                this.removeHis(panel);\n                panel.select();\n            } else {\n                this.select(0);\n            }\n        },\n        select(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.select();\n            }\n        },\n        unselect(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.unselect();\n            }\n        },\n        getPanel(index) {\n            return this.usedPanels[index];\n        },\n        getPanelIndex(panel) {\n            let pp = this.usedPanels;\n            for (let i = 0; i < pp.length; i++) {\n                if (pp[i] == panel) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        getSelectedPanel() {\n            let pp = this.usedPanels.filter(p => p.selectedState && !p.disabled);\n            return pp.length ? pp[0] : null;\n        },\n        scrollBy(distance) {\n            this.setMaxScrollDistance();\n            distance += this.scrollDistance;\n            if (distance > this.maxScrollDistance) {\n                distance = this.maxScrollDistance;\n            }\n            if (distance < 0) {\n                distance = 0;\n            }\n            this.scrollDistance = distance;\n        },\n        resize() {\n            this.setMaxScrollDistance();\n        }\n\n\n    },\n    render() {\n        return (\n            <div ref=\"containerRef\" class={this.containerClasses}>\n                <div ref=\"headerRef\" class={this.headerClasses} style={this.headerStyle}>\n                    {this.isScrollerVisible && <div class=\"tabs-scroller-left f-order1\" onClick={() => this.scrollBy(-this.scrollIncrement)}></div>}\n                    {this.isScrollerVisible && <div class=\"tabs-scroller-right f-order3\" onClick={() => this.scrollBy(this.scrollIncrement)}></div>}\n                    <div ref=\"tabsWrapRef\" class=\"tabs-wrap f-column f-full f-order2\">\n                        {this.isScrollable && <ul class=\"tabs tabs-scrollable f-full\" style=\"width:100%\"></ul>}\n                        <ul ref=\"tabsRef\" class={this.tabsClasses} style={this.tabsStyle}>\n                            {\n                                this.usedPanels.map(panel => (\n                                    <li class={[{ 'f-inline-row f-full': this.justified, 'f-noshrink': this.isScrollable, 'tabs-selected': panel.selectedState, 'tabs-disabled': panel.disabled, 'tabs-first': panel.isFirst, 'tabs-last': panel.isLast }]}\n                                        onClick={event => this.onClickTab(panel, event)}>\n                                        <TabPanelHeader panel={panel} onClose={event => this.onCloseTab(panel, event)}></TabPanelHeader>\n                                    </li>\n\n                                ))\n                            }\n                        </ul>\n                    </div>\n                    {\n                        this.$slots['tools'] &&\n                        <div class=\"tabs-tool f-order4 f-noshrink\">\n                            {this.$slots['tools']()}\n                        </div>\n                    }\n                </div>\n                <div class={this.bodyClasses}>\n                    {this.$slots.default()}\n                </div>\n            </div>\n        )\n    }\n}","﻿import Panel from '../panel/Panel';\n\nexport default {\n    name: 'TabPanel',\n    extends: Panel,\n    props: {\n        selected: {\n            type: Boolean,\n            default: false\n        },\n        showHeader: {\n            type: Boolean,\n            default: false\n        },\n        border: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        closable: {\n            type: Boolean,\n            default: false\n        },\n    },\n    data() {\n        return {\n            isFirst: false,\n            isLast: false,\n            isUsed: true,\n            selectedState: this.selected\n        }\n    },\n    computed: {\n        tabs(){\n            return this.$parent;\n        },\n        panelClasses(){\n            return ['panel f-column', this.panelCls, {\n                'f-full': this.selectedState,\n                'f-hide': !this.selectedState\n            }];\n        },\n\n    },\n    watch: {\n        selected(value){\n            this.selectedState = value;\n        }\n    },\n    mounted(){\n        this.$parent.addPanel(this);\n    },\n    beforeUnmount(){\n        this.$parent.removePanel(this);\n    },\n    methods: {\n        select() {\n            if (this.selectedState || this.disabled){\n                return;\n            }\n            this.tabs.panels.filter(p => p != this).forEach(p => p.unselect());\n            this.selectedState = true;\n            this.tabs.$emit('tabSelect', this);\n            this.tabs.addHis(this);\n            this.$nextTick(() => {\n                this.tabs.setScrollers();\n                if (window.EventHub){\n                    window.EventHub.$emit('tabSelect', this);\n                }\n            });\n        },\n        unselect() {\n            if (!this.selectedState || this.disabled){\n                return;\n            }\n            this.selectedState = false;\n            this.tabs.$emit('tabUnselect', this);\n        },\n        close() {\n            if (this.disabled){\n                return;\n            }\n            if (this.selectedState){\n                this.selectedState = false;\n                // this.tabs.selectedIndex = -1;\n            }\n            this.closedState = true;\n            this.isUsed = false;\n            this.tabs.$emit('tabClose', this);\n            this.tabs.removeHis(this);\n            this.tabs.backHis();\n            this.tabs.initPanels();\n            this.$nextTick(() => {\n                this.tabs.setScrollers();\n            });\n        }\n            \n    }\n}","﻿import dateHelper from '../base/DateHelper';\nimport domHelper from '../base/DomHelper';\nimport InputBase from '../base/InputBase';\nimport SpinnerBase from '../base/SpinnerBase';\n\nexport default {\n    name: 'TimeSpinner',\n    extends: SpinnerBase,\n    props: {\n        value: String,\n        modelValue: String,\n        min: String,\n        max: String,\n        increment: {\n            type: Number,\n            default: 1\n        },\n        highlight: {\n            type: Number,\n            default: 0\n        },\n        selections: {\n            type: Array,\n            default: () => [[0,2],[3,5],[6,8]]\n        },\n        formatter: Function,\n        parser: Function,\n        format: {\n            type: String,\n            default: 'HH:mm'\n        }\n    },\n    data() {\n        return {\n            highlightState: this.highlight,\n            highlighting: false\n        }\n    },\n    computed: {\n        text(){\n            let s = this.focused ? this.textState : (this.textFormatter||this.defaultTextFormatter)(this.valueState);\n            if (this.focused && this.highlighting){\n                this.$nextTick(() => {\n                    this.highlightRange(this.highlightState);\n                    this.highlighting = false;\n                });\n            }\n            return s;\n        }\n    },\n    mounted(){\n        const v = this.value !== undefined ? this.value:this.modelValue;\n        this.setValue(v);\n        domHelper.bind(this.$refs.inputRef, 'click', this.onClickMe);\n        domHelper.bind(this.$refs.inputRef, 'keydown', this.onKeyDown);\n        domHelper.bind(this.$refs.inputRef, 'keypress', this.onKeyPress);\n        domHelper.bind(this.$refs.inputRef, 'blur', this.onBlur);\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$refs.inputRef);\n    },\n    methods: {\n        defaultFormatter(date) {\n            return dateHelper.formatDate(date, this.format);\n        },\n        defaultParser(value){\n            let date = this.parseD(value);\n            if (date){\n                var min = this.parseD(this.min);\n                var max = this.parseD(this.max);\n                if (min && min > date){date = min;}\n                if (max && max < date){date = max;}\n            }\n            return date;\n        },\n        parseD(value) {\n            return dateHelper.parseDate(value, this.format);\n        },\n        onClickMe(){\n\t\t\tlet start = this.getSelectionStart();\n\t\t\tfor(let i=0; i<this.selections.length; i++){\n\t\t\t\tlet range = this.selections[i];\n\t\t\t\tif (start >= range[0] && start <= range[1]){\n\t\t\t\t\tthis.highlightRange(i);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n        },\n        onKeyDown(event){\n\t\t\tif (event.keyCode == 13){\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis.value = this.text;\n\t\t\t\tthis.text = this.value;\n\t\t\t\tthis.onClickMe(event);\n\t\t\t\tthis.highlighting = true;\n\t\t\t}\n        },\n        onKeyPress(e){\n            if (!this.focused){\n                return true;\n            }\n            if (e.metaKey || e.ctrlKey){\n                return true;\n            }\n            if (['46','8','13','0'].indexOf(String(e.which)) !== -1){\n                return true;\n            }\n            let c = String.fromCharCode(e.which);\n            if (!c){\n                return true;\n            }\n            if ('0123456789'.indexOf(c) >= 0){\n                return true;\n            } else {\n                return false;\n            }\n        },\n        onBlur(){\n            this.setValue(this.textState);\n        },\n        setValue(value){\n            value = (this.formatter||this.defaultFormatter)((this.parser||this.defaultParser)(value));\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        highlightRange(index) {\n            this.highlightState = index;\n            let range = this.selections[this.highlightState];\n            if (range){\n                this.setSelectionRange(range[0], range[1]);\n                this.focus();\n            }\n        },\n        doSpin(down) {\n            let range = this.selections[this.highlightState];\n            if (range){\n                let s = this.textState || '';\n                if (s){\n                    let s1 = s.substring(0, range[0]);\n                    let s2 = s.substring(range[0], range[1]);\n                    let s3 = s.substring(range[1]);\n                    let v = s1 + ((parseInt(s2,10)||0) + this.increment*(down?-1:1)) + s3;\n                    this.setValue(v);\n                } else {\n                    let v = (this.formatter||this.defaultFormatter)(new Date());\n                    this.setValue(v);\n                }\n                this.focus();\n                this.highlighting = true;\n            }\n        },\n        doSpinUp() {\n            this.doSpin(false);\n        },\n        doSpinDown() {\n            this.doSpin(true);\n        }\n            \n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'TimeClock',\n    props: {\n        value: {\n            type: Number,\n            default: () => 0\n        },\n        type: {\n            type: String,\n            default: () => 'hour'\n        }\n    },\n    computed: {\n        hour24() {\n            return this.$parent.$parent.hour24;\n        },\n        hourDistance() {\n            return this.$parent.$parent.hourDistance;\n        }\n    },\n    data() {\n        return {\n            valueState: 0,\n            data: [],\n            radius: 0,\n            width: 0,\n            height: 0\n        }\n    },\n    watch: {\n        value() {\n            this.valueState = this.value;\n        },\n        type() {\n            this.data = this.getData(this.type);\n        }\n    },\n    mounted() {\n        setTimeout(() => {\n            this.valueState = this.value;\n            this.data = this.getData(this.type);\n            const width = domHelper.outerWidth(this.$refs.elRef);\n            const height = domHelper.outerHeight(this.$refs.elRef);\n            const size = Math.min(width, height) - 20;\n            this.width = size;\n            this.height = size;\n            this.radius = size / 2;\n        })\n    },\n    methods: {\n        getData(type = 'hour') {\n            let data = [];\n            if (type == 'hour') {\n                for (let i = 0; i < 12; i++) {\n                    data.push(String(i))\n                }\n                data[0] = '12'\n            } else {\n                for (let i = 0; i < 60; i += 5) {\n                    data.push(i < 10 ? '0' + i : String(i))\n                }\n                data[0] = '00'\n            }\n            return data;\n        },\n        getHour24(value) {\n            let itemValue = parseInt(value, 10);\n            itemValue += 12;\n            if (itemValue == 24) {\n                itemValue = '00';\n            }\n            return itemValue;\n        },\n        itemClasses(value) {\n            return ['item f-column f-content-center', {\n                'item-selected': value == this.valueState\n            }]\n        },\n        itemStyle(value, is24) {\n            const type = this.type;\n            const distance = this.hourDistance[1] - this.hourDistance[0];\n            const radius = this.radius - (this.hour24 && this.type == 'hour' ? (is24 ? 0 : distance) : 0);\n            const angular = parseInt(value, 10) / (type == 'hour' ? 12 : 60) * 360 * Math.PI / 180;\n            const x = (radius - 20) * Math.sin(angular);\n            const y = -(radius - 20) * Math.cos(angular);\n            return {\n                transform: `translate(${x}px,${y}px)`,\n            }\n        },\n        clockStyle() {\n            return {\n                width: this.width + 'px',\n                height: this.height + 'px',\n                marginLeft: -this.width / 2 + 'px',\n                marginTop: -this.height / 2 + 'px'\n            }\n        },\n        handStyle() {\n            const value = parseInt(this.valueState, 10);\n            const angular = value / (this.type == 'hour' ? 12 : 60) * 360;\n            const style = {\n                transform: `rotate(${angular}deg)`\n            }\n            if (this.hour24 && this.type == 'hour') {\n                if (value == 0) {\n                    style.top = this.hourDistance[0] + 'px';\n                } else if (value <= 12) {\n                    style.top = this.hourDistance[1] + 'px';\n                }\n            }\n            return style;\n        },\n        onItemClick(value, event) {\n            event.stopPropagation();\n            event.preventDefault();\n            value = parseInt(value, 10);\n            this.valueState = value;\n            this.$emit('select', value);\n        }\n    },\n    render() {\n        return (\n            <div ref=\"elRef\" class=\"clock-wrap f-full f-column f-content-center\">\n                <div class=\"clock\" style={this.clockStyle()}>\n                    <div class=\"center\"></div>\n                    <div class=\"hand\" style={this.handStyle()}>\n                        <div className=\"drag\"></div>\n                    </div>\n                    {\n                        this.data.map(value => (\n                            <div class={this.itemClasses(value)} style={this.itemStyle(value)} onClick={event => this.onItemClick(value, event)}>{value}</div>\n                        ))\n                    }\n                    {\n                        this.data.map(value => (\n                            <>\n                                {this.hour24 && this.type == 'hour' &&\n                                    <div>\n                                        <div class={this.itemClasses(this.getHour24(value))} style={this.itemStyle(this.getHour24(value), true)} onClick={event => this.onItemClick(this.getHour24(value), event)}>{this.getHour24(value)}</div>\n                                    </div>\n                                }\n                            </>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}","﻿import TimeClock from './TimeClock';\n\nexport default {\n    name: 'TimePanel',\n    props: {\n        value: String,\n        ampm: {\n            type: Array,\n            default: () => ['am', 'pm']\n        }\n    },\n    components: {\n        TimeClock\n    },\n    data() {\n        return {\n            selectingType: 'hour',\n            selectingAmpm: 'am',\n            hour: 0,\n            minute: 0\n        }\n    },\n    watch: {\n        value() {\n            this.setValue(this.value)\n        }\n    },\n    mounted() {\n        this.selectingAmpm = this.ampm[0];\n        this.setValue(this.value);\n    },\n    methods: {\n        setValue(value) {\n            if (value) {\n                const parts = value.split(' ');\n                const hm = parts[0].split(':');\n                this.hour = parseInt(hm[0], 10);\n                this.minute = parseInt(hm[1], 10);\n                this.selectingAmpm = parts[1];\n            }\n        },\n        getValue() {\n            let value = this.getHourStr() + ':' + this.getMinuteStr();\n            if (!this.$parent.hour24) {\n                value += ' ' + this.selectingAmpm;\n            }\n            return value;\n        },\n        getHourStr() {\n            const hour = this.hour;\n            return hour < 10 ? '0' + hour : hour\n        },\n        getMinuteStr() {\n            const minute = this.minute;\n            return minute < 10 ? '0' + minute : minute\n        },\n        onAmpmClick(ampm) {\n            this.selectingAmpm = ampm;\n            this.$emit('change', this.getValue());\n        },\n        onClockSelect(value) {\n            const selectingType = this.selectingType;\n            if (selectingType === 'hour') {\n                this.hour = value;\n                this.$nextTick(() => {\n                    this.selectingType = 'minute';\n                })\n            } else {\n                this.minute = value;\n            }\n            this.$emit('change', this.getValue());\n        }\n    },\n    render() {\n        return (\n            <div class=\"timepicker-panel f-column f-full\">\n                <div class=\"panel-header f-noshrink f-row f-content-center\">\n                    <div class={['title', { 'title-selected': this.selectingType == 'hour' }]} onClick={() => this.selectingType = 'hour'}>{this.getHourStr()}</div>\n                    <div class=\"sep\">:</div>\n                    <div class={['title', { 'title-selected': this.selectingType == 'minute' }]} onClick={() => this.selectingType = 'minute'}>{this.getMinuteStr()}</div>\n                    {\n                        !this.$parent.hour24 &&\n                        <div class=\"ampm f-column\">\n                            <div class={['title', { 'title-selected': this.selectingAmpm == this.ampm[0] }]} onClick={() => this.onAmpmClick(this.ampm[0])}>{this.ampm[0]}</div>\n                            <div class={['title', { 'title-selected': this.selectingAmpm == this.ampm[1] }]} onClick={() => this.onAmpmClick(this.ampm[1])}>{this.ampm[1]}</div>\n                        </div>\n                    }\n                </div>\n                <TimeClock\n                    value={this.selectingType == 'hour' ? this.hour : this.minute}\n                    type={this.selectingType}\n                    onSelect={this.onClockSelect}\n                />\n            </div>\n        )\n    }\n}","﻿import ComboBase from '../base/ComboBase';\nimport TimePanel from './TimePanel';\nimport InputBase from '../base/InputBase';\n\nexport default {\n    name: 'TimePicker',\n    extends: ComboBase,\n    components: {\n        TimePanel\n    },\n    props: {\n        value: String,\n        modelValue: String,\n        ampm: {\n            type: Array,\n            default: () => ['am', 'pm']\n        },\n        hour24: {\n            type: Boolean,\n            default: () => false\n        },\n        hourDistance: {\n            type: Array,\n            default: () => [20, 50]\n        },\n        closeText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.closeText', 'Close')\n        },\n        okText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.okText', 'Ok')\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            selectingValue: null\n        }\n    },\n    mounted() {\n        const v = this.value !== undefined ? this.value:this.modelValue;\n        this.setValue(v)\n    },\n    methods: {\n        setValue(value) {\n            this.selectingValue = value;\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        onOk() {\n            this.setValue(this.selectingValue);\n            this.closePanel();\n        },\n        onTimeChange(value) {\n            this.selectingValue = value;\n        },\n        renderPanel() {\n            if (this.panelClosed) {\n                return null;\n            }\n            const style = Object.assign({}, this.panelStyle, {\n                left: this.panelLeft + 'px',\n                top: this.panelTop + 'px'\n            })\n            return (\n                <div ref=\"panelRef\"\n                    class=\"panel-body panel-body-noheader combo-panel combo-p f-column\"\n                    style={style}>\n                    {this.renderContent()}\n                </div>\n            )\n        },\n        renderContent() {\n            return (\n                <>\n                    <TimePanel value={this.valueState} ampm={this.ampm} onChange={this.onTimeChange}></TimePanel>\n                    <div class=\"datebox-button f-row\">\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.onOk}>{this.okText}</a>\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.closePanel}>{this.closeText}</a>\n                    </div>\n                </>\n            )\n        }\n    }\n}","﻿import TimeSpinner from '../timespinner/TimeSpinner';\n\nexport default {\n    name: 'DateTimeSpinner',\n    extends: TimeSpinner,\n    props: {\n        selections: {\n            type: Array,\n            default: () => [[0,2],[3,5],[6,10],[11,13],[14,16],[17,19]]\n        },\n        format: {\n            type: String,\n            default: 'MM/dd/yyyy HH:mm'\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Panel from '../panel/Panel';\n\nexport default {\n    name: 'CollapsedPanel',\n    extends: Panel,\n    props: {\n        region: String\n    },\n    computed: {\n        layout(){\n            return this.$parent;\n        },\n        visible(){\n            const panel = this.layout.getPanel(this.region);\n            if (!panel){\n                return false;\n            }\n            if (!panel.collapsedState || !panel.expander){\n                return false;\n            }\n            return true;\n        },\n        panelClasses(){\n            return ['panel f-column layout-expand', this.panelCls, {\n                'layout-expand-east': this.region=='east',\n                'layout-expand-west': this.region=='west',\n                'layout-expand-south': this.region=='south',\n                'layout-expand-north': this.region=='north'\n            }]\n        },\n        panelStyles(){\n            const panel = this.layout.getPanel(this.region);\n            if (!panel){\n                return null;\n            }\n            return [this.panelStyle, {\n                top: this.region==='west'||this.region==='east' ? this.layout.paddingTop+'px' : (this.region==='north' ? 0 : null),\n                bottom: this.region==='west'||this.region==='east' ? this.layout.paddingBottom+'px' : (this.region==='south' ? 0 : null),\n                left: this.region==='west'||this.region==='north'||this.region==='south' ? 0 : null,\n                right: this.region==='east' ? 0 : null,\n                width: this.region==='west'||this.region==='east' ? panel.collapsedSize+'px' : '100%',\n                height: this.region==='north'||this.region==='south' ? panel.collapsedSize+'px' : null,\n                position: 'absolute'\n            }]\n        }\n    },\n    methods: {\n        onPanelClick(e){\n            const ptool = domHelper.closest(e.target, '.panel-tool');\n            if (!ptool){\n                e.preventDefault();\n                e.stopPropagation();\n                this.expand();\n            }\n        },\n        clickCollapsibleTool(){\n            this.expand();\n        },\n        expand(){\n            this.layout.getPanel(this.region).expand();\n        }\n    },\n    render() {\n        if (this.visible) {\n            return (\n                <div onClick={this.onPanelClick} class={this.panelClasses} style={this.panelStyles}>\n                    {this.panelHeader()}\n                    {this.panelBody()}\n                    {this.panelFooter()}\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport CollapsedPanel from './CollapsedPanel';\n\nexport default {\n    name: 'Layout',\n    components: {\n        CollapsedPanel,\n    },\n    props: {\n        layoutCls: String,\n        layoutStyle: Object\n    },\n    data() {\n        return {\n            panels: [],\n            paddings: null,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            paddingBottom: 0\n        }\n    },\n    computed: {\n        layoutClasses() {\n            return ['layout', this.layoutCls];\n        },\n        layoutStyles() {\n            return [this.layoutStyle, { padding: this.paddings }];\n        }\n    },\n    watch: {\n        panels() {\n            this.updatePaddings();\n            this.$nextTick(() => this.updatePaddings());\n        }\n    },\n    created() {\n        if (window.EventHub) {\n            window.EventHub.$on('tabSelect', (tab) => {\n                if (domHelper.isChild(this.$el, tab.$el)) {\n                    this.updatePaddings();\n                }\n            });\n            window.EventHub.$on('panelSelect', (panel) => {\n                if (domHelper.isChild(this.$el, panel.$el)) {\n                    this.updatePaddings();\n                }\n            });\n        }\n    },\n    methods: {\n        addPanel(panel) {\n            // this.panels.push(panel);\n            const pp = this.panels.slice();\n            pp.push(panel);\n            this.panels = pp;\n        },\n        removePanel(panel) {\n            const pp = this.panels.slice();\n            let index = pp.indexOf(panel);\n            if (index >= 0) {\n                pp.splice(index, 1);\n                this.panels = pp;\n            }\n        },\n        getPanel(region) {\n            let pp = this.panels.filter(p => p.region == region);\n            return pp.length ? pp[0] : null;\n        },\n        getPaddingValue(region) {\n            let panel = this.getPanel(region);\n            if (!panel) {\n                return 0;\n            }\n            let val = 0;\n            if (panel.collapsedState) {\n                if (panel.expander) {\n                    val += panel.collapsedSize - 1;\n                }\n            } else {\n                if (panel.float) {\n                    if (panel.expander) {\n                        val += panel.collapsedSize - 1;\n                    }\n                } else {\n                    if (region == 'west' || region == 'east') {\n                        val = domHelper.outerWidth(panel.$el);\n                    } else {\n                        val = domHelper.outerHeight(panel.$el);\n                    }\n                    if (!panel.split && panel.border) {\n                        val -= 1;\n                    }\n                }\n            }\n            return val;\n        },\n        updatePaddings() {\n            this.paddingLeft = this.getPaddingValue('west');\n            this.paddingRight = this.getPaddingValue('east');\n            this.paddingTop = this.getPaddingValue('north');\n            this.paddingBottom = this.getPaddingValue('south');\n            this.paddings = [this.paddingTop, this.paddingRight, this.paddingBottom, this.paddingLeft].map(v => v + 'px').join(' ');\n            this.$emit('resize')\n        },\n        onClick(event) {\n            let cp = domHelper.closest(event.target, '.layout-panel');\n            this.panels.filter(p => p.$el != cp).forEach(p => {\n                if (p.isExpanding) {\n                    return;\n                }\n                if (p.float && !p.collapsedState) {\n                    p.collapse();\n                }\n            });\n        },\n        collapseTitle(region) {\n            if (region == 'west' || region == 'east') {\n                return ' ';\n            }\n            const panel = this.getPanel(region);\n            return panel ? panel.title : null;\n        },\n        collapseIconCls(region) {\n            const iconMap = {\n                'east': 'left',\n                'west': 'right',\n                'north': 'down',\n                'south': 'up'\n            };\n            return 'layout-button-' + iconMap[region];\n        },\n        collapsedSize(region) {\n            const panel = this.getPanel(region);\n            return panel ? panel.collapsedSize : null;\n        }\n\n    },\n    render() {\n        return (\n            <div ref=\"layoutRef\" class={this.layoutClasses} style={this.layoutStyles} onClick={this.onClick}>\n                {this.$slots.default()}\n                {\n                    ['west', 'east', 'north', 'south'].map(region => (\n\n                        <CollapsedPanel\n                            bodyCls=\"f-column f-vcenter\"\n                            key={region}\n                            region={region}\n                            title={this.collapseTitle(region)}\n                            collapsible={true}\n                            collapseIconCls={this.collapseIconCls(region)}\n                        >\n                            {\n                                (region == 'west' || region == 'east') &&\n                                <div class=\"f-vtitle f-full\">{this.getPanel(region) ? this.getPanel(region).title : null}</div>\n                            }\n                        </CollapsedPanel>\n                    ))\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Resizable from '../resizable/Resizable';\nimport Panel from '../panel/Panel';\n\nexport default {\n    name: 'LayoutPanel',\n    extends: Panel,\n    directives: {\n        Resizable\n    },\n    props: {\n        title: String,\n        region: {\n            type: String,\n            default: 'center'\n        },\n        float: {\n            type: Boolean,\n            default: false\n        },\n        split: {\n            type: Boolean,\n            default: false\n        },\n        edge: {\n            type: Number,\n            default: 5\n        },\n        animate: {\n            type: Boolean,\n            default: true\n        },\n        collapsible: {\n            type: Boolean,\n            default: false\n        },\n        collapsedSize: {\n            type: Number,\n            default: 32\n        },\n        expander: {\n            type: Boolean,\n            default: false\n        },\n        expandIconCls: String,\n        collapseIconCls: String\n    },\n    data() {\n        return {\n            isExpanding: false,\n            collapseToShrinkBody: false,\n            resizeOpts: null\n        }\n    },\n    mounted(){\n        this.setResizeOpts();\n        this.$parent.addPanel(this);\n        domHelper.bind(this.$el, 'transitionend', this.onSlideEnd);\n    },\n    beforeUnmount(){\n        this.$parent.removePanel(this);\n        domHelper.unbind(this.$el);\n    },\n    computed: {\n        layout(){\n            return this.$parent;\n        },\n        panelClasses(){\n            return ['panel f-column layout-panel', this.panelCls, {\n                'layout-collapsed':this.collapsedState,\n                'layout-animate':this.animate,\n                'layout-panel-east':this.region=='east',\n                'layout-panel-west':this.region=='west',\n                'layout-panel-south':this.region=='south',\n                'layout-panel-north':this.region=='north',\n                'layout-panel-center':this.region=='center',\n                'layout-split-east':this.split&&this.region=='east',\n                'layout-split-west':this.split&&this.region=='west',\n                'layout-split-south':this.split&&this.region=='south',\n                'layout-split-north':this.split&&this.region=='north',\n                'layout-split-center':this.split&&this.region=='center'\n            }];\n        },\n        panelStyles(){\n            return [this.panelStyle, {\n                top: this.top?(this.top+'px'):null,\n                bottom: this.bottom?(this.bottom+'px'):null,\n                borderWidth: this.split?(this.edge+'px'):null\n            }]\n        },\n        collapsibleClasses(){\n            let icons = {\n                'west': 'left',\n                'east': 'right',\n                'north': 'up',\n                'south': 'down'\n            };\n            if (this.collapsedState){\n                return this.expandIconCls ? this.expandIconCls : 'layout-button-'+icons[this.region];\n            } else {\n                return this.collapseIconCls ? this.collapseIconCls : 'layout-button-'+icons[this.region];\n            }\n        },\n        top(){\n            if (this.region == 'west' || this.region == 'east'){\n                return this.layout.paddingTop;\n            }\n            return null;\n        },\n        bottom(){\n            if (this.region == 'west' || this.region == 'east'){\n                return this.layout.paddingBottom;\n            }\n            return null;\n        }\n    },\n    watch: {\n        collapsed(){\n            this.collapsed ? this.collapse() : this.expand()\n        }\n    },\n    methods: {\n        setResizeOpts(){\n            const handles = {north:'s',south:'n',east:'w',west:'e'}\n            const handler = () => {\n                if (this.region == 'west' || this.region == 'east'){\n                    this.$el.style.left = null;\n                } else {\n                    this.$el.style.top = null;\n                }\n                this.$parent.updatePaddings();\n            }\n            this.resizeOpts = {\n                // edge: 5,\n                edge: this.edge,\n                handles: handles[this.region]||'',\n                disabled: !this.split,\n                resizing: handler,\n                resizeStop: (state)=>{\n                    this.$emit('resizeStop', state);\n                    handler();\n                }\n            }\n        },\n        onSlideEnd(){\n            this.layout.updatePaddings();\n            if (this.collapsedState){\n                this.$emit('collapse')\n            } else {\n                this.$emit('expand')\n            }\n        },\n        clickCollapsibleTool(){\n            this.collapse();\n            this.layout.updatePaddings();\n        },\n        expand(){\n            this.collapsedState = false;\n            this.isExpanding = true;\n            this.$nextTick(() => this.isExpanding = false);\n            if (!this.animate){\n                this.layout.updatePaddings();\n                this.$emit('expand')\n            }\n        },\n        collapse(){\n            this.collapsedState = true;\n            // this.layout.updatePaddings();\n            if (!this.animate){\n                this.layout.updatePaddings();\n                this.$emit('collapse')\n            }\n        }\n    },\n    render() {\n        if (!this.closedState) {\n            return (\n                <div v-Resizable={this.resizeOpts} class={this.panelClasses} style={this.panelStyles}>\n                    {this.panelHeader()}\n                    {this.panelBody()}\n                    {this.panelFooter()}\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nwindow.MenuZIndex = window.MenuZIndex || 110000;\n\nexport default {\n    name: 'Menu',\n    props: {\n        menuCls: String,\n        menuStyle: Object,\n        menuWidth: [Number, String],\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        noline: {\n            type: Boolean,\n            default: false\n        },\n        duration: {\n            type: Number,\n            default: 100\n        }\n    },\n    data() {\n        return {\n            subItems: [],\n            left: 0,\n            top: 0,\n            zIndex: window.MenuZIndex++,\n            timer: null,\n            closed: true,\n            isDisplaying: false\n        }\n    },\n    computed: {\n        menuWidthState() {\n            return domHelper.toStyleValue(this.menuWidth);\n        },\n        containerClasses() {\n            return ['menu-container f-inline-row', {\n                'menu-noline': this.noline\n            }];\n        },\n        containerStyle() {\n            return {\n                width: this.menuWidthState,\n                minWidth: this.menuWidthState,\n                left: this.left + 'px',\n                top: this.top + 'px',\n                zIndex: this.zIndex,\n                display: this.inline ? null : (this.closed ? 'none' : 'block')\n            };\n        },\n        menubutton() {\n            let parent = this.$parent;\n            while (parent && (parent.$options.name != 'MenuButton' && parent.$options.name != 'SplitButton')) {\n                parent = parent.$parent;\n            }\n            return parent;\n        }\n    },\n    mounted() {\n        if (!this.inline) {\n            document.body.appendChild(this.$refs.containerRef);\n            domHelper.bind(document, 'click', this.onDocumentClick);\n        }\n        if (this.menubutton) {\n            this.menubutton.setMenu(this)\n        }\n    },\n    beforeUnmount() {\n        if (!this.inline) {\n            this.$el.appendChild(this.$refs.containerRef);\n            domHelper.unbind(document, 'click', this.onDocumentClick);\n        }\n    },\n    methods: {\n        addItem(item) {\n            this.subItems.push(item);\n        },\n        removeItem(item) {\n            let index = this.subItems.indexOf(item);\n            if (index >= 0) {\n                this.subItems.splice(index, 1);\n            }\n        },\n        afterItemClick(){\n\n        },\n        onMouseOver() {\n            this.closed = false;\n            clearTimeout(this.timer);\n        },\n        onMouseOut() {\n            this.delayHide();\n        },\n        onDocumentClick(event) {\n            if (!this.closed) {\n                if (domHelper.isChild(event.target, this.$refs.containerRef)) {\n                    return;\n                }\n                if (this.isDisplaying) {\n                    return;\n                }\n                this.hide();\n            }\n        },\n        findItem(value) {\n            let finder = (items, field = 'value') => {\n                for (let item of items) {\n                    if (item[field] == value) {\n                        return item;\n                    } else if (item.subMenu) {\n                        item = finder(item.subMenu.subItems, field);\n                        if (item) {\n                            return item;\n                        }\n                    }\n                }\n                return null;\n            }\n            let item = finder(this.subItems, 'value');\n            if (!item) {\n                item = finder(this.subItems, 'text');\n            }\n            return item;\n        },\n        unhighlight() {\n            this.subItems.forEach((item) => {\n                item.unhighlight();\n            });\n        },\n        show(left, top) {\n            this.closed = false;\n            this.left = left;\n            this.top = top;\n            this.zIndex = window.MenuZIndex++;\n            clearTimeout(this.timer);\n            this.isDisplaying = true;\n            this.$nextTick(() => this.isDisplaying = false);\n        },\n        showAt(target, align = 'left') {\n            this.show(0, 0);\n            this.alignTo(target, align);\n            this.$nextTick(() => {\n                this.alignTo(target, align);\n            })\n        },\n        showContextMenu(left, top) {\n            this.show(left, top);\n            this.alignContextMenu();\n            this.$nextTick(() => {\n                this.alignContextMenu();\n            })\n        },\n        hide() {\n            this.closed = true;\n        },\n        delayHide() {\n            this.timer = setTimeout(() => {\n                this.closed = true;\n            }, this.duration);\n        },\n        alignTo(target, align = 'left') {\n            let view = domHelper.getViewport();\n            let pos = domHelper.offset(target);\n            let targetWidth = domHelper.outerWidth(target);\n            let targetHeight = domHelper.outerHeight(target);\n            let menuWidth = domHelper.outerWidth(this.$refs.containerRef);\n            let menuHeight = domHelper.outerHeight(this.$refs.containerRef);\n            let left = align == 'left' ? pos.left : pos.left + targetWidth - menuWidth;\n            let top = pos.top + targetHeight;\n            if (left + menuWidth > view.width + domHelper.getScrollLeft()) {\n                left = pos.left + targetWidth - menuWidth;\n            } else if (left < 0) {\n                left = pos.left;\n            }\n            if (top + menuHeight > view.height + domHelper.getScrollTop()) {\n                top = pos.top - menuHeight - 1;\n            }\n            if (top < domHelper.getScrollTop()) {\n                top = domHelper.getScrollTop() + 1;\n            }\n            this.left = left;\n            this.top = top;\n        },\n        alignContextMenu() {\n            let view = domHelper.getViewport();\n            let width = domHelper.outerWidth(this.$refs.containerRef);\n            let height = domHelper.outerHeight(this.$refs.containerRef);\n            if (this.left + width > view.width + domHelper.getScrollLeft()) {\n                this.left -= width;\n            }\n            if (height > view.height + domHelper.getScrollTop()) {\n                this.top = domHelper.getScrollTop() + 1;\n            } else {\n                if (this.top + height > view.height + domHelper.getScrollTop()) {\n                    this.top = view.height + domHelper.getScrollTop() - height - 1;\n                }\n            }\n        }\n\n    },\n    render() {\n        return (\n            <span class=\"menu-inline\">\n                <div ref=\"containerRef\" class={this.containerClasses} style={this.containerStyle}\n                    onMouseover={this.onMouseOver} onMouseout={this.onMouseOut}\n                >\n                    <div class=\"menu-shadow\"></div>\n                    <div class={'menu f-column f-full ' + (this.menuCls || '')} style={this.menuStyle}>\n                        {this.$slots.default()}\n                    </div>\n                    <div class=\"menu-line\"></div>\n                </div>\n            </span>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'SubMenu',\n    props: {\n        menuCls: String,\n        menuStyle: Object,\n        menuWidth: [Number, String]\n    },\n    data() {\n        return {\n            subItems: [],\n            left: 0,\n            top: 0,\n            zIndex: window.MenuZIndex++\n        }\n    },\n    computed: {\n        menu() {\n            return this.$parent.menu;\n        },\n        menuWidthState() {\n            return domHelper.toStyleValue(this.menuWidth);\n        },\n        menuClasses() {\n            return ['menu-container', {\n                'f-hide': !this.$parent.isActived\n            }];\n        },\n        menuStyles() {\n            return {\n                width: this.menuWidthState,\n                left: this.left + 'px',\n                top: this.top + 'px',\n                zIndex: this.zIndex\n            }\n        }\n    },\n    mounted() {\n        this.$parent.subMenu = this;\n    },\n    beforeUnmount() {\n        this.$parent.subMenu = null;\n    },\n    methods: {\n        addItem(item) {\n            this.subItems.push(item);\n        },\n        removeItem(item) {\n            let index = this.subItems.indexOf(item);\n            if (index >= 0) {\n                this.subItems.splice(index, 1);\n            }\n        },\n        unhighlight() {\n            this.subItems.forEach((item) => {\n                item.unhighlight();\n            });\n        },\n        alignMenu() {\n            this.zIndex = window.MenuZIndex++;\n            let view = domHelper.getViewport();\n            let pos = domHelper.offset(this.$parent.$el);\n            let width = domHelper.outerWidth(this.$el);\n            let height = domHelper.outerHeight(this.$el);\n            let pwidth = domHelper.outerWidth(this.$parent.$el);\n            let left = pwidth - 1;\n            if (left + pos.left + width > view.width + domHelper.getScrollLeft()) {\n                left = -width - 1;\n            }\n            let top = -4;\n            if (height > view.height + domHelper.getScrollTop()) {\n                top = -pos.top + domHelper.getScrollTop();\n            } else {\n                if (top + pos.top + height > view.height + domHelper.getScrollTop()) {\n                    top = view.height + domHelper.getScrollTop() - pos.top - height - 2;\n                }\n            }\n            this.left = left;\n            this.top = top;\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.menuClasses} style={this.menuStyles}>\n                <div class=\"menu-shadow\"></div>\n                <div class=\"menu-line\"></div>\n                <div class={'menu f-column f-full ' + (this.menuCls || this.menu.menuCls)} style={this.menuStyle || this.menu.menuStyle}>\n                    {this.$slots.default()}\n                </div>\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'MenuItem',\n    props: {\n        value: [Number, String],\n        text: String,\n        iconCls: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            isActived: false,\n            subMenu: null\n        }\n    },\n    computed: {\n        menu() {\n            if (this.$parent.$options.name == 'Menu') {\n                return this.$parent;\n            } else {\n                return this.$parent.menu;\n            }\n        },\n        itemClasses() {\n            return ['menu-item', {\n                'menu-active': this.isActived,\n                'menu-item-disabled': this.disabled,\n                'menu-active-disabled': this.disabled && this.isActived\n            }]\n        }\n    },\n    mounted() {\n        this.$parent.addItem(this);\n    },\n    beforeUnmount() {\n        this.$parent.removeItem(this);\n    },\n    methods: {\n        highlight() {\n            this.$parent.subItems.forEach((item) => {\n                item.unhighlight();\n            });\n            this.isActived = true;\n            if (this.subMenu) {\n                this.$nextTick(() => this.subMenu.alignMenu());\n            }\n        },\n        unhighlight() {\n            if (this.subMenu) {\n                this.subMenu.unhighlight();\n            }\n            this.isActived = false;\n        },\n        onClickItem(event) {\n            event.stopPropagation();\n            if (this.disabled) {\n                return;\n            }\n            this.menu.$emit('itemClick', this.value || this.text);\n            this.menu.afterItemClick(this.value || this.text);\n            if (!this.subMenu) {\n                this.menu.unhighlight();\n                this.menu.hide();\n            }\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.itemClasses}\n                onMouseenter={this.highlight}\n                onMouseleave={this.unhighlight}\n                onClick={this.onClickItem}\n            >\n                {!this.$slots['item'] && <div class=\"menu-text\">{this.text}</div>}\n                {this.$slots['item'] && this.$slots['item']()}\n                {this.iconCls && <div class={['menu-icon', this.iconCls]}></div>}\n                {this.subMenu && <div class=\"menu-rightarrow\"></div>}\n                {this.$slots.default && this.$slots.default()}\n            </div>\n        )\n    }\n}","﻿export default {\r\n    name: 'MenuSep',\r\n    render() {\r\n        return (\r\n            <div class=\"menu-sep\"></div>\r\n        )\r\n    }\r\n}","﻿import LinkButton from '../linkbutton/LinkButton';\n\nexport default {\n    name: 'MenuButton',\n    extends: LinkButton,\n    props: {\n        menuAlign: {\n            type: String,\n            default: 'left'\n        },\n        duration: {\n            type: Number,\n            default: 100\n        }\n    },\n    data() {\n        return {\n            menu: null,\n            timer: null\n        }\n    },\n    computed: {\n        isEmpty() {\n            return !this.text && !this.$slots.text;\n        },\n        innerCls() {\n            let cls = LinkButton.computed.innerCls.call(this);\n            cls += ' m-btn m-btn-' + this.size;\n            if (this.menu && !this.menu.closed) {\n                cls += this.plain ? ' m-btn-plain-active' : ' m-btn-active';\n            }\n            return cls;\n        }\n    },\n    mounted() {\n        // this.$children.forEach(c => {\n        //     if (c.$options.name == 'Menu') {\n        //         this.menu = c;\n        //     }\n        // });\n    },\n    methods: {\n        setMenu(menu) {\n            this.menu = menu;\n        },\n        onClick(event) {\n            LinkButton.methods.onClick.call(this, event);\n            this.showMenu();\n        },\n        onMouseEnter() {\n            if (this.disabled) {\n                return;\n            }\n            this.timer = setTimeout(() => {\n                this.showMenu();\n            }, this.duration);\n        },\n        onMouseLeave() {\n            if (this.disabled) {\n                return;\n            }\n            clearTimeout(this.timer);\n            if (this.menu) {\n                this.menu.delayHide();\n            }\n        },\n        showMenu() {\n            if (this.disabled) {\n                return;\n            }\n            if (this.menu) {\n                this.menu.showAt(this.$refs.btnRef, this.menuAlign);\n            }\n        },\n        renderInner() {\n            let content = '';\n            if (this.isEmpty) {\n                content = '';\n            } else if (this.text) {\n                content = this.text;\n            } else if (this.$slots.default) {\n                content = this.$slots.default();\n            }\n            return (\n                <>\n                    <span class={this.isEmpty ? 'l-btn-text l-btn-empty' : 'l-btn-text'}>\n                        {content}\n                    </span>\n                    <span class={this.btnIconCls}></span>\n                    <span class=\"m-btn-downarrow\"></span>\n                    <span class=\"m-btn-line\"></span>\n                    {this.$slots.default && this.$slots.default()}\n                </>\n            )\n        }\n\n    },\n    render() {\n        return (\n            <a ref=\"btnRef\"\n                href={this.href || '#'}\n                class={this.innerCls}\n                style={Object.assign({}, this.$attrs.style, this.btnStyle)}\n                onClick={this.onClick}\n                onMouseenter={this.onMouseEnter}\n                onMouseleave={this.onMouseLeave}\n                onFocus={this.focus}\n                onBlur={this.blur}\n            >\n                <span class={this.btnLeftCls}>\n                    {this.renderInner()}\n                </span >\n                {this.renderOthers()}\n            </a >\n        )\n    }\n}","﻿import LinkButton from '../linkbutton/LinkButton';\nimport MenuButton from '../menubutton/MenuButton';\n\nexport default {\n    name: 'SplitButton',\n    extends: MenuButton,\n    computed: {\n        innerCls() {\n            let cls = MenuButton.computed.innerCls.call(this);\n            cls += ' s-btn s-btn-' + this.size;\n            if (this.menu && !this.menu.closed) {\n                cls += this.plain ? ' s-btn-plain-active' : ' s-btn-active';\n            }\n            return cls;\n        }\n    },\n    methods: {\n        onClick(event) {\n            LinkButton.methods.onClick.call(this, event);\n        },\n        renderInner() {\n            let content = '';\n            if (this.isEmpty) {\n                content = '';\n            } else if (this.text) {\n                content = this.text;\n            } else if (this.$slots.default) {\n                content = this.$slots.default();\n            }\n            return (\n                <>\n                    <span class={this.isEmpty ? 'l-btn-text l-btn-empty' : 'l-btn-text'}>\n                        {content}\n                    </span>\n                    <span class={this.btnIconCls}></span>\n                    <span class=\"m-btn-downarrow\"></span>\n                    <span class=\"m-btn-line\"\n                        onClick={this.showMenu}\n                        onMouseenter={this.onMouseEnter}\n                        onMouseleave={this.onMouseLeave}\n                    />\n                    {this.$slots.default()}\n                </>\n            )\n        }\n    },\n    render() {\n        return (\n            <a ref=\"btnRef\"\n                href={this.href || '#'}\n                class={this.innerCls}\n                style={Object.assign({}, this.$attrs.style, this.btnStyle)}\n                onClick={this.onClick}\n                onFocus={this.focus}\n                onBlur={this.blur}\n            >\n                <span class={this.btnLeftCls}>\n                    {this.renderInner()}\n                </span >\n                {this.renderOthers()}\n            </a >\n        )\n    }\n}","﻿import InputBase from '../base/InputBase';\n\nexport default {\n    name: 'PasswordBox',\n    extends: InputBase,\n    props: {\n        passwordChar: {\n            type: String,\n            default: '●'\n        },\n        checkInterval: {\n            type: Number,\n            default: 200\n        },\n        lastDelay: {\n            type: Number,\n            default: 500\n        },\n        showEye: {\n            type: Boolean,\n            default: true\n        },\n        eyeAlign: {\n            type: String,\n            default: 'right'\n        },\n        revealed: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            revealedState: this.revealed,\n            lastTimer: null,\n            cursorPos: -1\n        }\n    },\n    computed: {\n        eyeClasses() {\n            return ['textbox-addon f-column f-noshrink', {\n                'f-order0': this.eyeAlign == 'left',\n                'f-order6': this.eyeAlign == 'right'\n            }];\n        },\n        eyeIconClasses() {\n            return ['textbox-icon f-full', {\n                'passwordbox-open': this.revealedState,\n                'passwordbox-close': !this.revealedState\n            }];\n        },\n        text() {\n            if (!this.focused) {\n                this.textState = this.revealedState ? this.valueState : (this.valueState || '').replace(/./ig, this.passwordChar)\n            }\n            if (this.focused && this.cursorPos != -1) {\n                this.$nextTick(() => {\n                    this.setSelectionRange(this.cursorPos, this.cursorPos);\n                    this.cursorPos = -1;\n                });\n            }\n            return this.textState;\n        }\n    },\n    methods: {\n        afterFocus(){\n            this.processing()\n        },\n        afterBlur(){\n            clearTimeout(this.lastTimer);\n            this.convert(this.textState, true);\n            this.cursorPos = -1;\n        },\n        processing() {\n            let originalText = this.textState;\n            let proc = () => {\n                if (!this.focused) {\n                    return;\n                }\n                if (originalText != this.textState) {\n                    originalText = this.textState;\n                    clearTimeout(this.lastTimer);\n                    this.convert(this.textState);\n                    this.lastTimer = setTimeout(() => {\n                        this.convert(this.textState, true);\n                    }, this.lastDelay);\n                }\n                setTimeout(() => {\n                    proc();\n                }, this.checkInterval);\n            };\n            proc();\n        },\n        convert(value, all = false) {\n            if (this.revealedState) {\n                this.setValue(value);\n                return;\n            }\n            if (!value) {\n                this.setValue(value);\n                return;\n            }\n            let pchar = this.passwordChar;\n            let cc = value.split('');\n            let vv = this.valueState ? this.valueState.split('') : [];\n            for (let i = 0; i < cc.length; i++) {\n                let c = cc[i];\n                if (c != vv[i]) {\n                    if (c != pchar) {\n                        vv.splice(i, 0, c);\n                    }\n                }\n            }\n            let pos = this.getSelectionStart();\n            if (cc.length < vv.length) {\n                vv.splice(pos, vv.length - cc.length, '');\n            }\n            for (var i = 0; i < cc.length; i++) {\n                if (all || i != pos - 1) {\n                    cc[i] = pchar;\n                }\n            }\n            this.setValue(vv.join(''));\n            this.textState = cc.join('');\n            this.cursorPos = pos;\n        },\n        renderOthers() {\n            return (\n                <>\n                    {\n                        this.showEye &&\n                        <span class={this.eyeClasses} onClick={() => this.revealedState = !this.revealedState}>\n                            <span class={this.eyeIconClasses}></span>\n                        </span>\n                    }\n                </>\n            )\n        }\n\n    }\n}","﻿export default {\n    name: 'Calendar',\n    props: {\n        weeks: {\n            type: Array,\n            default: () => window.Locale.t('Calendar.weeks', ['S', 'M', 'T', 'W', 'T', 'F', 'S'])\n        },\n        months: {\n            type: Array,\n            default: () => window.Locale.t('Calendar.months', ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n        },\n        border: {\n            type: Boolean,\n            default: true\n        },\n        showWeek: {\n            type: Boolean,\n            default: false\n        },\n        weekNumberHeader: {\n            type: String,\n            default: ''\n        },\n        firstDay: {\n            type: Number,\n            default: 0\n        },\n        year: {\n            type: Number,\n            default: new Date().getFullYear()\n        },\n        month: {\n            type: Number,\n            default: new Date().getMonth() + 1\n        },\n        selection: Date,\n        validator: {\n            type: Function,\n            default: () => { return true }\n        }\n    },\n    data() {\n        return {\n            yearState: this.year,\n            monthState: this.month,\n            highlightDay: null,\n            highlightMonth: null,\n            headerData: [],\n            bodyData: [],\n            showMenu: false,\n            selectionState: this.selection\n        }\n    },\n    computed: {\n        saIndex() {\n            let index = 6 - this.firstDay;\n            if (index >= 7) {\n                index -= 7;\n            }\n            return index;\n        },\n        suIndex() {\n            let index = this.saIndex + 1;\n            if (index >= 7) {\n                index -= 7;\n            }\n            return index;\n        }\n    },\n    watch: {\n        year() {\n            this.yearState = this.year;\n            this.bodyData = this.getWeeks();\n        },\n        yearState() {\n            this.bodyData = this.getWeeks();\n        },\n        month() {\n            this.monthState = this.month;\n            this.bodyData = this.getWeeks();\n        },\n        monthState() {\n            this.bodyData = this.getWeeks();\n        },\n        firstDay() {\n            this.headerData = this.getHeaderData();\n            this.bodyData = this.getWeeks();\n        },\n        selection() {\n            this.selectionState = this.selection;\n            this.moveTo(this.selectionState);\n        }\n    },\n    created() {\n        this.moveTo(this.selectionState);\n        this.headerData = this.getHeaderData();\n        this.bodyData = this.getWeeks();\n    },\n    methods: {\n        onDayClick(day) {\n            //event.stopPropagation();\n            if (this.isValid(day)) {\n                this.yearState = day[0];\n                this.monthState = day[1];\n                this.selectDate(new Date(day[0], day[1] - 1, day[2]));\n            }\n        },\n        onMonthClick(monthName, event) {\n            event.stopPropagation();\n            let index = this.months.indexOf(monthName);\n            if (index >= 0) {\n                this.monthState = index + 1;\n                this.showMenu = false;\n                this.highlightMonth = null;\n            }\n        },\n        isToday(day) {\n            let now = new Date();\n            let y = now.getFullYear();\n            let m = now.getMonth() + 1;\n            let d = now.getDate();\n            if (y == day[0] && m == day[1] && d == day[2]) {\n                return true;\n            }\n            return false;\n        },\n        isHighlighted(day) {\n            if (this.highlightDay) {\n                if (this.highlightDay.join(',') == day.join(',')) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isSelected(day) {\n            if (this.selectionState) {\n                let y = this.selectionState.getFullYear();\n                let m = this.selectionState.getMonth() + 1;\n                let d = this.selectionState.getDate();\n                if (y == day[0] && m == day[1] && d == day[2]) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isValid(day) {\n            let date = new Date(day[0], day[1] - 1, day[2]);\n            return this.validator(date);\n        },\n        isDiff(date1, date2) {\n            if (date1 != null && date2 == null) {\n                return true;\n            }\n            if (date1 == null && date2 != null) {\n                return true;\n            }\n            if (date1 != null && date2 != null) {\n                if (this.toArray(date1).join(',') != this.toArray(date2).join(',')) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        toDate(day) {\n            return new Date(day[0], day[1] - 1, day[2]);\n        },\n        toArray(date) {\n            return [date.getFullYear(), date.getMonth() + 1, date.getDate()];\n        },\n        calcWeekNumber(week) {\n            let date = new Date(week[0][0], week[0][1] - 1, week[0][2]);\n            return this.getWeekNumber(date);\n        },\n        nextYear() {\n            this.yearState++;\n        },\n        prevYear() {\n            this.yearState--;\n        },\n        nextMonth() {\n            if (this.monthState == 12) {\n                this.yearState++;\n                this.monthState = 1;\n            } else {\n                this.monthState++;\n            }\n        },\n        prevMonth() {\n            if (this.monthState == 1) {\n                this.yearState--;\n                this.monthState = 12;\n            } else {\n                this.monthState--;\n            }\n        },\n        getWeekNumber(date) {\n            var checkDate = new Date(date.getTime());\n            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n            var time = checkDate.getTime();\n            checkDate.setMonth(0);\n            checkDate.setDate(1);\n            return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\n        },\n        getHeaderData() {\n            let data1 = this.weeks.slice(this.firstDay, this.weeks.length);\n            let data2 = this.weeks.slice(0, this.firstDay);\n            return data1.concat(data2);\n        },\n        getWeeks() {\n            let dates = [];\n            let lastDay = new Date(this.yearState, this.monthState, 0).getDate();\n            for (let i = 1; i <= lastDay; i++) dates.push([this.yearState, this.monthState, i]);\n\n            // group date by week\n            let weeks = [];\n            let week = [];\n            let memoDay = -1;\n            while (dates.length > 0) {\n                let date = dates.shift();\n                week.push(date);\n                let day = new Date(date[0], date[1] - 1, date[2]).getDay();\n                if (memoDay == day) {\n                    day = 0;\n                } else if (day == (this.firstDay == 0 ? 7 : this.firstDay) - 1) {\n                    weeks.push(week);\n                    week = [];\n                }\n                memoDay = day;\n            }\n            if (week.length) {\n                weeks.push(week);\n            }\n\n            let firstWeek = weeks[0];\n            if (firstWeek.length < 7) {\n                while (firstWeek.length < 7) {\n                    let firstDate = firstWeek[0];\n                    let date = new Date(firstDate[0], firstDate[1] - 1, firstDate[2] - 1)\n                    firstWeek.unshift([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n                }\n            } else {\n                let firstDate = firstWeek[0];\n                let week = [];\n                for (let i = 1; i <= 7; i++) {\n                    let date = new Date(firstDate[0], firstDate[1] - 1, firstDate[2] - i);\n                    week.unshift([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n                }\n                weeks.unshift(week);\n            }\n\n            let lastWeek = weeks[weeks.length - 1];\n            while (lastWeek.length < 7) {\n                let lastDate = lastWeek[lastWeek.length - 1];\n                let date = new Date(lastDate[0], lastDate[1] - 1, lastDate[2] + 1);\n                lastWeek.push([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n            }\n            if (weeks.length < 6) {\n                let lastDate = lastWeek[lastWeek.length - 1];\n                let week = [];\n                for (let i = 1; i <= 7; i++) {\n                    let date = new Date(lastDate[0], lastDate[1] - 1, lastDate[2] + i);\n                    week.push([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n                }\n                weeks.push(week);\n            }\n\n            return weeks;\n        },\n        moveTo(date) {\n            if (date) {\n                this.yearState = date.getFullYear();\n                this.monthState = date.getMonth() + 1;\n            }\n        },\n        highlightDate(date) {\n            this.highlightDay = date ? this.toArray(date) : null;\n        },\n        selectDate(date = null) {\n            if (!date) {\n                if (this.highlightDay) {\n                    date = this.toDate(this.highlightDay);\n                } else {\n                    date = this.selectionState;\n                }\n            }\n            if (this.isDiff(this.selectionState, date)) {\n                this.selectionState = date;\n                this.$emit('selectionChange', this.selectionState);\n            }\n        },\n        navDate(step) {\n            let date = this.highlightDay ? this.toDate(this.highlightDay) : this.selectionState;\n            if (date) {\n                date = new Date(date.getFullYear(), date.getMonth(), date.getDate() + step);\n            } else {\n                date = new Date();\n            }\n            this.moveTo(date);\n            this.highlightDate(date);\n        },\n        renderDays() {\n            return (\n                <table class=\"calendar-dtable\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n                    <thead>\n                        <tr>\n                            {this.showWeek && <th>{this.weekNumberHeader}</th>}\n                            {\n                                this.headerData.map(week => (\n                                    <th>{week}</th>\n                                ))\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.bodyData.map(week => (\n                                <tr>\n                                    {this.showWeek && <td class=\"calendar-week\">{this.calcWeekNumber(week)}</td>}\n                                    {\n                                        week.map((day, dayIndex) => (\n                                            <td\n                                                class={['calendar-day', {\n                                                    'calendar-other-month': day[0] != this.yearState || day[1] != this.monthState,\n                                                    'calendar-saturday': dayIndex == this.saIndex,\n                                                    'calendar-sunday': dayIndex == this.suIndex,\n                                                    'calendar-today': this.isToday(day),\n                                                    'calendar-selected': this.isSelected(day),\n                                                    'calendar-disabled': !this.isValid(day),\n                                                    'calendar-nav-hover': this.isHighlighted(day)\n                                                }]}\n                                                onMouseenter={() => this.highlightDay = this.isValid(day) ? day : null}\n                                                onMouseleave={() => this.highlightDay = null}\n                                                onClick={(event) => this.onDayClick(day, event)}>\n                                                {this.$slots.default && this.$slots.default({ date: this.toDate(day) })}\n                                                {!this.$slots.default && day[2]}\n                                            </td>\n\n                                        ))\n                                    }\n                                </tr>\n\n                            ))\n                        }\n                    </tbody>\n                </table>\n            )\n        },\n        renderMenu() {\n            if (!this.showMenu) {\n                return null;\n            }\n            return (\n                <div class=\"calendar-menu f-column\">\n                    <div class=\"calendar-menu-year-inner\">\n                        <span class=\"calendar-nav calendar-menu-prev\" onClick={this.prevYear}></span>\n                        <span><input class=\"calendar-menu-year\" type=\"text\" v-model={this.yearState} /></span>\n                        <span class=\"calendar-nav calendar-menu-next\" onClick={this.nextYear}></span>\n                    </div>\n                    <div class=\"calendar-menu-month-inner f-full\">\n                        <div class=\"calendar-content\">\n                            <table class=\"calendar-mtable\">\n                                <tbody>\n                                    {\n                                        [0, 1, 2].map(rowIndex => (\n                                            <tr>\n                                                {\n                                                    [0, 1, 2, 3].map(colIndex => (\n                                                        <td\n                                                            class={['calendar-nav calendar-menu-month', {\n                                                                'calendar-nav-hover': this.highlightMonth == this.months[rowIndex * 4 + colIndex],\n                                                                'calendar-selected': this.months[this.monthState - 1] == this.months[rowIndex * 4 + colIndex]\n                                                            }]}\n                                                            onMouseenter={() => this.highlightMonth = this.months[rowIndex * 4 + colIndex]}\n                                                            onMouseleave={() => this.highlightMonth = null}\n                                                            onClick={event => this.onMonthClick(this.months[rowIndex * 4 + colIndex], event)}\n                                                        >\n                                                            {this.months[rowIndex * 4 + colIndex]}\n                                                        </td>\n                                                    ))\n                                                }\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div >\n            )\n        }\n    },\n    render() {\n        return (\n            <div class={'calendar f-column' + (!this.border ? ' calendar-noborder' : '')}>\n                <div class=\"calendar-header f-row f-noshrink\">\n                    <div class=\"calendar-title f-row f-full f-content-center\">\n                        <span class=\"calendar-text\" onClick={() => this.showMenu = !this.showMenu}>{this.months[this.monthState - 1]} {this.yearState}</span>\n                    </div>\n                    <div class=\"calendar-nav calendar-prevmonth\" onClick={this.prevMonth}></div>\n                    <div class=\"calendar-nav calendar-nextmonth\" onClick={this.nextMonth}></div>\n                    <div class=\"calendar-nav calendar-prevyear\" onClick={this.prevYear} ></div >\n                    <div class=\"calendar-nav calendar-nextyear\" onClick={this.nextYear} ></div >\n                </div >\n                <div class=\"calendar-body f-full\">\n                    <div class=\"calendar-content\">\n                        {this.renderDays()}\n                        {this.renderMenu()}\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport dateHelper from '../base/DateHelper';\nimport ComboBase from '../base/ComboBase';\nimport Calendar from '../calendar/Calendar';\nimport { FieldBase } from '../base';\n\nexport default {\n    name: 'DateBox',\n    extends: ComboBase,\n    components: {\n        Calendar\n    },\n    props: {\n        value: Date,\n        modelValue: Date,\n        format: {\n            type: String,\n            default: 'MM/dd/yyyy'\n        },\n        currentText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.currentText', 'Today')\n        },\n        closeText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.closeText', 'Close')\n        },\n        okText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.okText', 'Ok')\n        },\n        showWeek: {\n            type: Boolean,\n            default: false\n        },\n        weekNumberHeader: {\n            type: String,\n            default: ''\n        },\n        firstDay: {\n            type: Number,\n            default: 0\n        },\n        formatter: Function,\n        parser: Function,\n        validator: {\n            type: Function,\n            default: () => { return true }\n        },\n        reversed: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            timer: null\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused && this.panelClosed) {\n                this.textState = (this.formatter || this.defaultFormatter)(this.valueState);\n            }\n            return this.textState;\n        }\n    },\n    mounted() {\n        // this.$on('blur', () => {\n        //     if (this.panelClosed) {\n        //         return;\n        //     }\n        //     if (!this.textState.trim()) {\n        //         this.setValue(null);\n        //     }\n        // });\n        domHelper.bind(this.$refs.inputRef, 'keydown', this.onKeyDown);\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$refs.inputRef, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            if (this.panelClosed) {\n                return;\n            }\n            if (!this.textState.trim()) {\n                this.setValue(null);\n            } else if (!this.reversed) {\n                const val = (this.parser || this.defaultParser)(this.textState.trim());\n                const y = val.getFullYear();\n                if (!y) {\n                    val.setFullYear(1900);\n                }\n                this.setValue(val);\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n        },\n        onSelectionChange(event) {\n            this.setValue(event);\n            this.closePanel();\n            this.$emit('selectionChange', event);\n        },\n        onKeyDown(event) {\n            if (this.panelClosed && event.which == 40) {\n                this.openPanel();\n                event.preventDefault();\n                return;\n            }\n            if (this.panelClosed) {\n                return;\n            }\n            switch (event.which) {\n                case 40:\t// down\n                    this.$refs.calendar.navDate(7);\n                    event.preventDefault();\n                    break;\n                case 38:\t// up\n                    this.$refs.calendar.navDate(-7);\n                    event.preventDefault();\n                    break;\n                case 37:\t// left\n                    this.$refs.calendar.navDate(-1);\n                    event.preventDefault();\n                    break;\n                case 39:\t// right\n                    this.$refs.calendar.navDate(1);\n                    event.preventDefault();\n                    break;\n                case 13:\t// enter\n                    this.$refs.calendar.selectDate();\n                    this.closePanel();\n                    this.textState = (this.formatter || this.defaultFormatter)(this.valueState);\n                    event.preventDefault();\n                    break;\n            }\n        },\n        defaultFormatter(date) {\n            return dateHelper.formatDate(date, this.format);\n        },\n        defaultParser(value) {\n            return dateHelper.parseDate(value, this.format);\n        },\n        doFilter(value) {\n            let date = (this.parser || this.defaultParser)(value);\n            if (!date) {\n                date = this.valueState;\n            }\n            this.$refs.calendar.moveTo(date);\n            this.$refs.calendar.highlightDate(date);\n        },\n        selectToday() {\n            this.setValue(new Date());\n            this.closePanel();\n        },\n        renderPanel() {\n            if (this.panelClosed) {\n                return null;\n            }\n            const style = Object.assign({}, this.panelStyle, {\n                left: this.panelLeft + 'px',\n                top: this.panelTop + 'px'\n            })\n            return (\n                <div ref=\"panelRef\"\n                    class=\"panel-body panel-body-noheader combo-panel combo-p f-column\"\n                    style={style}>\n                    {this.renderContent()}\n                </div>\n            )\n        },\n        renderContent() {\n            return (\n                <>\n                    <Calendar ref=\"calendar\" class=\"f-full\"\n                        border={false}\n                        showWeek={this.showWeek}\n                        weekNumberHeader={this.weekNumberHeader}\n                        firstDay={this.firstDay}\n                        validator={this.validator}\n                        selection={this.valueState}\n                        onSelectionChange={this.onSelectionChange}>\n                    </Calendar>\n                    <div class=\"datebox-button f-row\">\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.selectToday}>{this.currentText}</a>\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.closePanel}>{this.closeText}</a>\n                    </div>\n                </>\n            )\n        }\n    }\n}","﻿export default {\n    name: 'DraggableProxy',\n    props: {\n        proxyCls: String,\n        proxyStyle: Object\n    },\n    data() {\n        return {\n            left: 0,\n            top: 0,\n            width: 0,\n            height: 0,\n            reverting: false,\n            closed: true\n        }\n    },\n    computed: {\n        proxyClasses() {\n            return [this.proxyCls, {\n                'draggable-reverting': this.reverting\n            }]\n        },\n        proxyStyles() {\n            return [this.proxyStyle, {\n                position: 'absolute',\n                left: this.left + 'px',\n                top: this.top + 'px',\n                // width: this.width+'px',\n                // height: this.height+'px',\n                display: this.closed ? 'none' : 'block'\n            }];\n        }\n    },\n    mounted() {\n        document.body.appendChild(this.$refs.proxyRef);\n    },\n    beforeUnmount() {\n        if (this.$refs.proxyRef) {\n            this.$el.appendChild(this.$refs.proxyRef);\n        }\n    },\n    methods: {\n        onTransitionEnd() {\n            this.reverting = false;\n            this.closed = true;\n        }\n    },\n    render() {\n        return (\n            <div style=\"display:none\">\n                <div ref=\"proxyRef\"\n                    class={this.proxyClasses}\n                    style={this.proxyStyles}\n                    onTransitionend={this.onTransitionEnd}>\n                    {this.$slots.default()}\n                </div>\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Panel from '../panel/Panel';\nimport Draggable from '../draggable/Draggable';\nimport Resizable from '../resizable/Resizable';\n\nwindow.DialogZIndex = window.DialogZIndex || 9000;\n\nexport default {\n    name: 'Dialog',\n    extends: Panel,\n    directives: {\n        Draggable,\n        Resizable\n    },\n    props: {\n        title: String,\n        border: {\n            type: Boolean,\n            default: false\n        },\n        borderType: {\n            type: String,\n            default: 'thick'    // thin,thick,none\n        },\n        closable: {\n            type: Boolean,\n            default: true\n        },\n        dialogCls: String,\n        dialogStyle: Object,\n        modal: {\n            type: Boolean,\n            default: false\n        },\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        draggable: {\n            type: Boolean,\n            default: false\n        },\n        resizable: {\n            type: Boolean,\n            default: false\n        },\n        draggableOptions: Object,\n        resizableOptions: Object\n    },\n    data() {\n        return {\n            dragOpts: null,\n            resizeOpts: null,\n            maskEl: null,\n            left: null,\n            top: null,\n            width: null,\n            height: null\n        }\n    },\n    computed: {\n        panelStyles() {\n            return [this.panelStyle, this.dialogStyle, {\n                left: this.left ? this.left + 'px' : (this.dialogStyle ? this.dialogStyle.left : null),\n                top: this.left ? this.top + 'px' : (this.dialogStyle ? this.dialogStyle.top : null),\n                width: this.width ? this.width + 'px' : (this.dialogStyle ? this.dialogStyle.width : null),\n                height: this.height ? this.height + 'px' : (this.dialogStyle ? this.dialogStyle.height : null)\n            }];\n        },\n        panelClasses() {\n            let cls = 'window window-shadow';\n            if (this.borderType == 'none') {\n                cls += ' window-thinborder window-noborder';\n            } else if (this.borderType == 'thin') {\n                cls += ' window-thinborder';\n            }\n            if (this.inline) {\n                cls += ' inline';\n            }\n            return ['panel f-column', cls, this.panelCls, this.dialogCls];\n        },\n        headerClasses() {\n            return Panel.computed.headerClasses.call(this).concat('window-header');\n        },\n        bodyClasses() {\n            let cls = 'window-body';\n            if (!this.hasHeader) {\n                cls += ' window-body-noheader';\n            }\n            return Panel.computed.bodyClasses.call(this).concat(cls);\n        },\n        footerClasses() {\n            return Panel.computed.footerClasses.call(this).concat('window-footer');\n        }\n    },\n    watch: {\n        draggable() {\n            this.setDragOpts();\n        },\n        resizable() {\n            this.setResizeOpts();\n        },\n        draggableOptions() {\n            this.setDragOpts();\n        },\n        resizableOptions() {\n            this.setResizeOpts();\n        },\n        closedState() {\n            this.$nextTick(() => {\n                this.initDialog();\n                this.setDragOpts();\n                this.setResizeOpts();\n            });\n            if (this.closedState) {\n                this.$emit('close');\n            } else {\n                this.$emit('open');\n            }\n        }\n    },\n    mounted() {\n        this.setDragOpts();\n        this.setResizeOpts();\n        this.initDialog();\n    },\n    methods: {\n        setDragOpts() {\n            this.dragOpts = Object.assign({\n                edge: 5,\n                disabled: !this.draggable,\n                handle: this.$refs.headerRef\n            }, this.draggableOptions, {\n                dragEnd: (state) => {\n                    this.left = state.left;\n                    this.top = state.top;\n                    if (this.draggableOptions && this.draggableOptions.dragEnd) {\n                        this.draggableOptions.dragEnd(state);\n                    }\n                }\n            });\n        },\n        setResizeOpts() {\n            this.resizeOpts = Object.assign({\n                edge: 5,\n                disabled: !this.resizable\n            }, this.resizableOptions, {\n                resizeStop: (state) => {\n                    this.width = state.width;\n                    this.height = state.height;\n                    if (this.resizableOptions && this.resizableOptions.resizeStop) {\n                        this.resizableOptions.resizeStop(state);\n                    }\n                }\n            });\n        },\n        initDialog() {\n            if (!this.closedState) {\n                if (this.$refs.panelRef) {\n                    if (!this.inline) {\n                        document.body.appendChild(this.$refs.panelRef);\n                    }\n                    this.openMask();\n                    this.displaying();\n                }\n            } else {\n                this.closeMask();\n            }\n        },\n        openMask() {\n            if (this.modal && !this.maskEl) {\n                this.maskEl = document.createElement('div');\n                domHelper.addClass(this.maskEl, 'window-mask');\n                if (!this.inline) {\n                    document.body.appendChild(this.maskEl);\n                } else {\n                    domHelper.addClass(this.maskEl, 'inline');\n                    this.$el.appendChild(this.maskEl);\n                }\n            }\n        },\n        closeMask() {\n            if (this.maskEl) {\n                if (!this.inline) {\n                    document.body.removeChild(this.maskEl);\n                } else {\n                    this.$el.removeChild(this.maskEl);\n                }\n                this.maskEl = null;\n            }\n        },\n        open() {\n            this.closedState = false;\n        },\n        close() {\n            this.closedState = true;\n        },\n        displaying() {\n            this.moveToTop();\n            this.left = parseInt(this.$refs.panelRef.style.left) || null;\n            this.top = parseInt(this.$refs.panelRef.style.top) || null;\n            if (this.left == null) {\n                this.hcenter();\n            }\n            if (this.top == null) {\n                this.vcenter();\n            }\n        },\n        moveToTop() {\n            if (this.maskEl) {\n                this.maskEl.style.zIndex = String(window.DialogZIndex++);\n            }\n            if (this.$refs.panelRef) {\n                this.$refs.panelRef.style.zIndex = String(window.DialogZIndex++);\n            }\n        },\n        hcenter() {\n            if (this.$refs.panelRef) {\n                let view = domHelper.getViewport();\n                let vwidth = view.width;\n                if (this.inline) {\n                    let parent = domHelper.closest(this.$refs.panelRef, '.dialog-inline');\n                    vwidth = domHelper.outerWidth(parent);\n                }\n                let width = domHelper.outerWidth(this.$refs.panelRef);\n                this.left = (vwidth - width) / 2;\n            }\n        },\n        vcenter() {\n            if (this.$refs.panelRef) {\n                let view = domHelper.getViewport();\n                let vheight = view.height;\n                let scrollTop = domHelper.getScrollTop();\n                if (this.inline) {\n                    let parent = domHelper.closest(this.$refs.panelRef, '.dialog-inline');\n                    vheight = domHelper.outerHeight(parent);\n                    scrollTop = 0;\n                }\n                let height = domHelper.outerHeight(this.$refs.panelRef);\n                this.top = (vheight - height) / 2 + scrollTop;\n            }\n        },\n        center() {\n            this.hcenter();\n            this.vcenter();\n        }\n    },\n    render() {\n        return (\n            <div class=\"dialog-inline\">\n                {\n                    !this.closedState &&\n                    <div ref=\"panelRef\" v-Draggable={this.dragOpts} v-Resizable={this.resizeOpts} class={this.panelClasses} style={this.panelStyles}>\n                        {this.panelHeader()}\n                        {this.panelBody()}\n                        {this.panelFooter()}\n                    </div>\n                }\n            </div>\n        )\n    }\n}","﻿import Dialog from \"../dialog/Dialog\";\nimport domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'Drawer',\n    extends: Dialog,\n    props: {\n        borderType: {\n            type: String,\n            default: 'none'    // thin,thick,none\n        },\n        collapsed: {\n            type: Boolean,\n            default: true\n        },\n        collapsible: {\n            type: Boolean,\n            default: false\n        },\n        closable: {\n            type: Boolean,\n            default: false\n        },\n        modal: {\n            type: Boolean,\n            default: true\n        },\n        drawerCls: String,\n        drawerStyle: Object,\n        maskClosable: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: true\n        },\n        region: {\n            type: String,\n            default: 'west'\n        },\n        expandIconCls: String,\n        collapseIconCls: String\n    },\n    data() {\n        return {\n            isExpanding: false,\n            isChanging: false,\n            collapseToShrinkBody: false\n        }\n    },\n    computed: {\n        panelStyles() {\n            return [this.panelStyle, this.drawerStyle, {\n                left: this.left ? this.left + 'px' : (this.drawerStyle ? this.drawerStyle.left : null),\n                top: this.left ? this.top + 'px' : (this.drawerStyle ? this.drawerStyle.top : null),\n                width: this.width ? this.width + 'px' : (this.drawerStyle ? this.drawerStyle.width : null),\n                height: this.height ? this.height + 'px' : (this.drawerStyle ? this.drawerStyle.height : null)\n            }];\n        },\n        panelClasses() {\n            let cls = 'drawer window window-shadow';\n            if (this.borderType == 'none') {\n                cls += ' window-thinborder window-noborder';\n            } else if (this.borderType == 'thin') {\n                cls += ' window-thinborder';\n            }\n            if (this.inline){\n                cls += ' inline';\n            }\n            return ['panel f-column', cls, this.panelCls, this.drawerCls, {\n                'layout-collapsed': this.collapsedState,\n                'layout-animate': this.animate && !this.isChanging,\n                'layout-panel-east': this.region == 'east',\n                'layout-panel-west': this.region == 'west',\n                'layout-panel-south': this.region == 'south',\n                'layout-panel-north': this.region == 'north',\n            }];\n        },\n        collapsibleClasses() {\n            let icons = {\n                'west': 'left',\n                'east': 'right',\n                'north': 'up',\n                'south': 'down'\n            };\n            if (this.collapsedState) {\n                return this.expandIconCls ? this.expandIconCls : 'layout-button-' + icons[this.region];\n            } else {\n                return this.collapseIconCls ? this.collapseIconCls : 'layout-button-' + icons[this.region];\n            }\n        },\n    },\n    watch: {\n        region() {\n            this.isChanging = true;\n            setTimeout(() => this.isChanging = false)\n        },\n        collapsed() {\n            this.collapsed ? this.collapse() : this.expand()\n        }\n    },\n    mounted() {\n        if (this.$refs.panelRef) {\n            domHelper.bind(this.$refs.panelRef, 'transitionend', this.onSlideEnd);\n        }\n    },\n    beforeUnmount() {\n        if (this.$refs.panelRef) {\n            domHelper.unbind(this.$refs.panelRef, 'transitionend');\n            // domHelper.unbind(this.$refs.panelRef);\n        }\n        this.$el.appendChild(this.$refs.panelRef)\n        this.close();\n    },\n    // destroyed() {\n    // },\n    methods: {\n        onSlideEnd() {\n            if (this.collapsedState) {\n                this.$emit('collapse')\n            } else {\n                this.$emit('expand')\n            }\n        },\n        initDialog() {\n            if (!this.closedState) {\n                if (this.$refs.panelRef) {\n                    if (!this.inline){\n                        document.body.appendChild(this.$refs.panelRef);\n                    }\n                    this.displaying();\n                }\n            } else {\n                this.closeMask();\n            }\n        },\n        displaying() {\n            this.moveToTop();\n        },\n        clickCollapsibleTool() {\n            this.collapse();\n        },\n        onClickMask() {\n            if (this.maskClosable) {\n                this.collapse();\n            }\n        },\n        expand() {\n            this.collapsedState = false;\n            this.isExpanding = true;\n            this.openMask();\n            this.$nextTick(() => this.isExpanding = false);\n            if (!this.animate) {\n                this.$emit('expand')\n            }\n            if (this.maskEl) {\n                domHelper.addClass(this.maskEl, 'drawer-mask')\n                domHelper.bind(this.maskEl, 'click', this.onClickMask)\n            }\n        },\n        collapse() {\n            if (this.maskEl) {\n                domHelper.unbind(this.maskEl, 'click');\n            }\n            this.collapsedState = true;\n            this.closeMask();\n            if (!this.animate) {\n                this.$emit('collapse')\n            }\n        }\n    }\n\n}","﻿export default {\n    name: 'ProgressBar',\n    props: {\n        value: {\n            type: Number,\n            default: 0\n        },\n        showValue: {\n            type: Boolean,\n            default: false\n        },\n        barCls: String,\n        barStyle: Object\n    },\n    computed: {\n        barClasses() {\n            return ['progressbar-value f-row f-content-center', this.barCls];\n        },\n        barStyles() {\n            return [this.barStyle, {\n                width: this.value + '%'\n            }];\n        }\n    },\n    render() {\n        return (\n            <div class=\"progressbar f-row\">\n                <div class={this.barClasses} style={this.barStyles}>\n                    {this.showValue && <span>{this.value}%</span>}\n                    <slot></slot>\n                </div>\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'TreeGridTitle',\n    props: {\n        row: Object,\n        column: Object,\n        rowIndex: Number\n    },\n    render() {\n        let cell = '';\n        if (this.column.$slots['body']) {\n            cell = this.column.$slots['body']({\n                row: this.row,\n                column: this.column,\n                rowIndex: this.rowIndex\n            });\n        } else if (this.column.$slots['cell']) {\n            cell = this.column.$slots['cell']({\n                row: this.row,\n                column: this.column,\n                rowIndex: this.rowIndex\n            });\n        } else {\n            cell = this.row[this.column.field];\n        }\n        return (\n            <span class=\"tree-title\">{cell}</span>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridBodyCell from '../gridbase/GridBodyCell';\nimport TreeGridTitle from './TreeGridTitle';\n\nexport default {\n    name: 'TreeGridRow',\n    components: {\n        GridBodyCell,\n        TreeGridTitle\n    },\n    props: {\n        gridBody: Object,\n        row: Object,\n        prow: Object,\n        columns: Array,\n        depth: Number,\n        rowIndex: Number\n    },\n    data() {\n        return {\n            loading: false\n        }\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        },\n        indentWidth() {\n            if (this.isLeaf) {\n                return (this.depth + 1) * 16;\n            } else {\n                return this.depth * 16;\n            }\n        },\n        isExpanded() {\n            if (!this.row.state || this.row.state == 'open') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isCollapsed() {\n            if (this.row.state && this.row.state == 'closed') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isLeaf() {\n            if (this.row.state == 'closed') {\n                return false;\n            } else {\n                if (this.row.children && this.row.children.length) {\n                    this.loading = false;\n                    return false;\n                } else {\n                    if (this.loading) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        hitClasses() {\n            return ['tree-hit', {\n                'tree-expanded': this.isExpanded,\n                'tree-collapsed': this.isCollapsed\n            }];\n        },\n        iconClasses() {\n            return ['tree-icon tree-folder', this.row.iconCls, {\n                'tree-folder-open': this.isExpanded,\n                'tree-file': this.isLeaf,\n                'tree-loading': this.loading\n            }];\n        },\n        checkboxClasses() {\n            let cc = ['unchecked', 'checked', 'indeterminate'];\n            let index = cc.indexOf(this.row.checkState);\n            if (index == -1) {\n                index = 0;\n            }\n            return 'tree-checkbox tree-checkbox' + index;\n        }\n    },\n    mounted() {\n        this.row.parent = this.prow;\n    },\n    methods: {\n        isTreeField(field) {\n            return field == this.gridBody.view.grid.treeField;\n        },\n        isEditable(row, col) {\n            if (this.grid.isEditing(row, col)) {\n                if (col.editable) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        doEdit(col, target) {\n            target = domHelper.closest(target, 'td');\n            this.grid.beginEdit(this.row, col);\n            setTimeout(() => {\n                let input = target.querySelector('.textbox-text');\n                if (input) {\n                    input.focus();\n                }\n            });\n        },\n        toggle(event) {\n            event.stopPropagation();\n            if (this.isExpanded) {\n                this.row.state = 'closed';\n                // this.$set(this.row, 'state', 'closed');\n                this.grid.$emit('rowCollapse', this.row);\n            } else {\n                this.loading = true;\n                this.row.state = 'open';\n                // this.$set(this.row, 'state', 'open');\n                this.grid.$emit('rowExpand', this.row);\n            }\n        },\n        onCheckRow(event) {\n            event.stopPropagation();\n            if (this.row.checkState == 'checked') {\n                this.grid.uncheckRow(this.row);\n            } else {\n                this.grid.checkRow(this.row);\n            }\n        },\n        onRowClick(row, event) {\n            event.stopPropagation();\n            this.grid.onRowClick(row);\n        },\n        onRowDblClick(row) {\n            this.grid.$emit('rowDblClick', row);\n        },\n        onRowContextMenu(row, event) {\n            this.grid.$emit('rowContextMenu', { row: row, originalEvent: event });\n        },\n        onCellClick(col, event) {\n            this.grid.onCellClick(this.row, col, event);\n            if (this.grid.clickToEdit || (this.grid.dblclickToEdit && this.grid.editingItem)) {\n                this.doEdit(col, event.target);\n            }\n        },\n        onCellDblClick(col, event) {\n            this.grid.$emit('cellDblClick', { row: this.row, column: col });\n            if (this.grid.dblclickToEdit) {\n                this.doEdit(col, event.target);\n            }\n        },\n        onCellContextMenu(col, event) {\n            this.grid.$emit('cellContextMenu', { row: this.row, column: col, originalEvent: event });\n        },\n        onCellKeyDown(col, event) {\n            if (this.grid.editMode == 'cell') {\n                if (event.which == 13) {\n                    event.stopPropagation();\n                    this.grid.endEdit();\n                } else if (event.which == 27) {\n                    event.stopPropagation();\n                    this.grid.cancelEdit();\n                }\n            }\n        }\n    },\n    render() {\n        return (\n            <tr class={['datagrid-row', { 'datagrid-row-over': this.grid.isHighlighted(this.row), 'datagrid-row-selected': this.grid.isSelected(this.row) }]}\n                onMouseenter={() => this.grid.highlightRow = this.row}\n                onMouseleave={() => this.grid.highlightRow = null}\n                onClick={event => this.onRowClick(this.row, event)}\n                onDblclick={event => this.onRowDblClick(this.row, event)}\n                onContextmenu={event => this.onRowContextMenu(this.row, event)}\n            >\n                {\n                    this.columns.map(col => (\n                        <td\n                            class={[{ 'datagrid-row-selected': this.grid.isSelected(this.row, col), 'datagrid-row-over': this.grid.isHighlighted(this.row, col) }]}\n                            onMouseenter={() => this.grid.highlightCell = { row: this.row, column: col }}\n                            onMouseleave={() => this.grid.highlightCell = null}\n                            onClick={event => this.onCellClick(col, event)}\n                            onDblclick={event => this.onCellDblClick(col, event)}\n                            onContextmenu={event => this.onCellContextMenu(col, event)}\n                            onKeydown={event => this.onCellKeyDown(col, event)}\n                        >\n                            {\n                                (!this.isTreeField(col.field) || this.isEditable(this.row, col)) &&\n                                <GridBodyCell row={this.row} column={col}></GridBodyCell>\n                            }\n                            {\n                                (this.isTreeField(col.field) && !this.isEditable(this.row, col)) &&\n                                <div\n                                    class={['datagrid-cell', { 'datagrid-editable': this.isEditable(this.row, col) }]}\n                                    style={{ textAlign: col.align || null }}>\n                                    {\n                                        !this.isEditable(this.row, col) &&\n                                        <>\n                                            <span class=\"tree-indent\" style={{ width: this.indentWidth + 'px' }}></span>\n                                            {!this.isLeaf && <span class={this.hitClasses} onClick={this.toggle}></span>}\n                                            <span class={this.iconClasses}></span>\n                                            {this.grid.checkbox && <span class={this.checkboxClasses} onClick={this.onCheckRow}></span>}\n                                            <TreeGridTitle row={this.row} column={col}></TreeGridTitle>\n                                        </>\n                                    }\n                                </div>\n                            }\n                        </td>\n\n                    ))\n                }\n            </tr>\n        )\n    }\n}","﻿import SlideUpDown from '../base/SlideUpDown';\nimport TreeGridRow from './TreeGridRow';\n\nexport default {\n    name: 'TreeGridChildren',\n    components: {\n        TreeGridRow\n    },\n    directives: { SlideUpDown },\n    props: {\n        gridBody: Object,\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        prow: Object,\n        columns: Array,\n        depth: {\n            type: Number,\n            default: 0\n        }\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        }\n    },\n    render() {\n        return (\n            <table class=\"datagrid-btable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                <colgroup>\n                    {\n                        this.columns.map(col => (\n                            <col style={{ width: col.widthState }}></col>\n                        ))\n                    }\n                </colgroup>\n                <tbody>\n                    {\n                        (this.rows||[]).map((row) => (\n                            <>\n                                <TreeGridRow gridBody={this.gridBody} row={row} prow={this.prow} columns={this.columns} depth={this.depth}></TreeGridRow>\n                                {\n                                    row.children && row.children.length > 0 &&\n                                    <tr class=\"treegrid-tr-tree\">\n                                        <td colspan={this.columns.length} style=\"border:0\">\n                                            <div v-SlideUpDown={{animate:this.grid.animate,collapsed:row.state=='closed',disabled:false}}>\n                                                <TreeGridChildren gridBody={this.gridBody} rows={row.children} prow={row} columns={this.columns} depth={this.depth + 1}></TreeGridChildren>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                            </>\n                        ))\n                    }\n                </tbody>\n            </table>\n        )\n    }\n}","﻿import GridBody from '../gridbase/GridBody';\nimport TreeGridChildren from './TreeGridChildren';\n\nexport default {\n    name: 'TreeGridBody',\n    extends: GridBody,\n    components: {\n        TreeGridChildren\n    },\n    computed: {\n        view() {\n            return this.$parent;\n        }\n    },\n    render() {\n        return (\n            <div ref=\"bodyRef\" class=\"datagrid-body f-full\" onScroll={this.onScroll}>\n                <div ref=\"innerRef\" class=\"datagrid-body-inner\">\n                    <TreeGridChildren gridBody={this} rows={this.rows} columns={this.columns}></TreeGridChildren>\n                </div>\n            </div>\n        )\n    }\n}","﻿import GridView from '../gridbase/GridView';\nimport TreeGridBody from './TreeGridBody'\n\nexport default {\n    name: 'TreeGridView',\n    extends: GridView,\n    components: {\n        TreeGridBody\n    },\n    computed: {\n        grid() {\n            return this.$parent;\n        }\n    },\n    methods: {\n        onHeaderCellClick(event) {\n            let col = event.column;\n            if (col.sortable) {\n                this.grid.addSort(event.column);\n                // this.grid.data = this.grid.data;\n                this.grid.setData(this.grid.innerData);\n                this.grid.$emit('sortChange', this.grid.sortsState);\n            }\n        }\n    },\n    render() {\n        return (\n            <div class={this.viewCls}>\n                {\n                    this.grid.showHeader &&\n                    <GridHeader ref=\"header\"\n                        columnGroup={this.columnGroup}\n                        columns={this.columns}\n                        paddingWidth={this.headerPaddingWidth}\n                        grid={this.grid}\n                        onCellClick={this.onHeaderCellClick}>\n                    </GridHeader>\n                }\n                <TreeGridBody ref=\"body\" align=\"center\"\n                    columns={this.columns}\n                    rows={this.rows}\n                    onBodyScroll={this.onBodyScroll}>\n                </TreeGridBody>\n                {\n                    this.grid.showFooter &&\n                    <GridFooter ref=\"footer\"\n                        columns={this.columns}\n                        rows={this.footerRows}\n                        paddingWidth={this.headerPaddingWidth}>\n                    </GridFooter>\n                }\n            </div>\n        )\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport Pagination from '../pagination/Pagination';\nimport GridBase from '../gridbase/GridBase';\nimport GridEmpty from '../gridbase/GridEmpty';\nimport TreeGridView from './TreeGridView';\n\nexport default {\n    name: 'TreeGrid',\n    extends: GridBase,\n    components: {\n        Pagination,\n        TreeGridView,\n        GridEmpty\n    },\n    props: {\n        idField: String,\n        treeField: String,\n        selectionMode: {\n            type: String,\n            default: 'single'\n        },\n        checkbox: {\n            type: Boolean,\n            default: false\n        },\n        cascadeCheck: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: false\n        }\n    },\n    mounted() {\n        treeHelper.$vue = this;\n    },\n    methods: {\n        getCheckedRows(state = 'checked') {\n            let rows = [];\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.forNodes(this.innerData, (row) => {\n                if (row.checkState == state) {\n                    rows.push(row);\n                }\n            });\n            return rows;\n        },\n        checkRow(row) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.checkNode(row, () => {\n                this.$emit('rowCheck', row);\n            });\n        },\n        uncheckRow(row) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.uncheckNode(row, () => {\n                this.$emit('rowUncheck', row);\n            });\n        },\n        uncheckAllRows() {\n            treeHelper.uncheckAllNodes(this.innerData, () => {\n\n            });\n        },\n        adjustCheck(row) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.adjustCheck(row);\n        },\n        sortData() {\n            if (!this.sortsState || !this.sortsState.length) {\n                return;\n            }\n            let cc = [];\n            for (let i = 0; i < this.sortsState.length; i++) {\n                cc.push(this.findColumn(this.sortsState[i].field));\n            }\n            let sortFunc = (a, b) => {\n                return a == b ? 0 : (a > b ? 1 : -1);\n            };\n            let _sort = (rows) => {\n                rows.sort((r1, r2) => {\n                    let r = 0;\n                    for (let i = 0; i < this.sortsState.length; i++) {\n                        let sort = this.sortsState[i];\n                        if (cc[i] && cc[i].sorter) {\n                            r = cc[i].sorter(r1, r2);\n                        } else {\n                            r = sortFunc(r1[sort.field], r2[sort.field]);\n                        }\n                        r = r * (sort.order == 'asc' ? 1 : -1);\n                        if (r != 0) {\n                            return r;\n                        }\n                    }\n                    return r;\n                });\n                rows.forEach(row => {\n                    if (row.children && row.children.length) {\n                        _sort(row.children);\n                    }\n                });\n            };\n            _sort(this.innerData);\n        }\n    },\n    render() {\n        return (\n            <div class=\"f-column panel-noscroll\">\n                <div style=\"display:none\">{this.$slots.default()}</div>\n                <div class={['panel-body panel-body-noheader datagrid datagrid-wrap f-full f-column', { 'panel-body-noborder': !this.border }]}>\n                    {\n                        this.pagination && (this.pagePosition == 'both' || this.pagePosition == 'top') &&\n                        <Pagination class=\"datagrid-pager datagrid-pager-top f-noshrink\"\n                            total={this.totalState}\n                            pageSize={this.pageSizeState}\n                            pageNumber={this.pageNumberState}\n                            loading={this.loading}\n                            onPageChange={this.onPageChange}\n                        />\n                    }\n                    <div ref=\"viewRef\" class=\"datagrid-view f-row f-full\">\n                        {\n                            (this.leftGroup || this.leftColumns) &&\n                            <TreeGridView ref=\"view1\"\n                                key=\"view1\"\n                                viewIndex={1}\n                                columnGroup={this.leftGroup}\n                                columns={this.leftColumns}\n                                rows={this.rows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.leftFrozenWidth }}\n                            />\n                        }\n                        <TreeGridView ref=\"view2\"\n                            key=\"view2\"\n                            viewIndex={2}\n                            columnGroup={this.centerGroup}\n                            columns={this.centerColumns}\n                            rows={this.rows}\n                            footerRows={this.footerRows}\n                            onBodyScroll={this.onBodyScroll}\n                        />\n                        {\n                            (this.rightGroup || this.rightColumns) &&\n                            <TreeGridView ref=\"view3\"\n                                key=\"view3\"\n                                viewIndex={3}\n                                columnGroup={this.rightGroup}\n                                columns={this.rightColumns}\n                                rows={this.rows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.rightFrozenWidth }}\n                            />\n                        }\n                        {this.splitStyle && <div class=\"datagrid-split-proxy\" style={this.splitStyle}></div>}\n                    </div>\n                    {\n                        this.pagination && (this.pagePosition == 'both' || this.pagePosition == 'bottom') &&\n                        <Pagination class=\"datagrid-pager f-noshrink\"\n                            total={this.totalState}\n                            pageSize={this.pageSizeState}\n                            pageNumber={this.pageNumberState}\n                            loading={this.loading}\n                            pageChange={this.onPageChange}\n                        />\n                    }\n                </div>\n                {\n                    this.loading &&\n                    <div class=\"datagrid-loading f-row\">\n                        <div class=\"datagrid-mask\"></div>\n                        <div class=\"datagrid-mask-msg\">{this.loadMsg}</div>\n                    </div>\n                }\n                {\n                    !this.rows.length && !this.loading &&\n                    <GridEmpty grid={this}></GridEmpty>\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport { MyEvent } from '../base/DomHelper';\nimport Draggable from '../draggable/Draggable';\n\nexport default {\n    name: 'Slider',\n    directives: { Draggable },\n    props: {\n        value: [Number, Array],\n        modelValue: [Number, Array],\n        mode: {\n            type: String,\n            default: 'h'\n        },\n        reversed: {\n            type: Boolean,\n            default: false\n        },\n        showTip: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        range: {\n            type: Boolean,\n            default: false\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: 100\n        },\n        step: {\n            type: Number,\n            default: 1\n        },\n        rule: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        const v = this.value !== undefined ? this.value:this.modelValue;\n        return {\n            valueState: v\n        }\n    },\n    computed: {\n        sliderClasses() {\n            return ['slider', {\n                'slider-disabled': this.disabled,\n                'f-row slider-v': this.mode == 'v',\n                'f-column slider-h': this.mode == 'h'\n            }];\n        },\n        value1() {\n            return this.valueState instanceof Array ? this.valueState[0] : this.valueState;\n        },\n        value2() {\n            return this.range ? (this.valueState ? this.valueState[1] : null) : null;\n        },\n        displayingRule() {\n            let rule = this.mode == 'h' ? this.rule : this.rule.slice(0).reverse();\n            if (this.reversed) {\n                rule = rule.slice(0).reverse();\n            }\n            return rule;\n        },\n        dragOpts1() {\n            return {\n                disabled: this.disabled,\n                axis: this.mode,\n                cursor: 'pointer',\n                drag: this.onDragHandle\n            };\n        },\n        dragOpts2() {\n            return {\n                disabled: this.disabled,\n                axis: this.mode,\n                cursor: 'pointer',\n                drag: (event) => {\n                    this.onDragHandle(event, true);\n                }\n            };\n        }\n    },\n    methods: {\n        setValue(value) {\n            this.valueState = value;\n            // this.$emit('input', this.valueState);\n            this.$emit('update:modelValue',this.valueState);\n        },\n        getPosStyle(value) {\n            let pos = this.value2pos(value);\n            return this.mode == 'h' ? { left: pos + '%' } : { top: pos + '%' };\n        },\n        getRuleValueStyle(index) {\n            let distance = index * 100 / (this.displayingRule.length - 1) + '%';\n            return this.mode == 'h' ? { left: distance } : { top: distance };\n        },\n        value2pos(value) {\n            let pos = (value - this.min) * 100.0 / (this.max - this.min);\n            if (this.mode == 'v') {\n                pos = 100 - pos;\n            }\n            if (this.reversed) {\n                pos = 100 - pos;\n            }\n            return pos;\n        },\n        pos2value(pos) {\n            let size = this.mode == 'h' ? domHelper.outerWidth(this.$refs.sliderRef) : domHelper.outerHeight(this.$refs.sliderRef);\n            pos = this.mode == 'h' ? (this.reversed ? (size - pos) : pos) : (this.reversed ? pos : (size - pos));\n            let value = this.min + (this.max - this.min) * (pos / size);\n            return +value.toFixed(0);\n        },\n        setPos(pos, second = false) {\n            let value = this.pos2value(pos);\n            let s = Math.abs(value % this.step);\n            if (s < this.step / 2) {\n                value -= s;\n            } else {\n                value = value - s + this.step;\n            }\n            if (this.range) {\n                let v1 = this.value1;\n                let v2 = this.value2;\n                if (second) {\n                    if (value < v1) {\n                        value = v1;\n                    }\n                    v2 = value;\n                } else {\n                    if (value > v2) {\n                        value = v2;\n                    }\n                    v1 = value;\n                }\n                this.setValue([v1, v2]);\n            } else {\n                this.setValue(value);\n            }\n            return value;\n        },\n\n        onDragHandle(event, second = false) {\n            if (this.disabled) {\n                return;\n            }\n            if (this.mode == 'h') {\n                let width = domHelper.outerWidth(this.$refs.sliderRef);\n                if (event.left < 0) {\n                    event.left = 0;\n                }\n                if (event.left > width) {\n                    event.left = width;\n                }\n            } else {\n                let height = domHelper.outerHeight(this.$refs.sliderRef);\n                if (event.top < 0) {\n                    event.top = 0;\n                }\n                if (event.top > height) {\n                    event.top = height;\n                }\n            }\n            if (this.mode == 'h') {\n                let width = domHelper.outerWidth(this.$refs.sliderRef);\n                let value = this.setPos(event.left, second);\n                event.left = this.value2pos(value) * width / 100;\n            } else {\n                let height = domHelper.outerHeight(this.$refs.sliderRef);\n                let value = this.setPos(event.top, second);\n                event.top = this.value2pos(value) * height / 100;\n            }\n            event.target.applyDrag();\n        },\n        doDown(event) {\n            if (this.disabled) {\n                return;\n            }\n            event = new MyEvent(event);\n            let offset = domHelper.offset(this.$refs.sinnerRef);\n            let pos = this.mode == 'h' ? event.pageX - offset.left : event.pageY - offset.top;\n            let value = this.pos2value(pos);\n            let s = Math.abs(value % this.step);\n            if (s < this.step / 2) {\n                value -= s;\n            } else {\n                value = value - s + this.step;\n            }\n            if (this.range) {\n                let v1 = this.value1;\n                let v2 = this.value2;\n                let m = (v1 + v2) / 2.0;\n                if (value < v1) {\n                    v1 = value;\n                } else if (value > v2) {\n                    v2 = value;\n                } else {\n                    value < m ? v1 = value : v2 = value;\n                }\n                this.setValue([v1, v2]);\n            } else {\n                this.setValue(value);\n            }\n        }\n\n\n    },\n    render() {\n        return (\n            <div ref=\"sliderRef\" class={this.sliderClasses}>\n                <div ref=\"sinnerRef\" class=\"slider-inner\" onTouchstart={this.doDown} onMousedown={this.doDown}>\n                    <a href=\"javascript:;\" class=\"slider-handle\" style={this.getPosStyle(this.value1)} v-Draggable={this.dragOpts1}></a>\n                    {this.showTip && <span class=\"slider-tip\" style={this.getPosStyle(this.value1)}>{this.value1}</span>}\n                    {\n                        this.range &&\n                        <>\n                            <a href=\"javascript:;\" class=\"slider-handle\" style={this.getPosStyle(this.value2)} v-Draggable={this.dragOpts2}></a>\n                            {this.showTip && <span class=\"slider-tip\" style={this.getPosStyle(this.value2)}>{this.value2}</span>}\n                        </>\n                    }\n                </div>\n                {\n                    this.rule.length > 0 &&\n                    <>\n                        <div class=\"slider-rule\">\n                            {\n                                this.displayingRule.map((v, index) => (\n                                    <span style={this.getRuleValueStyle(index)}></span>\n                                ))\n                            }\n                        </div>\n                        <div class=\"slider-rulelabel\">\n                            {\n                                this.displayingRule.map((v, index) => (\n                                    <>\n                                        {v != '|' && <span style={this.getRuleValueStyle(index)}>{v}</span>}\n                                    </>\n                                ))\n                            }\n                        </div>\n                    </>\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport ComboBox from '../combobox/ComboBox';\n\nexport default {\n    name: 'TagBox',\n    extends: ComboBox,\n    props: {\n        hasDownArrow: {\n            type: Boolean,\n            default: false\n        },\n        multiple: {\n            type: Boolean,\n            default: true\n        },\n        limitToList: {\n            type: Boolean,\n            default: false\n        },\n        tagCss: [Function, String, Object]\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n            }\n            return this.textState;\n        }\n    },\n    mounted() {\n        this.textState = '';\n        this.$nextTick(() => {\n            this.autoSizeInput();\n        });\n        // this.$on('blur', () => {\n        //     this.textState = '';\n        //     this.$nextTick(() => {\n        //         this.autoSizeInput();\n        //     });\n        // });\n        // this.$on('valueChange', () => {\n        //     this.closePanel();\n        // });\n    },\n    methods: {\n        afterValueChange() {\n            ComboBox.methods.afterValueChange.call(this)\n            this.closePanel();\n        },\n        afterBlur() {\n            ComboBox.methods.afterBlur.call(this)\n            this.textState = '';\n            this.$nextTick(() => {\n                this.autoSizeInput();\n            });\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.limitToList) {\n                    this.openPanel();\n                    clearTimeout(this.timer);\n                    this.timer = setTimeout(() => {\n                        this.doFilter(this.textState);\n                    }, this.delay);\n                }\n                this.autoSizeInput();\n            }\n        },\n        onKeyDown(event) {\n            ComboBox.methods.onKeyDown.call(this, event);\n            if (event.which == 13) {\n                this.doEnter();\n            } else if (event.which == 27) {\n                this.textState = '';\n                this.autoSizeInput();\n            }\n        },\n        doEnter() {\n            this.autoSizeInput();\n            if (this.limitToList) {\n                this.doFilter('');\n            } else {\n                const text = this.textState.trim();\n                if (text) {\n                    let value = [].concat(this.valueState);\n                    value.push(text);\n                    this.setValue(value);\n                }\n            }\n            this.textState = '';\n            this.autoSizeInput();\n        },\n        getCss(css, row, type) {\n            if (css) {\n                let cssValue = typeof css == 'function' ? css(row) : css;\n                if (type == 'class') {\n                    return typeof cssValue == 'string' ? cssValue : null;\n                } else {\n                    return typeof cssValue == 'object' ? cssValue : null;\n                }\n            }\n            return null;\n        },\n        getTagClass(row) {\n            return this.getCss(this.tagCss, row, 'class');\n        },\n        getTagStyle(row) {\n            return this.getCss(this.tagCss, row, 'style');\n        },\n        fixValue() {\n            // do nothing\n            this.autoSizeInput();\n        },\n        removeTag(index) {\n            let value = this.valueState.filter((v, i) => i != index);\n            this.setValue(value);\n        },\n        autoSizeInput() {\n            if (!this.$refs.inputRef) {\n                return;\n            }\n            let el = this.$refs.inputRef;\n            let style = getComputedStyle(el);\n            let tmp = document.createElement('span');\n            Object.assign(tmp.style, {\n                position: 'absolute',\n                top: -9999,\n                left: -9999,\n                width: 'auto',\n                fontFamily: style.fontFamily,\n                fontSize: style.fontSize,\n                fontWeight: style.fontWeight,\n                whiteSpace: 'nowrap'\n            });\n            tmp.innerHTML = this.text;\n            document.body.appendChild(tmp);\n\n            let getWidth = (val) => {\n                val = val || '';\n                var s = val.replace(/&/g, '&amp;').replace(/\\s/g, ' ').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n                tmp.innerHTML = s;\n                return domHelper.outerWidth(tmp);\n            };\n            let width = this.text ? getWidth(this.text) : getWidth(this.placeholder);\n            document.body.removeChild(tmp);\n            this.$refs.inputRef.style.width = (width + 20) + 'px';\n            if (!this.panelClosed) {\n                this.$nextTick(() => this.alignPanel());\n            }\n        },\n        renderLabels() {\n            return (\n                <span class=\"tagbox-labels f-full f-order3\">\n                    {\n                        (this.selection || []).map((row, rowIndex) => (\n                            <span\n                                class={['tagbox-label f-order3 f-noshrink', this.getTagClass(row)]}\n                                style={this.getTagStyle(row)}\n                            >\n                                {row[this.textField]}\n                                <a href=\"javascript:;\" class=\"tagbox-remove\" onClick={() => this.removeTag(rowIndex)}></a>\n                            </span>\n                        ))\n                    }\n                    {\n                        this.renderInput()\n                    }\n                </span>\n            )\n        },\n        renderField() {\n            return (\n                <span class={['combo tagbox f-field', this.baseClasses]} onClick={() => this.$refs.inputRef.focus()}>\n                    {this.renderLabels()}\n                    {/* {this.renderInput()} */}\n                    {this.renderAddon()}\n                    {this.renderOthers()}\n                </span>\n            )\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport InputBase from '../base/InputBase';\n\nexport default {\n    name: 'SearchBox',\n    extends: InputBase,\n    props: {\n        menuAlign: {\n            type: String,\n            default: 'left'\n        },\n        category: String,\n        buttonAlign: {\n            type: String,\n            default: 'right'\n        },\n        buttonIconCls: {\n            type: String,\n            default: 'icon-search'\n        }\n    },\n    data() {\n        return {\n            hasMenu: true,\n            menu: null,\n            menuBtnText: null,\n            menuBtnIcon: null,\n            categoryState: this.category\n        }\n    },\n    watch: {\n        category(value) {\n            this.categoryState = value;\n        }\n    },\n    computed: {\n        text() {\n            return this.focused ? this.textState : (this.textFormatter || this.defaultTextFormatter)(this.textState);\n        },\n        baseClasses() {\n            const cls = InputBase.computed.baseClasses();\n            return ['searchbox'].concat(cls);\n        },\n        mbClasses() {\n            return ['f-noshrink textbox-button textbox-button-' + this.menuAlign, {\n                'f-order0': this.menuAlign == 'left',\n                'f-order7': this.menuAlign == 'right'\n            }];\n        },\n        buttonClasses() {\n            return ['textbox-addon f-column f-noshrink', {\n                'f-order0': this.buttonAlign == 'left',\n                'f-order6': this.buttonAlign == 'right'\n            }];\n        }\n    },\n    mounted() {\n        domHelper.bind(this.$el, 'keydown', this.onKeyDown);\n        if (this.$refs.mb) {\n            this.menu = this.$refs.mb.menu;\n        } else {\n            this.hasMenu = false;\n        }\n        this.initMenu();\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$el, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        onInput(event) {\n            this.textState = event.target.value;\n            this.setValue(this.textState);\n        },\n        onKeyDown(event) {\n            if (event.which == 13) {\n                event.stopPropagation();\n                event.preventDefault();\n                this.doSearch();\n            }\n        },\n        setValue(value) {\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        doSearch() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            this.$emit('search', {\n                value: this.valueState,\n                category: this.categoryState\n            });\n        },\n        initMenu() {\n            if (this.menu) {\n                this.setCategory(this.categoryState);\n                this.menu.afterItemClick = (value) => {\n                    if (!this.disabled && !this.readonly) {\n                        this.setCategory(value);\n                    }\n                }\n            }\n        },\n        setCategory(value) {\n            let item = this.menu.findItem(value);\n            if (!item) {\n                item = this.menu.subItems[0];\n            }\n            this.categoryState = item.value || item.text;\n            this.menuBtnText = item.text;\n            this.menuBtnIcon = item.iconCls;\n        },\n        renderOthers() {\n            let menu = null;\n            if (this.$slots.default) {\n                this.$slots.default().forEach(m => {\n                    if (m.type.name == 'Menu') {\n                        menu = m;\n                    }\n                })\n            }\n            return (\n                <>\n                    {\n                        menu &&\n                        <MenuButton ref=\"mb\"\n                            class={this.mbClasses}\n                            text={this.menuBtnText}\n                            iconCls={this.menuBtnIcon}\n                            disabled={this.disabled}\n                        >\n                            {menu}\n                        </MenuButton>\n                    }\n                    <span class={this.buttonClasses}>\n                        <span class={'textbox-icon f-full ' + this.buttonIconCls} onClick={this.doSearch}></span>\n                    </span>\n                </>\n            )\n        }\n    }\n}","﻿import { h } from 'vue';\nimport domHelper from '../base/DomHelper';\n\nwindow.FormFieldIdIndex = window.FormFieldIdIndex || 1;\n\nexport default {\n    name: 'FormField',\n    props: {\n        name: String,\n        label: String,\n        labelPosition: String,\n        labelAlign: String,\n        labelFor: String,\n        labelWidth: [Number, String]\n    },\n    computed: {\n        form() {\n            let parent = this.$parent;\n            while (parent && parent.$options.name != 'Form') {\n                parent = parent.$parent;\n            }\n            return parent;\n        },\n        fieldClasses() {\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            const floatingLabel = this.form.floatingLabel;\n            const error = this.form.getError(this.name);\n            const value = this.form.getValue(this.name);\n            const focused = this.form.isFocused(this.name);\n            return ['form-field f-column', {\n                'form-field-haserror': error && this.form.errorType === 'label',\n                'form-field-empty': value == null || String(value).trim().length === 0,\n                'form-field-focused': focused,\n                'form-floating-label': floatingLabel && labelPosition === 'top'\n            }]\n        },\n        innerClasses() {\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            return ['f-full', {\n                'f-row f-vcenter': labelPosition !== 'top',\n                'f-column': labelPosition === 'top'\n            }]\n        }\n    },\n    created() {\n        this.inputId = 'form-field-inputid-' + window.FormFieldIdIndex++;\n    },\n    render() {\n        const renderLabel = (position) => {\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            if (labelPosition != position) {\n                return null;\n            }\n            const labelAlign = this.labelAlign || this.form.labelAlign;\n            const labelWidth = this.labelWidth || this.form.labelWidth;\n            const labelCls = ['f-noshrink', {\n                'textbox-label-after': labelPosition === 'after',\n                'textbox-label-top': labelPosition === 'top'\n            }];\n            const labelStyle = 'width:' + domHelper.toStyleValue(labelWidth);\n            const label = this.$slots['label'] ? this.$slots['label']() : this.label;\n            return (\n                <Label for={this.labelFor || this.inputId} align={labelAlign} class={labelCls} style={labelStyle}>{label}</Label>\n            )\n        }\n        const renderError = () => {\n            const error = this.form.getError(this.name);\n            if (this.form.errorType != 'label' || !error) {\n                return null;\n            }\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            const labelWidth = this.labelWidth || this.form.labelWidth;\n            let errorStyle = null;\n            if (this.label && labelPosition === 'before') {\n                errorStyle = 'margin-left:' + domHelper.toStyleValue(labelWidth);\n            }\n            return (\n                <div class=\"form-field-error\" style={errorStyle}>{error}</div>\n            )\n        }\n        let input = this.$slots.default();\n        let inputDisabled = false;\n        input.forEach(c => {\n            if (c.props){\n                c.props.inputId = this.inputId;\n                if (c.props.disabled) {\n                    inputDisabled = true;\n                }\n            }\n        });\n        if (this.form.errorType != 'label') {\n            const error = this.form.getError(this.name);\n            const tip = {\n                closed: false,\n                disabled: inputDisabled,\n                content: error,\n                position: this.form.tooltipPosition\n            }\n            input = (\n                <span class=\"f-full f-column\" v-Tooltip={tip}>{input}</span>\n            )\n        }\n        return h('div', {\n            'class': this.fieldClasses\n        }, [\n            h('div', {\n                'class': this.innerClasses\n            }, [\n                renderLabel('top'),\n                renderLabel('before'),\n                input,\n                renderLabel('after')\n            ]),\n            renderError()\n        ])\n    }\n}","﻿export default {\n    name: 'SideMenuIcon',\n    props: {\n        sidemenu: Object,\n        menu: Object,\n        header: {\n            type: Boolean,\n            default: true\n        }\n    },\n    render(){\n        return this.sidemenu.$slots['icon']({\n            menu: this.menu,\n            header: this.header,\n            collapsed: this.sidemenu.collapsed\n        })\n    }\n}","﻿import { Accordion, AccordionPanel } from '../accordion';\nimport Tree from '../tree/Tree';\nimport SideMenuIcon from './SideMenuIcon';\n\nexport default {\n    name: 'SideMenuItems',\n    components: {\n        Accordion,\n        AccordionPanel,\n        Tree,\n        SideMenuIcon\n    },\n    props: {\n        sidemenu: Object,\n        tip: Boolean,\n        data: [Array, Object],\n        width: null\n    },\n    data() {\n        return {\n            innerData: this.data\n        }\n    },\n    computed: {\n        border() {\n            return this.tip ? true : this.sidemenu.border;\n        },\n        multiple() {\n            return this.tip ? false : this.sidemenu.multiple;\n        }\n    },\n    watch: {\n        data() {\n            this.setData(this.data);\n        }\n    },\n    created() {\n        this.setData(this.data);\n    },\n    methods: {\n        setData(value) {\n            if (this.tip) {\n                let v = Object.assign({}, value);\n                v.state = 'open';\n                this.innerData = [v];\n            } else {\n                this.innerData = value;\n            }\n        },\n        onPanelSelect(panel) {\n            let index = this.$refs.accordion.getPanelIndex(panel);\n            if (index >= 0) {\n                this.data[index].state = 'open';\n                // this.$set(this.data[index], 'state', 'open');\n            }\n        },\n        onPanelUnselect(panel) {\n            let index = this.$refs.accordion.getPanelIndex(panel);\n            if (index >= 0) {\n                this.data[index].state = 'closed';\n                // this.$set(this.data[index], 'state', 'closed');\n            }\n        }\n    },\n    render() {\n        return (\n            <div class=\"sidemenu f-column f-full\" style={{ width: this.width ? this.width + 'px' : null }}>\n                <Accordion ref=\"accordion\" class=\"f-full\"\n                    border={this.border}\n                    animate={this.sidemenu.animate}\n                    multiple={this.multiple}\n                    onPanelSelect={this.onPanelSelect}\n                    onPanelUnselect={this.onPanelUnselect}\n                >\n                    {\n                        this.innerData.map(menu => (\n                            <AccordionPanel\n                                title={menu.text}\n                                iconCls={this.tip ? null : menu.iconCls}\n                                collapsed={menu.state == 'closed'}>\n                                <Tree\n                                    data={menu.children}\n                                    selection={this.sidemenu.selectionState}\n                                    selectLeafOnly={true}\n                                    animate={this.sidemenu.animate}\n                                    onSelectionChange={this.sidemenu.onSelectionChange}\n                                    onNodeClick={this.sidemenu.onNodeClick}>\n                                    {\n\n                                    }\n                                    {/* <template :slot=\"sidemenu.$scopedSlots.icon?'icon':null\" slot-scope=\"{node}\">\n                    <SideMenuIcon :sidemenu=\"sidemenu\" :menu=\"node\" :header=\"false\"></SideMenuIcon>\n                </template> */}\n                                </Tree>\n                                {\n                                    !this.tip && this.sidemenu.$slots['icon'] &&\n                                    <SideMenuIcon sidemenu={this.sidemenu} menu={menu} header={true}></SideMenuIcon>\n                                }\n                            </AccordionPanel>\n\n                        ))\n                    }\n\n                </Accordion>\n            </div>\n        )\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport SideMenuItems from './SideMenuItems';\nimport SideMenuIcon from './SideMenuIcon';\n\nexport default {\n    name: 'SideMenu',\n    components: {\n        SideMenuItems,\n        SideMenuIcon\n    },\n    props: {\n        data: Array,\n        selection: Object,\n        collapsed: {\n            type: Boolean,\n            default: false\n        },\n        border: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: true\n        },\n        multiple: {\n            type: Boolean,\n            default: true\n        },\n        floatMenuWidth: {\n            type: Number,\n            default: 200\n        },\n        floatMenuPosition: {\n            type: String,\n            default: 'right'\n        }\n    },\n    data() {\n        return {\n            // selection: null,\n            selectionState: this.selection,\n            tipClosed: true,\n            innerData: []\n        }\n    },\n    watch: {\n        data(value) {\n            this.setData(value);\n        },\n        selection(value) {\n            this.selectItem(value);\n        }\n    },\n    computed: {\n        sidemenu() {\n            return this;\n        }\n    },\n    mounted() {\n        this.setData(this.data);\n    },\n    methods: {\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            this.innerData = Object.assign([], value);\n            treeHelper.$vue = this;\n            treeHelper.forNodes(this.innerData, (node) => {\n                if (!node.iconCls) {\n                    node.iconCls = 'sidemenu-default-icon';\n                    // this.$set(node, 'iconCls', 'sidemenu-default-icon');\n                }\n                if (node.children) {\n                    node.nodeCls = 'tree-node-nonleaf';\n                    // this.$set(node, 'nodeCls', 'tree-node-nonleaf');\n                    if (!node.state) {\n                        node.state = 'closed';\n                        // this.$set(node, 'state', 'closed');\n                    }\n                    if (node.state == 'open') {\n                        node.nodeCls = 'tree-node-nonleaf';\n                        // this.$set(node, 'nodeCls', 'tree-node-nonleaf');\n                    } else {\n                        node.nodeCls = 'tree-node-nonleaf tree-node-nonleaf-collapsed';\n                        // this.$set(node, 'nodeCls', 'tree-node-nonleaf tree-node-nonleaf-collapsed');\n                    }\n                }\n            });\n        },\n        getTipOpts(menu) {\n            return {\n                position: this.floatMenuPosition,\n                tooltipCls: 'sidemenu-tooltip',\n                valign: 'top',\n                propsData: {\n                    sidemenu: this,\n                    data: menu,\n                    tip: true,\n                    width: this.floatMenuWidth\n                },\n                component: SideMenuItems,\n                content: (\n                    <SideMenuItems\n                        sidemenu={this}\n                        data={menu}\n                        tip={true}\n                        width={this.floatMenuWidth}\n                    />\n                ),\n                closed: menu.tipClosed != null ? menu.tipClosed : true,\n                tooltipShow: () => {\n                    menu.tipClosed = false;\n                    // this.$set(menu, 'tipClosed', false);\n                },\n                tooltipHide: () => {\n                    menu.tipClosed = true;\n                    // this.$set(menu, 'tipClosed', true);\n                }\n            };\n        },\n        selectItem(item) {\n            if (item != this.selectionState) {\n                let parent = null;\n                treeHelper.forNodes(this.innerData, (node) => {\n                    (node.children || []).forEach(n => {\n                        if (n == item) {\n                            parent = node;\n                        }\n                    })\n                })\n                while (parent) {\n                    parent.state = 'open';\n                    // this.$set(parent, 'state', 'open');\n                    parent = parent.parent;\n                }\n                this.selectionState = item;\n            }\n        },\n        onSelectionChange(node) {\n            this.selectionState = node;\n            this.$emit('selectionChange', this.selectionState);\n        },\n        onNodeClick(node) {\n            if (node.children) {\n                node.state = node.state == 'closed' ? 'open' : 'closed'\n                // this.$set(node, 'state', node.state == 'closed' ? 'open' : 'closed');\n                if (node.state == 'open') {\n                    node.nodeCls = 'tree-node-nonleaf';\n                    // this.$set(node, 'nodeCls', 'tree-node-nonleaf');\n                } else {\n                    node.nodeCls = 'tree-node-nonleaf tree-node-nonleaf-collapsed';\n                    // this.$set(node, 'nodeCls', 'tree-node-nonleaf tree-node-nonleaf-collapsed');\n                }\n            } else {\n                this.$emit('itemClick', node);\n                this.innerData.forEach(menu => menu.tipClosed = true);\n                // this.innerData.forEach(menu => this.$set(menu, 'tipClosed', true));\n            }\n        }\n    },\n    render() {\n        return (\n            <div class=\"f-column\">\n                {\n                    this.collapsed &&\n                    <div class=\"sidemenu sidemenu-collapsed f-full\">\n                        <div class={['accordion', { 'accordion-noborder': !this.border }]}>\n                            {\n                                this.innerData.map(menu => (\n                                    <div class=\"panel-header accordion-header\" v-Tooltip={this.getTipOpts(menu)}>\n                                        {\n                                            !this.$slots['icon'] &&\n                                            <>\n                                                <div class=\"panel-title panel-with-icon\"></div>\n                                                <div class={['panel-icon', menu.iconCls]}></div>\n                                            </>\n                                        }\n                                        {\n                                            this.$slots['icon'] &&\n                                            <SideMenuIcon sidemenu={this.sidemenu} menu={menu} header={true}></SideMenuIcon>\n                                        }\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                }\n                {\n                    !this.collapsed &&\n                    <SideMenuItems sidemenu={this.sidemenu} data={this.innerData}>\n                    </SideMenuItems>\n                }\n            </div >\n        )\n    }\n}","﻿import { LinkButton } from \"../linkbutton\";\n\nexport default {\n    name: 'MessagerContent',\n    props: {\n        messagerType: String,\n        title: String,\n        icon: String,\n        msg: String,\n        value: String,\n        buttons: Array\n    },\n    data() {\n        return {\n            inputValue: this.value\n        }\n    },\n    computed: {\n        messagerIcon() {\n            return this.icon ? 'messager-' + this.icon : null;\n        },\n        dialog() {\n            return this.$parent;\n        }\n    },\n    mounted() {\n        if (this.$refs.input) {\n            setTimeout(() => {\n                this.$refs.input.focus();\n            }, 300);\n        } else if (this.$refs.buttons && this.$refs.buttons.length) {\n            setTimeout(() => {\n                this.$refs.buttons[0].focus();\n            }, 300);\n        }\n    },\n    methods: {\n        closeDialog(button) {\n            if (this.messagerType == 'prompt' && button && button['value'] == true) {\n                this.dialog.resultValue = this.inputValue;\n            } else {\n                this.dialog.resultValue = button ? button['value'] : null;\n            }\n            this.dialog.close();\n        }\n    },\n    render() {\n        return (\n            <div class=\"f-column f-full\">\n                <div class=\"messager-body f-full f-column\">\n                    <div class=\"f-row f-full\">\n                        {this.messagerIcon && <div class={'f-noshrink messager-icon ' + this.messagerIcon}></div>}\n                        <div class=\"f-full\">\n                            {this.msg}\n                        </div>\n                    </div>\n                    {\n                        this.messagerType == 'prompt' &&\n                        <div style=\"margin-top:20px\">\n                            <input ref=\"input\" class=\"messager-input\" v-model={this.inputValue} />\n                        </div>\n                    }\n                </div>\n                {\n                    this.buttons &&\n                    <div class=\"dialog-button messager-button f-noshrink\">\n                        {\n                            this.buttons.map(button => (\n                                <LinkButton\n                                    ref=\"buttons\"\n                                    text={button.text}\n                                    onClick={() => this.closeDialog(button)}\n                                />\n                            ))\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}","﻿import Dialog from '../dialog/Dialog';\nimport MessagerContent from './MessagerContent';\nimport domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'MessagerDialog',\n    extends: Dialog,\n    props: {\n        component: {\n            type: [String, Object],\n            default: () => { return MessagerContent }\n        },\n        messagerIdIndex: Number,\n        messagerType: String,\n        closeMe: Function,\n        dialogStyle: {\n            type: Object,\n            default: () => { return { width: '360px', minHeight: '130px' } }\n        },\n        modal: {\n            type: Boolean,\n            default: true\n        },\n        closed: {\n            type: Boolean,\n            default: true\n        },\n        title: String,\n        msg: String,\n        icon: String,\n        value: String,\n        buttons: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            resultValue: null\n        }\n    },\n    computed: {\n        messagerIcon() {\n            return this.icon ? 'messager-' + this.icon : null;\n        }\n    },\n    mounted() {\n        window.EventHub.$on('messagerOpen', (props) => {\n            if (this.messagerIdIndex == props.messagerIdIndex) {\n                this.open();\n            }\n        })\n        window.EventHub.$on('messagerClose', (props) => {\n            if (this.messagerIdIndex == props.messagerIdIndex) {\n                this.close();\n            }\n        })\n        window.EventHub.$on('messagerPosition', (props) => {\n            if (this.messagerIdIndex == props.messagerIdIndex) {\n                this.top = props.top;\n                props.outerHeight = domHelper.outerHeight(this.$refs.panelRef);\n            }\n        })\n\n    },\n    methods: {\n        close() {\n            Dialog.methods.close.call(this);\n            this.closeMe(this.resultValue)\n        },\n        panelBody() {\n            return (\n                <div ref=\"bodyRef\" v-SlideUpDown={{ animate: this.animateState, collapsed: this.collapsedState, disabled: !this.collapseToShrinkBody }} class={['f-column ', this.bodyClasses]} style={this.bodyStyle}>\n                    <MessagerContent\n                        messagerType={this.messagerType}\n                        title={this.title}\n                        msg={this.msg}\n                        value={this.value}\n                        icon={this.icon}\n                        buttons={this.buttons}\n                    />\n                </div>\n            )\n        }\n    }\n}","﻿import { createVNode, render } from 'vue';\nimport MessagerDialog from './MessagerDialog';\n\nwindow.MessagerIdIndex = window.MessagerIdIndex || 1;\nexport default class Messager {\n    constructor() {\n        this.ok = window.Locale.t('Messager.ok', 'Ok');\n        this.cancel = window.Locale.t('Messager.cancel', 'Cancel');\n        this.template = null;\n        this.dialogs = [];\n    }\n\n    alert(options) {\n        if (!options.buttons || !options.buttons.length) {\n            options.buttons = [{ text: this.ok, value: true }];\n        }\n        return this.openDialog(options, 'alert');\n    }\n\n    confirm(options) {\n        if (!options.icon) {\n            options.icon = 'question';\n        }\n        if (!options.buttons || !options.buttons.length) {\n            options.buttons = [\n                { text: this.ok, value: true },\n                { text: this.cancel, value: false }\n            ];\n        }\n        return this.openDialog(options, 'confirm');\n    }\n\n    prompt(options) {\n        if (!options.icon) {\n            options.icon = 'question';\n        }\n        if (!options.buttons || !options.buttons.length) {\n            options.buttons = [\n                { text: this.ok, value: true },\n                { text: this.cancel, value: false }\n            ];\n        }\n        return this.openDialog(options, 'prompt');\n    }\n\n    // setPositions() {\n    //     const dialogs = this.dialogs.filter(d => d.messagerType == 'tip');\n    //     let top = 20 + document.body.scrollTop + document.documentElement.scrollTop;\n    //     dialogs.forEach(dlg => {\n    //         dlg.top = top;\n    //         top += 10 + domHelper.outerHeight(dlg.$refs.panelRef);\n    //     })\n    // }\n    setPositions() {\n        const dialogs = this.dialogs.filter(d => d.messagerType == 'tip');\n        let top = 20 + document.body.scrollTop + document.documentElement.scrollTop;\n        dialogs.forEach(dlg => {\n            dlg.top = top;\n            window.EventHub.$emit('messagerPosition', dlg)\n            top += 10 + dlg.outerHeight;\n        })\n    }\n\n    tip(options) {\n        if (typeof options == 'string') {\n            options = { msg: options }\n        }\n        if (options.timeout == null) {\n            options.timeout = 2000;\n        }\n        let top = 0;\n        const dialogs = this.dialogs.filter(d => d.messagerType == 'tip');\n        if (dialogs.length) {\n            const dlg = dialogs[dialogs.length - 1];\n            top = dlg.top + dlg.outerHeight;\n            // top = dlg.top + domHelper.outerHeight(dlg.$refs.panelRef);\n        }\n        const dlg = this.openDialog(Object.assign({\n            borderType: 'none',\n            dialogCls: 'messager-tip f-animate',\n            dialogStyle: { top: top + 'px', height: 'auto' },\n            buttons: null,\n            modal: false\n        }, options), 'tip')\n        setTimeout(() => this.setPositions());\n        return dlg;\n    }\n\n    openDialog(options, type = 'alert') {\n        options.messagerType = type;\n        options.messagerIdIndex = window.MessagerIdIndex++;\n\n        const createDialog = () => {\n            const el = document.createElement('div');\n            document.body.appendChild(el);\n            const closeMe = (resultValue) => {\n                const index = this.dialogs.findIndex(d => d.messagerIdIndex == options.messagerIdIndex)\n                if (index>=0){\n                    const dlg = this.dialogs[index];\n                    this.dialogs.splice(index, 1);\n                    window.EventHub.$emit('messagerClose', dlg)\n                    setTimeout(() => {\n                        render(null, el)\n                        document.body.removeChild(el);\n                        if (dlg.props.result){\n                            dlg.props.result(resultValue)\n                        }\n                        this.setPositions();\n                    })\n\n                }\n            }\n            const vn = createVNode(MessagerDialog, {\n                ...options,\n                closeMe,\n                onClose: ()=>{\n                    closeMe()\n                }\n            })\n            render(vn, el)\n            return {\n                closeMe: closeMe,\n                messagerType: options.messagerType,\n                messagerIdIndex: options.messagerIdIndex,\n                props: vn.props\n            }\n        }\n\n        const dialog = createDialog()\n        this.dialogs.push(dialog)\n        if (options.timeout) {\n            setTimeout(() => {\n                dialog.closeMe();\n            }, options.timeout)\n        }\n        window.EventHub.$emit('messagerOpen', dialog.props)\n    }\n\n    // openDialog(options, type = 'alert') {\n    //     options.messagerType = type;\n    //     if (options.template || this.template) {\n    //         options.component = {\n    //             template: options.template || this.template,\n    //             extends: MessagerContent\n    //         };\n    //     }\n    //     const MessageDialogConstructor = window.Vue.extend(MessagerDialog);\n    //     let dialog = new MessageDialogConstructor({\n    //         propsData: options\n    //     });\n    //     dialog.$mount();\n    //     document.body.appendChild(dialog.$el);\n    //     dialog.open();\n    //     dialog.$on('close', () => {\n    //         const index = this.dialogs.indexOf(dialog);\n    //         if (index >= 0) {\n    //             this.dialogs.splice(index, 1);\n    //         }\n    //         dialog.$nextTick(() => {\n    //             document.body.removeChild(dialog.$el);\n    //             dialog.$destroy();\n    //             if (options.result) {\n    //                 options.result(dialog.resultValue);\n    //             }\n    //             this.setPositions();\n    //         });\n    //     });\n    //     this.dialogs.push(dialog);\n    //     if (options.timeout) {\n    //         setTimeout(() => {\n    //             dialog.close();\n    //         }, options.timeout)\n    //     }\n    //     return dialog;\n    // }\n\n    closeAll() {\n        this.dialogs.forEach(d => d.closeMe());\n        this.dialogs = []\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport domHelper from '../base/DomHelper';\nimport ComboBase from '../base/ComboBase';\nimport { FieldBase } from '../base';\n\nexport default {\n    name: 'ComboTree',\n    extends: ComboBase,\n    props: {\n        data: Array,\n        value: [String, Number, Array],\n        valueField: {\n            type: String,\n            default: 'id'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        cascadeText: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            innerData: this.data,\n            mappingTexts: {},\n            displayingText: null,\n            inputingText: null,\n            updatingText: false,\n            selection: null,\n            timer: null,\n            trees: []\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n                this.textState = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n            }\n            return this.textState;\n        },\n        tree: {\n            cache: false,\n            get() {\n                for (let i = 0; i < this.trees.length; i++) {\n                    const t = this.trees[i];\n                    if (domHelper.isChild(t.$el, this.$refs.panelRef)) {\n                        return t;\n                    }\n                }\n                // if (this.$children){\n                //     for(let i=0; i<this.$children.length; i++){\n                //         let c = this.$children[i];\n                //         if (c.$options.name == 'Tree'){\n                //             return c;\n                //         }\n                //     }\n                // }\n                return null;\n            }\n        }\n    },\n    watch: {\n        data() {\n            this.innerData = this.data;\n        }\n    },\n    created() {\n        treeHelper.$vue = this;\n    },\n    mounted() {\n        // this.$on('valueChange', () => {\n        //     if (!this.updatingText){\n        //         this.updateText();\n        //     }\n        // });\n        // this.$on('blur', this.onBlur);\n        window.EventHub.$on('treeMounted', (tree) => {\n            this.trees.push(tree);\n        })\n    },\n    methods: {\n        afterValueChange() {\n            FieldBase.methods.afterValueChange.call(this)\n            if (!this.updatingText) {\n                this.updateText();\n            }\n        },\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            this.onBlur();\n        },\n        setTree() {\n            if (this.tree) {\n                this.tree.checkboxState = this.multiple;\n                this.tree.innerData = this.innerData;\n                this.tree.afterSelectionChange = (node) => {\n                    this.selection = node;\n                    if (!this.multiple) {\n                        this.setValue(node[this.valueField]);\n                        this.closePanel();\n                    }\n                };\n                this.tree.afterCheckChange = (nodes) => {\n                    if (this.multiple && !this.updatingText) {\n                        let vv = nodes.map(node => node[this.valueField]);\n                        this.setValue(vv);\n                    }\n                };\n                this.$nextTick(() => {\n                    this.$refs.panelRef.scrollTop = this.scrollTop;\n                });\n                treeHelper.cascadeCheck = this.tree.cascadeCheck;\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n        },\n        onBlur() {\n            if (this.inputingText == null) {\n                return;\n            }\n            let text = this.inputingText.trim();\n            if (!text) {\n                this.setValue(null);\n                return;\n            }\n            if (this.multiple) {\n                let vv = [];\n                let tt = text.split(this.separator);\n                for (let val of this.value) {\n                    let text = this.mappingTexts[val];\n                    if (tt.indexOf(text) != -1) {\n                        vv.push(val);\n                    }\n                }\n                if (this.value.length != vv.length) {\n                    this.setValue(vv);\n                }\n            } else {\n                if (this.inputingText != this.displayingText) {\n                    this.setValue(null);\n                }\n            }\n            this.inputingText = null;\n        },\n        doFilter(value) {\n            if (!this.tree) {\n                return;\n            }\n            if (value) {\n                if (this.multiple) {\n                    let tt = value.trim().split(this.separator);\n                    let val = tt[tt.length - 1];\n                    this.tree.doFilter(val);\n                } else {\n                    this.tree.doFilter(value);\n                }\n            } else {\n                this.tree.doFilter('');\n            }\n        },\n        openPanel() {\n            ComboBase.methods.openPanel.call(this);\n            this.$nextTick(() => {\n                this.setTree();\n                this.updateText();\n                if (this.editable) {\n                    this.doFilter('');\n                }\n            });\n        },\n        updateText() {\n            if (!this.tree) {\n                // return;\n            }\n            this.updatingText = true;\n            if (this.valueState == null) {\n                this.mappingTexts = {};\n                this.displayingText = null;\n                this.selection = null;\n                if (this.multiple) {\n                    treeHelper.uncheckAllNodes(this.innerData, () => { });\n                }\n            } else {\n                let mt = {};\n                let tt = [];\n                if (this.multiple) {\n                    treeHelper.uncheckAllNodes(this.innerData, () => { });\n                    for (let val of this.valueState) {\n                        let node = treeHelper.findNode(this.innerData, this.valueField, val);\n                        if (node) {\n                            treeHelper.checkNode(node, () => { });\n                        }\n                    }\n                    let vv = [];\n                    treeHelper.forNodes(this.innerData, (node) => {\n                        if (node.checkState == 'checked') {\n                            vv.push(node[this.valueField]);\n                            mt[node[this.valueField]] = node[this.textField];\n                            tt.push(node[this.textField]);\n                        }\n                    })\n                    this.valueState.filter(val => vv.indexOf(val) == -1).forEach(val => {\n                        vv.push(val);\n                        mt[val] = this.mappingTexts[val] || val;\n                        tt.push(mt[val]);\n                    });\n                    this.setValue(vv);\n                } else {\n                    let node = treeHelper.findNode(this.innerData, this.valueField, this.valueState);\n                    if (node) {\n                        mt[this.valueState] = node[this.textField];\n                        if (this.tree) {\n                            this.tree.selectionState = node;\n                        }\n                        if (this.cascadeText) {\n                            let texts = [];\n                            let currNode = node;\n                            while (currNode) {\n                                currNode.state = 'open';\n                                // this.$set(currNode, 'state', 'open');\n                                texts.push(currNode[this.textField]);\n                                currNode = currNode.parent;\n                            }\n                            mt[this.valueState] = texts.reverse().join('/');\n                        }\n                    } else {\n                        mt[this.valueState] = this.mappingTexts[this.valueState] || this.valueState;\n                    }\n                    tt.push(mt[this.valueState]);\n                }\n                this.mappingTexts = mt;\n                this.displayingText = tt.join(this.separator);\n            }\n            this.updatingText = false;\n        },\n        // renderPanel() {\n        //     if (this.panelClosed) {\n        //         return null;\n        //     }\n        //     const style = Object.assign({}, this.panelStyle, {\n        //         left: this.panelLeft + 'px',\n        //         top: this.panelTop + 'px'\n        //     })\n        //     return (\n        //         <div ref=\"panelRef\"\n        //             class=\"panel-body panel-body-noheader combo-panel combo-p f-row\"\n        //             style={style}>\n        //             {this.renderContent()}\n        //         </div>\n        //     )\n        // },\n        renderContent() {\n            return this.$slots['tree']()\n        }\n\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport ComboBase from '../base/ComboBase';\nimport { FieldBase } from '../base';\n\nexport default {\n    name: 'ComboGrid',\n    extends: ComboBase,\n    props: {\n        data: Array,\n        value: [String, Number, Array],\n        valueField: {\n            type: String,\n            default: 'id'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        limitToList: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            innerData: this.data,\n            mappingTexts: {},\n            displayingText: null,\n            inputingText: null,\n            datagridScrollTop: 0,\n            timer: null,\n            grids: []\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n                this.textState = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n            }\n            return this.textState;\n        },\n        datagrid: {\n            cache: false,\n            get() {\n                for (let i = 0; i < this.grids.length; i++) {\n                    const g = this.grids[i];\n                    if (domHelper.isChild(g.$el, this.$refs.panelRef)) {\n                        return g;\n                    }\n                }\n                // if (this.$children){\n                //     for(let i=0; i<this.$children.length; i++){\n                //         let c = this.$children[i];\n                //         if (c.$options.name == 'DataGrid'){\n                //             return c;\n                //         }\n                //     }\n                // }\n                return null;\n            }\n        }\n    },\n    watch: {\n        data() {\n            this.innerData = this.data;\n            if (this.datagrid) {\n                this.datagrid.setData(this.innerData);\n            }\n        }\n    },\n    mounted() {\n        domHelper.bind(this.$el, 'keydown', this.onKeyDown);\n        // this.$on('valueChange', () => {\n        //     this.updateText();\n        // });\n        // this.$on('blur', this.onBlur);\n        window.EventHub.$on('gridMounted', (grid) => {\n            this.grids.push(grid);\n        })\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$el, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        afterValueChange() {\n            FieldBase.methods.afterValueChange.call(this)\n            this.updateText();\n        },\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            this.onBlur();\n        },\n        setGrid() {\n            if (this.datagrid) {\n                this.datagrid.selectionModeState = this.multiple ? 'multiple' : 'single';\n                this.datagrid.setData(this.innerData);\n                this.datagrid.afterSelectionChange = (selection) => {\n                    if (selection) {\n                        if (this.multiple) {\n                            let vv = selection.map(row => row[this.valueField]);\n                            this.setValue(vv);\n                        } else {\n                            this.setValue(selection[this.valueField]);\n                            this.closePanel();\n                        }\n                    } else {\n                        this.setValue(null);\n                    }\n                }\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n        },\n        onBlur() {\n            if (!this.panelClosed) {\n                this.fixValue();\n            }\n        },\n        fixValue() {\n            if (this.inputingText == null) {\n                return;\n            }\n            let text = this.inputingText.trim();\n            if (!text) {\n                this.setValue(null);\n                return;\n            }\n            if (this.multiple) {\n                let vv = [];\n                let tt = text.split(this.separator);\n                for (let val of this.value) {\n                    let text = this.mappingTexts[val];\n                    if (tt.indexOf(text) != -1) {\n                        vv.push(val);\n                    }\n                }\n                if (this.value.length != vv.length) {\n                    this.setValue(vv);\n                }\n            } else {\n                // if (this.inputingText != this.displayingText){\n                //     this.setValue(null);\n                // }\n                if (!this.limitToList) {\n                    this.setValue(this.inputingText);\n                }\n            }\n            this.inputingText = null;\n        },\n        onKeyDown(event) {\n            if (this.panelClosed && event.which == 40) {\n                this.openPanel();\n                event.preventDefault();\n                return;\n            }\n            if (!this.datagrid) {\n                return;\n            }\n            switch (event.which) {\n                case 40:\t// down\n                    this.datagrid.navRow(1);\n                    event.preventDefault();\n                    break;\n                case 38:\t// up\n                    this.datagrid.navRow(-1);\n                    event.preventDefault();\n                    break;\n                case 13:\t// enter\n                    if (this.datagrid && this.datagrid.highlightRow) {\n                        this.datagrid.doEnter();\n                        if (!this.multiple) {\n                            this.closePanel();\n                        }\n                        this.textState = this.displayingText;\n                    }\n                    event.preventDefault();\n                    break;\n                case 9:\t\t// tab\n                    this.fixValue();\n                    this.closePanel();\n                    break;\n                case 27:\t// escape\n                    this.closePanel();\n                    this.textState = this.displayingText;\n                    event.preventDefault();\n                    break;\n            }\n        },\n        doFilter(value) {\n            this.$emit('filterChange', {\n                filterValue: value\n            });\n        },\n        openPanel() {\n            ComboBase.methods.openPanel.call(this);\n            this.$nextTick(() => {\n                this.setGrid();\n                this.updateText();\n                this.$nextTick(() => {\n                    this.datagrid.$refs.view2.$refs.body.$refs.bodyRef.scrollTop = this.datagridScrollTop;\n                });\n                if (this.editable) {\n                    this.doFilter('');\n                }\n            });\n        },\n        closePanel() {\n            if (!this.panelClosed) {\n                this.datagridScrollTop = this.datagrid.$refs.view2.$refs.body.scrollTop();\n                ComboBase.methods.closePanel.call(this);\n            }\n        },\n        findRow(value) {\n            for (let row of this.data) {\n                if (row[this.valueField] == value) {\n                    return row;\n                }\n            }\n            return null;\n        },\n        updateText() {\n            if (!this.datagrid) {\n                // return;\n            }\n            if (this.valueState == null) {\n                this.mappingTexts = {};\n                this.displayingText = null;\n                if (this.datagrid) {\n                    this.datagrid.setSelectionValue(null);\n                }\n            } else {\n                let mt = {};\n                let tt = [];\n                let ss = [];\n                if (this.multiple) {\n                    for (let val of this.valueState) {\n                        let row = this.findRow(val);\n                        if (row) {\n                            mt[val] = row[this.textField];\n                            ss.push(row);\n                        } else {\n                            mt[val] = this.mappingTexts[val] || val;\n                        }\n                        tt.push(mt[val]);\n                    }\n                    if (this.datagrid) {\n                        this.datagrid.setSelectionValue(ss);\n                    }\n                } else {\n                    let row = this.findRow(this.valueState);\n                    if (row) {\n                        mt[this.valueState] = row[this.textField];\n                        ss.push(row);\n                    } else {\n                        mt[this.valueState] = this.mappingTexts[this.valueState] || this.valueState;\n                    }\n                    tt.push(mt[this.valueState]);\n                    if (this.datagrid) {\n                        this.datagrid.setSelectionValue(ss.length ? ss[0] : null);\n                    }\n                }\n                this.mappingTexts = mt;\n                this.displayingText = tt.join(this.separator);\n            }\n        },\n        // renderPanel() {\n        //     if (this.panelClosed) {\n        //         return null;\n        //     }\n        //     const style = Object.assign({}, this.panelStyle, {\n        //         left: this.panelLeft + 'px',\n        //         top: this.panelTop + 'px'\n        //     })\n        //     return (\n        //         <div ref=\"panelRef\"\n        //             class=\"panel-body panel-body-noheader combo-panel combo-p f-row\"\n        //             style={style}>\n        //             {this.renderContent()}\n        //         </div>\n        //     )\n        // },\n        renderContent() {\n            return this.$slots['grid']()\n        }\n    }\n}","﻿import DateBox from '../datebox/DateBox';\nimport Calendar from '../calendar/Calendar';\nimport TimeSpinner from '../timespinner/TimeSpinner';\nimport dateHelper from '../base/DateHelper';\n\nexport default {\n    name: 'DateTimeBox',\n    extends: DateBox,\n    components: {\n        Calendar,\n        TimeSpinner\n    },\n    props:{\n        format: {\n            type: String,\n            default: 'MM/dd/yyyy HH:mm'\n        },\n        timeFormat:{\n            type: String,\n            default: 'HH:mm'\n        }\n    },\n    data(){\n        return {\n            timeValue: dateHelper.formatDate(new Date(), this.timeFormat)\n        }\n    },\n    methods:{\n        onSelectionChange(event){\n            this.$emit('selectionChange', event);\n        },\n        doFilter(value) {\n            DateBox.methods.doFilter.call(this, value);\n            let date = (this.parser||this.defaultParser)(value);\n            if (!date){\n                date = this.valueState;\n            }\n            this.timeValue = dateHelper.formatDate(date, this.timeFormat);\n        },\n        selectOk(){\n            let date = this.$refs.calendar.selectionState;\n            if (!date){\n                date = new Date();\n            }\n            let time = dateHelper.parseDate(this.timeValue, this.timeFormat);\n            date.setHours(time.getHours());\n            date.setMinutes(time.getMinutes());\n            date.setSeconds(time.getSeconds());\n            this.setValue(date);\n            this.closePanel();\n        }\n    }\n}","﻿export class EventHub  {\r\n    constructor(){\r\n        this.events = new Map();\r\n    }\r\n\r\n    $on(event, handler) {\r\n        const handlers = this.events.get(event);\r\n        const added = handlers && handlers.push(handler);\r\n        if (!added) {\r\n            this.events.set(event, [handler]);\r\n        }\r\n    }\r\n    $off(event, handler) {\r\n        const handlers = this.events.get(event);\r\n        if (handlers) {\r\n            handlers.splice(handlers.indexOf(handler) >>> 0, 1);\r\n        }\r\n    }\r\n    $emit(event, params) {\r\n        (this.events.get(event) || []).slice().map((handler) => { handler(params); });\r\n        (this.events.get('*') || []).slice().map((handler) => { handler(event, params); });\r\n    }\r\n}","﻿import ValidateRules from './components/form/rules';\nimport Locale from './components/locale';\nimport { Panel } from './components/panel/index'\nimport { Accordion, AccordionPanel } from './components/accordion'\nimport { LinkButton, ButtonGroup } from './components/linkbutton';\nimport { FileButton } from './components/filebutton';\nimport { Pagination } from './components/pagination';\nimport { DataList } from './components/datalist';\nimport { VirtualScroll, Addon, Label } from './components/base';\nimport { GridBase, GridColumn, GridColumnGroup, GridHeaderRow } from './components/gridbase';\nimport { DataGrid } from './components/datagrid';\nimport { TextBox } from './components/textbox';\nimport { NumberBox } from './components/numberbox';\nimport { ComboBox } from './components/combobox';\nimport { SwitchButton } from './components/switchbutton';\nimport { CheckBox } from './components/checkbox';\nimport { RadioButton } from './components/radiobutton';\nimport { Tree } from './components/tree';\nimport { Tabs, TabPanel } from './components/tabs';\nimport { TimeSpinner } from './components/timespinner';\nimport { TimePicker } from './components/timepicker';\nimport { DateTimeSpinner } from './components/datetimespinner';\nimport { Layout, LayoutPanel } from './components/layout';\nimport { Menu, MenuItem, SubMenu, MenuSep } from './components/menu';\nimport { MenuButton } from './components/menubutton';\nimport { SplitButton } from './components/splitbutton';\nimport { Tooltip } from './components/tooltip';\nimport { PasswordBox } from './components/passwordbox';\nimport { Calendar } from './components/calendar';\nimport { DateBox } from './components/datebox';\nimport { Draggable, DraggableProxy } from './components/draggable';\nimport { Droppable } from './components/droppable';\nimport { Resizable } from './components/resizable';\nimport { Dialog } from './components/dialog';\nimport { Drawer } from './components/drawer';\nimport { ProgressBar } from './components/progressbar';\nimport { TreeGrid } from './components/treegrid';\nimport { Slider } from './components/slider';\nimport { TagBox } from './components/tagbox';\nimport { SearchBox } from './components/searchbox';\nimport { Form, FormField } from './components/form';\nimport { SideMenu } from './components/sidemenu';\nimport { Messager, MessagerDialog } from './components/messager';\nimport { ComboTree } from './components/combotree';\nimport { ComboGrid } from './components/combogrid';\nimport { DateTimeBox } from './components/datetimebox';\nimport { EventHub } from './components/base/EventHub';\n\nconst components = [\n    VirtualScroll,\n    Panel,\n    Dialog,\n    Drawer,\n    Accordion,\n    AccordionPanel,\n    Tabs,\n    TabPanel,\n    Layout,\n    LayoutPanel,\n    LinkButton,\n    ButtonGroup,\n    FileButton,\n    MenuButton,\n    SplitButton,\n    Pagination,\n    DataList,\n    GridBase,\n    GridColumn,\n    GridColumnGroup,\n    GridHeaderRow,\n    DataGrid,\n    TreeGrid,\n    TextBox,\n    PasswordBox,\n    Addon,\n    Label,\n    NumberBox,\n    TimeSpinner,\n    TimePicker,\n    DateTimeSpinner,\n    ComboBox,\n    ComboTree,\n    ComboGrid,\n    SwitchButton,\n    CheckBox,\n    RadioButton,\n    Tree,\n    Menu,\n    MenuItem,\n    SubMenu,\n    MenuSep,\n    Calendar,\n    DateBox,\n    DateTimeBox,\n    DraggableProxy,\n    ProgressBar,\n    Slider,\n    TagBox,\n    SearchBox,\n    Form,\n    FormField,\n    SideMenu,\n    MessagerDialog\n];\n\nconst directives = [\n    Tooltip,\n    Draggable,\n    Droppable,\n    Resizable\n];\n\nconst install = function (Vue, opts = {}) {\n    window.Vue = Vue;\n    Locale.use(opts.locale);\n    Object.assign(window.ValidateRules, opts.rules || {});\n    components.forEach(component => {\n        Vue.component(component.name, component);\n    });\n    directives.forEach(directive => {\n        Vue.directive(directive.name, directive);\n    });\n    window.$messager = new Messager();\n    Vue.config.globalProperties.$messager = window.$messager;\n    // Vue.prototype.$messager = new Messager();\n    window.EventHub = new EventHub();\n    // window.EventHub = new Vue();\n}\n\nwindow.Locale = Locale;\nwindow.ValidateRules = ValidateRules;\nif (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n}\n\nconst EasyUI = {\n    install\n};\n\nexport * from './components/base';\nexport * from './components/panel/index';\nexport * from './components/accordion';\nexport * from './components/linkbutton';\nexport * from './components/filebutton';\nexport * from './components/datalist';\nexport * from './components/gridbase';\nexport * from './components/pagination';\nexport * from './components/textbox';\nexport * from './components/numberbox';\nexport * from './components/tree';\nexport * from './components/tooltip';\nexport * from './components/calendar';\nexport * from './components/checkbox';\nexport * from './components/combobox';\nexport * from './components/combotree';\nexport * from './components/combogrid';\nexport * from './components/switchbutton';\nexport * from './components/radiobutton';\nexport * from './components/tabs';\nexport * from './components/timespinner';\nexport * from './components/timepicker';\nexport * from './components/datetimespinner';\nexport * from './components/layout';\nexport * from './components/menu';\nexport * from './components/menubutton';\nexport * from './components/splitbutton';\nexport * from './components/passwordbox';\nexport * from './components/datebox';\nexport * from './components/datetimebox';\nexport * from './components/draggable';\nexport * from './components/droppable';\nexport * from './components/resizable';\nexport * from './components/dialog';\nexport * from './components/drawer';\nexport * from './components/progressbar';\nexport * from './components/datagrid';\nexport * from './components/treegrid';\nexport * from './components/slider';\nexport * from './components/tagbox';\nexport * from './components/searchbox';\nexport * from './components/form';\nexport * from './components/sidemenu';\nexport * from './components/messager';\n\nexport default EasyUI;\n"],"names":["value","param","len","path","defValue","pp","i","key","l","event","touch","element","margin","el","width","style","height","selector","matchesSelector","parent","p","rect","left","top","offsetParent","offset","parentOffset","de","body","v","endchar","className","container","item","containerOffset","itemOffset","containerHeight","itemHeight","offsetTop","callback","heightStyle","onEnd","handler","fn","e","guid","binding","name","directives","SlideUpDown","props","title","String","iconCls","border","type","Boolean","default","animate","closed","collapsed","collapsible","closable","showHeader","showFooter","expandIconCls","collapseIconCls","closeIconCls","panelCls","panelStyle","Object","headerCls","headerStyle","bodyCls","bodyStyle","footerCls","footerStyle","data","collapsedState","closedState","animateState","collapseToShrinkBody","computed","hasHeader","$slots","hasFooter","panelClasses","headerClasses","bodyClasses","footerClasses","collapsibleClasses","closableClasses","watch","methods","clickCollapsibleTool","clickCloseTool","panelHeader","headerTitle","cls","push","_createVNode","headerIcon","panelTools","panelBody","_withDirectives","_resolveDirective","disabled","panelFooter","render","multiple","selectedIndex","Number","Array","panels","accordionClasses","initPanels","indexes","filter","index","indexOf","forEach","unselect","select","length","isLast","last","initSelectedPanel","selectedState","getPanels","$nextTick","addPanel","panel","slice","removePanel","splice","getPanel","getSelectedPanels","getSelectedPanel","getPanelIndex","getSelectedIndex","extends","Panel","selected","full","mounted","$parent","$el","addEventListener","clickHandler","beforeUnmount","removeEventListener","$emit","window","EventHub","domHelper","closest","target","stopPropagation","defineComponent","toggle","outline","plain","text","iconAlign","size","href","btnCls","btnStyle","focused","isEmpty","isDisabled","btnIconCls","innerCls","$attrs","class","btnLeftCls","$options","addButton","removeButton","focus","$refs","btnRef","blur","onClick","preventDefault","afterClick","renderInner","content","_Fragment","renderOthers","assign","selectionMode","buttons","initButtons","button","bb","btn","b","FileButtonFileId","LinkButton","accept","capture","url","method","autoUpload","withCredentials","fileId","files","onFileSelect","upload","xhr","XMLHttpRequest","formData","FormData","file","append","lengthComputable","total","position","loaded","percent","Math","ceil","onreadystatechange","readyState","status","open","send","clear","fileRef","nativeElement","loading","pageNumberState","pageCount","selectPage","refreshPage","pageList","pageSize","pageSizeState","onChange","parseInt","map","page","components","pages","begin","floor","links","end","pageNumber","onBlur","onKeyDown","keyCode","beforePageText","$event","_vModelText","afterPageInfo","PaginationButton","PaginationList","PaginationLink","PaginationManual","showPageList","showPageInfo","showPageRefresh","Locale","t","afterPageText","displayMsg","layout","lastState","pagination","pageInfo","info","replace","min","created","_adjustPage","_isButton","state","refresh","source","isMatch","row","rules","rule","matched","column","cell","step","field","start","lazy","rowHeight","maxDivHeight","maxVisibleHeight","scrollPosition","innerData","items","waitingPage","fetchingPage","startIndex","deltaTopHeight","topHeights","bottomHeights","isUpdating","isNewFetching","totalState","scrollPositionState","setData","setTimeout","scrolling","scrollState","scrollTop","undefined","bodyRef","relativeScrollTop","scrollbarWidth","outerWidth","contentRef","populate","onScroll","scrollLeft","relativeTop","loadPage","fetchPage","bodyHeight","outerHeight","bodyOffset","bottom","topHeight","bottomHeight","splitHeights","spos","lastCount","count","leftHeight","heights","concat","gotoPage","h","_isSlot","s","prototype","toString","call","_isVNode","ListBase","VirtualScroll","itemStyle","itemCls","hoverCls","selectedCls","innerClasses","virtualScroll","innerStyle","overflow","virtualItemStyle","vrows","innerRef","getItemClass","cc","highlightRow","isSelected","join","getRowIndex","vscrollRef","navRow","rows","querySelector","scrollTo","highlightFirstRow","scrollToSelectedRow","renderPagination","pagePosition","ref","Pagination","onPageChange","renderLoading","loadMsg","renderEmpty","renderList","rowIndex","onMouseenter","onMouseleave","onRowClick","renderVirtualList","_slot","onVirtualPageChange","for","align","labelClasses","labelStyle","textAlign","att","document","createAttribute","setAttributeNode","template","invalid","validateOnCreate","validateOnBlur","validateOnChange","invalidState","form","fieldName","fieldAdd","fieldRemove","renderField","afterFocus","afterBlur","fieldBlur","afterValueChange","fieldChange","setValid","valid","FieldBase","modelValue","readonly","editable","placeholder","multiline","tabindex","inputCls","inputStyle","inputId","textFormatter","Function","valueState","textState","baseClasses","inputClasses","addonClasses","addonIconClasses","setValue","defaultTextFormatter","previousValue","currentValue","onInput","inputRef","getSelectionStart","getSelectionRange","selectionStart","selectionEnd","setSelectionRange","createTextRange","range","collapse","moveEnd","moveStart","renderInput","id","onFocus","_mergeProps","renderAddon","InputBase","hasDownArrow","arrowIconCls","arrowAlign","panelAlign","separator","delay","panelClosed","panelLeft","panelTop","arrowClasses","bind","onDocumentClick","onDocumentMouseWheel","panelRef","appendChild","unbind","isChild","togglePanel","closePanel","openPanel","alignPanel","view","getViewport","pos","hwidth","pwidth","hheight","pheight","getScrollLeft","getScrollTop","minWidth","renderArrow","renderPanel","renderContent","format","selections","formatTokens","token","dateTokens","date","parser","year","formatToken","dateToken","f","formatN","formatter","match","node","checkState","nodes","changed","pnode","cnode","checkedCount","uncheckedCount","fromNodes","n","rowspan","colspan","hidden","sortable","editRules","editMessages","order","frozen","halign","sorter","cellCss","expander","filterable","filterOperators","grid","widthState","frozenState","currOrder","filterOperator","filterValue","isFiltering","doFilter","initColumns","toStyleValue","addColumn","removeColumn","removeFilterRule","addFilterRule","op","filterDelay","columns","timer","clearTimeout","initHeaderHeight","addRow","removeRow","GridColumn","ComboBase","DataList","valueField","textField","groupField","limitToList","mappingTexts","datalistScrollTop","inputingText","displayingText","lastFilterValue","selection","updateText","ftext","setText","initTextMapping","defaultFilter","q","toLowerCase","trim","which","datalist","doEnter","fixValue","clearSelections","vv","used","tt","split","val","onSelectionChange","selectionValue","updateSelection","mt","findItem","finder","oldSelection","listslots","scope","empty","ComboBox","display","initData","getFilterRule","GridFilterButton","input","isOnLeft","filterBtnPosition","isOnRight","leftButton","rightButton","GridFilterCell","methods1","col","opts","dir","handles","resizeData","GridHeaderCell","GridFilterRow","Resizable","columnGroup","paddingWidth","heightState","scrollLeftState","hoverColumn","dragScope","filterOnTop","filterPosition","filterOnBottom","headerRef","onCellClick","originalEvent","getResizableOpts","columnResizing","resizing","onColumnResizing","resizeStop","onColumnResizeStop","getDraggableOpts","columnMoving","revert","deltaX","deltaY","edge","proxy","dragStart","onColumnDragStart","getDroppableOpts","dragOver","onColumnDragOver","dragLeave","onColumnDragLeave","drop","onColumnDrop","resizeColumn","fromIndex","allColumns","viewOffset","viewRef","toIndex","diff","point","splitStyle","currDroppable","moveColumn","renderGroupCells","renderRowCells","_resolveComponent","scrollTopState","GridFooterCell","footerRef","GridHeader","GridBody","GridFooter","viewIndex","footerRows","headerPaddingWidth","viewCls","getHeaderPaddingWidth","headerHeight","header","onBodyScroll","footer","onResize","GridHeaderRow","GridView","striped","rowCss","frozenWidth","frozenAlign","sorts","multiSort","editMode","tipOptions","clickToEdit","dblclickToEdit","footerData","filterRules","cellSpan","leftGroup","rightGroup","centerGroup","leftColumns","rightColumns","centerColumns","columnRefs","groupRefs","sortsState","editingItem","leftFrozenWidth","rightFrozenWidth","initFilterRules","initColumnSort","$on","tab","hasDestroyed","changeColumns","addColumnGroup","group","removeColumnGroup","columnTimer","newState","g","getColumnLayout","c","frozenColumns","view1","view2","view3","h1","h2","h3","max","r","findColumn","aa","getColumnCount","colIndex","getColumnIndex","a","addSort","nextOrder","sort","fromField","toField","leftCount","centerCount","findIndex","fromCol","from","to","isEditing","idField","beginEdit","rowEl","endEdit","selectRow","selectCell","originalValue","cancelEdit","error","onValidate","errors","errCount","isEditable","TextBox","validate","_cell","gridBody","GridBodyCell","DataGridRowDetail","DataGridRowGroup","showExpandIcon","groupTitleWidth","groupTitleRef","titleLeft","expanderWidth","onRowDblClick","onRowContextMenu","cellEl","currentTarget","doEdit","onCellDblClick","onCellContextMenu","onCellKeyDown","onGroupExpanderClick","toggleGroup","onDetailExpanderClick","toggleRow","_rowIndex","getAbsoluteIndex","getCss","css","cssValue","getRowClass","getRowStyle","getCellClass","getCellStyle","getCellSpan","hasCellSpan","span","renderGroupRow","isGroupRow","renderDefaultRow","isHighlighted","isRowExpanded","highlightCell","renderDetailRow","DataGridTable","marginTop","currRows","isVirtualScroll","vscroll","onVirtualScroll","onVirtualPageUpdate","updateFrozenView","DataGridBody","onHeaderCellClick","GridBase","DataGridView","GridEmpty","aggregate","groupData","expandedRows","frozenRows","setGroupData","isGrouped","filteredData","makeGroup","makeGroupedRows","setPageData","dataRows","getIndex","currIndex","getGroup","groupedRows","lastRows","unshift","tr","sortData","sortFunc","r1","r2","_groupRow","groups","collapseGroup","expandGroup","getExpandedIndex","collapseRow","expandRow","pageLayout","pageLinks","datagrid","emptyMsg","reversed","spinners","spinAlign","onClickUp","doSpinUp","doSpinDown","onClickDown","renderHorizontal","upcls","downcls","renderVertical","renderDefault","SpinnerBase","increment","precision","decimalSeparator","groupSeparator","prefix","suffix","onKeyPress","metaKey","ctrlKey","fromCharCode","parseFloat","toFixed","s1","s2","dpos","substring","test","RegExp","isNaN","onText","offText","handleText","buttonClasses","model","prop","checked","values","previousChecked","initChecked","checkClasses","setChecked","isChecked","onClickButton","updateValues","initValue","radioClasses","tree","messages","labelPosition","labelAlign","labelWidth","floatingLabel","errorType","tooltipPosition","fields","validateField","fieldFocus","vtotal","vcount","getErrors","validity","setMessage","message","doValidate","vtype","vparam","ValidateRules","validator","result","Promise","then","parts","exec","paramStr","eval","keys","hasError","getError","getValue","isFocused","ff","tooltipIdIndex","HTMLElement","component","propsData","store","tooltipCls","tooltipStyle","zIndex","trackMouse","trackMouseX","trackMouseY","valign","showDelay","hideDelay","tooltipShow","tooltipHide","contentState","targetWidth","targetHeight","tipWidth","tipHeight","showTimer","hideTimer","setClosed","tooltipRef","tooltipClasses","tooltipStyles","show","hide","onMouseEnter","onMouseLeave","getPosition","reposition","arrowLeft","arrowOuterRef","arrowInnerRef","bc","borderColor","backColor","backgroundColor","clearTimeouts","getOptions","showEvent","hideEvent","bindEvents","eventName","_activeHandler","_deactiveHandler","TooltipIdIndex","_tip","_opts","Tip","createVNode","TooltipContent","updated","Form","Tooltip","autoSizeInput","getInput","getComputedStyle","tmp","createElement","fontFamily","fontSize","fontWeight","whiteSpace","innerHTML","removeChild","editor","handle","x1","y1","x2","y2","dragData","dropObj","p2","TreeNodeTitle","TreeNodeEditor","TreeNodeIcon","Draggable","Droppable","depth","nodeCls","innerNode","dndCls","indentWidth","isLeaf","nodeClasses","highlightNode","hitClasses","isExpanded","isCollapsed","iconClasses","checkboxClasses","selectionState","children","dnd","onDragStart","dragEnd","onDragEnd","dropDisabled","onDragOver","onDragLeave","onDrop","obj","dragCls","treeHelper","forNodes","pageY","moveNode","onClickNode","selectNode","onDblClickNode","onCheckNode","uncheckNode","checkNode","onNodeContextMenu","checkboxState","TreeNode","selectLeafOnly","checkbox","cascadeCheck","dndStyle","filterIncludingChild","qq","$vue","afterSelectionChange","afterCheckChange","getCheckedNodes","uncheckAllNodes","adjustCheck","showNode","hideNode","fchildren","pchildren","_createTextVNode","icon","isHorizontal","tabWidth","tabHeight","TabPanelHeader","headerWidth","tabPosition","narrow","justified","scrollable","scrollIncrement","selectedHis","scrollDistance","maxScrollDistance","containerClasses","tabsClasses","isScrollable","tabsStyle","isScrollerVisible","usedPanels","isUsed","removeHis","setMaxScrollDistance","tabsRef","scrollWidth","wrapWidth","tabsWrapRef","offsetWidth","onClickTab","onCloseTab","close","isFirst","setScrollers","pop","addHis","li","right","distance","scrollBy","backHis","resize","tabs","highlight","highlightState","highlighting","highlightRange","onClickMe","defaultFormatter","dateHelper","formatDate","defaultParser","parseD","parseDate","doSpin","down","s3","Date","hour24","hourDistance","radius","getData","elRef","getHour24","itemValue","itemClasses","is24","angular","PI","x","sin","y","cos","transform","clockStyle","marginLeft","handStyle","onItemClick","ampm","TimeClock","selectingType","selectingAmpm","hour","minute","hm","getHourStr","getMinuteStr","onAmpmClick","onClockSelect","TimePanel","closeText","okText","selectingValue","onOk","onTimeChange","TimeSpinner","region","visible","panelStyles","paddingTop","paddingBottom","collapsedSize","onPanelClick","expand","CollapsedPanel","layoutCls","layoutStyle","paddings","paddingLeft","paddingRight","layoutClasses","layoutStyles","padding","updatePaddings","getPaddingValue","float","cp","isExpanding","collapseTitle","resizeOpts","setResizeOpts","onSlideEnd","borderWidth","icons","north","south","east","west","MenuZIndex","menuCls","menuStyle","menuWidth","inline","noline","duration","subItems","isDisplaying","menuWidthState","containerStyle","menubutton","containerRef","setMenu","addItem","removeItem","afterItemClick","onMouseOver","onMouseOut","delayHide","subMenu","unhighlight","showAt","alignTo","showContextMenu","alignContextMenu","menuHeight","menu","menuClasses","isActived","menuStyles","alignMenu","onClickItem","menuAlign","showMenu","MenuButton","passwordChar","checkInterval","lastDelay","showEye","eyeAlign","revealed","revealedState","lastTimer","cursorPos","eyeClasses","eyeIconClasses","processing","convert","originalText","proc","all","pchar","weeks","months","showWeek","weekNumberHeader","firstDay","getFullYear","month","getMonth","yearState","monthState","highlightDay","highlightMonth","headerData","bodyData","saIndex","suIndex","getWeeks","getHeaderData","moveTo","onDayClick","day","isValid","selectDate","onMonthClick","monthName","isToday","now","m","d","getDate","isDiff","date1","date2","toArray","toDate","calcWeekNumber","week","getWeekNumber","nextYear","prevYear","nextMonth","prevMonth","checkDate","getTime","setDate","getDay","time","setMonth","round","data1","data2","dates","lastDay","memoDay","shift","firstWeek","firstDate","lastWeek","lastDate","highlightDate","navDate","renderDays","dayIndex","renderMenu","Calendar","currentText","setFullYear","calendar","selectToday","proxyCls","proxyStyle","reverting","proxyClasses","proxyStyles","proxyRef","onTransitionEnd","DialogZIndex","borderType","dialogCls","dialogStyle","modal","draggable","resizable","draggableOptions","resizableOptions","dragOpts","maskEl","setDragOpts","initDialog","closeMask","openMask","displaying","addClass","moveToTop","hcenter","vcenter","vwidth","vheight","center","Dialog","drawerCls","drawerStyle","maskClosable","isChanging","onClickMask","showValue","barCls","barStyle","barClasses","barStyles","TreeGridTitle","prow","isTreeField","treeField","onCheckRow","uncheckRow","checkRow","TreeGridRow","TreeGridChildren","TreeGridBody","TreeGridView","getCheckedRows","uncheckAllRows","_sort","mode","showTip","sliderClasses","value1","value2","displayingRule","reverse","dragOpts1","axis","cursor","drag","onDragHandle","dragOpts2","getPosStyle","value2pos","getRuleValueStyle","pos2value","sliderRef","setPos","second","abs","v1","v2","applyDrag","doDown","MyEvent","sinnerRef","pageX","tagCss","getTagClass","getTagStyle","removeTag","getWidth","renderLabels","category","buttonAlign","buttonIconCls","hasMenu","menuBtnText","menuBtnIcon","categoryState","mbClasses","mb","initMenu","doSearch","setCategory","FormFieldIdIndex","label","labelFor","fieldClasses","renderLabel","labelCls","renderError","errorStyle","inputDisabled","tip","sidemenu","Accordion","AccordionPanel","Tree","SideMenuIcon","onPanelSelect","accordion","onPanelUnselect","onNodeClick","SideMenuItems","floatMenuWidth","floatMenuPosition","tipClosed","selectItem","getTipOpts","messagerType","msg","inputValue","messagerIcon","dialog","closeDialog","resultValue","MessagerContent","messagerIdIndex","closeMe","minHeight","MessagerIdIndex","Messager","constructor","ok","cancel","dialogs","alert","options","openDialog","confirm","prompt","setPositions","documentElement","dlg","timeout","createDialog","vn","MessagerDialog","onClose","closeAll","cascadeText","updatingText","trees","cache","get","setTree","findNode","texts","currNode","datagridScrollTop","grids","setGrid","selectionModeState","findRow","setSelectionValue","ss","DateBox","timeFormat","timeValue","selectOk","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","handlers","params","Vue","directive"],"mappings":"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"}