{"version":3,"file":"v3-easyui.js","sources":["../src/components/form/rules.js","../src/components/locale/index.js","../src/components/base/DomHelper.js","../src/components/base/SlideUpDown.js","../src/components/panel/Panel.jsx","../src/components/accordion/Accordion.jsx","../src/components/accordion/AccordionPanel.jsx","../src/components/linkbutton/LinkButton.jsx","../src/components/linkbutton/ButtonGroup.jsx","../src/components/filebutton/FileButton.jsx","../src/components/pagination/PaginationButton.jsx","../src/components/pagination/PaginationList.jsx","../src/components/pagination/PaginationLink.jsx","../src/components/pagination/PaginationManual.jsx","../src/components/pagination/Pagination.jsx","../src/components/base/ListBase.js","../src/components/base/VirtualScroll.jsx","../src/components/datalist/DataList.jsx","../src/components/base/Addon.js","../src/components/base/Label.jsx","../src/components/base/FieldBase.jsx","../src/components/base/InputBase.jsx","../src/components/base/ComboBase.jsx","../src/components/base/DateHelper.js","../src/components/base/TreeHelper.js","../src/components/gridbase/GridColumn.jsx","../src/components/gridbase/GridHeaderRow.jsx","../src/components/gridbase/GridHeaderCell.jsx","../src/components/combobox/ComboBox.jsx","../src/components/gridbase/GridFilterButton.jsx","../src/components/gridbase/GridFilterCell.jsx","../src/components/gridbase/GridFilterRow.jsx","../src/components/resizable/ResizableClass.js","../src/components/resizable/Resizable.js","../src/components/gridbase/GridHeader.jsx","../src/components/gridbase/GridBody.jsx","../src/components/gridbase/GridFooterCell.jsx","../src/components/gridbase/GridFooter.jsx","../src/components/gridbase/GridView.jsx","../src/components/gridbase/GridBase.jsx","../src/components/gridbase/GridColumnGroup.jsx","../src/components/gridbase/GridEmpty.jsx","../src/components/textbox/TextBox.jsx","../src/components/gridbase/GridBodyCell.jsx","../src/components/datagrid/DataGridRowDetail.jsx","../src/components/datagrid/DataGridRowGroup.jsx","../src/components/datagrid/DataGridTable.jsx","../src/components/datagrid/DataGridBody.jsx","../src/components/datagrid/DataGridView.jsx","../src/components/datagrid/DataGrid.jsx","../src/components/base/SpinnerBase.jsx","../src/components/numberbox/NumberBox.jsx","../src/components/switchbutton/SwitchButton.jsx","../src/components/checkbox/CheckBox.jsx","../src/components/radiobutton/RadioButton.jsx","../src/components/tree/TreeNodeTitle.jsx","../src/components/form/Form.jsx","../src/components/tooltip/TooltipContent.jsx","../src/components/tooltip/Tooltip.jsx","../src/components/tree/TreeNodeEditor.jsx","../src/components/draggable/DraggableClass.js","../src/components/draggable/Draggable.js","../src/components/droppable/DroppableClass.js","../src/components/droppable/Droppable.js","../src/components/tree/TreeNodeIcon.jsx","../src/components/tree/TreeNode.jsx","../src/components/tree/Tree.jsx","../src/components/tabs/TabPanelHeader.jsx","../src/components/tabs/Tabs.jsx","../src/components/tabs/TabPanel.jsx","../src/components/timespinner/TimeSpinner.jsx","../src/components/timepicker/TimeClock.jsx","../src/components/timepicker/TimePanel.jsx","../src/components/timepicker/TimePicker.jsx","../src/components/datetimespinner/DateTimeSpinner.jsx","../src/components/layout/CollapsedPanel.jsx","../src/components/layout/Layout.jsx","../src/components/layout/LayoutPanel.jsx","../src/components/menu/Menu.jsx","../src/components/menu/SubMenu.jsx","../src/components/menu/MenuItem.jsx","../src/components/menu/MenuSep.jsx","../src/components/menubutton/MenuButton.jsx","../src/components/splitbutton/SplitButton.jsx","../src/components/passwordbox/PasswordBox.jsx","../src/components/calendar/Calendar.jsx","../src/components/datebox/DateBox.jsx","../src/components/draggable/DraggableProxy.jsx","../src/components/dialog/Dialog.jsx","../src/components/drawer/Drawer.jsx","../src/components/progressbar/ProgressBar.jsx","../src/components/treegrid/TreeGridTitle.jsx","../src/components/treegrid/TreeGridRow.jsx","../src/components/treegrid/TreeGridChildren.jsx","../src/components/treegrid/TreeGridBody.jsx","../src/components/treegrid/TreeGridView.jsx","../src/components/treegrid/TreeGrid.jsx","../src/components/slider/Slider.jsx","../src/components/tagbox/TagBox.jsx","../src/components/searchbox/SearchBox.jsx","../src/components/form/FormField.jsx","../src/components/sidemenu/SideMenuIcon.jsx","../src/components/sidemenu/SideMenuItems.jsx","../src/components/sidemenu/SideMenu.jsx","../src/components/messager/MessagerContent.jsx","../src/components/messager/MessagerDialog.jsx","../src/components/messager/Messager.jsx","../src/components/combotree/ComboTree.jsx","../src/components/combogrid/ComboGrid.jsx","../src/components/datetimebox/DateTimeBox.jsx","../src/components/base/EventHub.js","../src/index.js"],"sourcesContent":["﻿export default {\n    required: {\n        validator: (value) => {\n            if (value == null){\n                return false;\n            }\n            if (typeof value == 'boolean'){\n                return value;\n            }\n            return String(value).trim().length>0;\n        },\n        message: 'This field is required.'\n    },\n    length: {\n        validator: function(value, param){\n            var len = value ? String(value).trim().length : 0;\n            return len >= param[0] && len <= param[1];\n        },\n        message: 'Please enter a value between {0} and {1}.'\n    },\n    email: {\n        validator: (value) => {\n            return /^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$/.test(value);\n        },\n        message: 'Please enter a valid email address.'\n    },\n    url: {\n        validator: (value) => {\n            return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n        },\n        message: 'Please enter a valid URL.'\n    }\n\n}","﻿let lang = null;\n\nexport const t = (path, defValue=null) => {\n    if (lang){\n        let value = lang;\n        let pp = path.split('.');\n        for(let i=0; i<pp.length; i++){\n            let key = pp[i];\n            if (value[key]){\n                value = value[key];\n            } else {\n                return defValue;\n            }\n        }\n        return value||defValue;\n    }\n    return defValue;\n};\n\nexport const use = (l) => {\n    lang = l || lang;\n};\n\nexport default {\n    use,\n    t\n};\n","﻿let guid = 1;\nexport class MyEvent{\n\tconstructor(event){\n\t\tthis.event = event;\n\t\tthis.pageX = event.pageX;\n\t\tthis.pageY = event.pageY;\n\t\tlet touchEvents = ['touchstart','touchmove','touchend','touchcancel'];\n\t\tif (touchEvents.indexOf(event.type) >= 0){\n\t\t\tlet touch = event.touches[0] || event.changedTouches[0];\n\t\t\tthis.pageX = touch.pageX;\n\t\t\tthis.pageY = touch.pageY;\n\t\t}\n\t}\n\tpreventDefault(){\n\t\tthis.event.preventDefault();\n\t}\n\tstopPropagation(){\n\t\tthis.event.stopPropagation();\n\t}\n}\nexport class DomHelper{\n    getElement(element){\n        return (typeof element === 'string') ? document.querySelector(element) : element;\n    }\n    outerWidth(element, margin){\n\t\tlet el = this.getElement(element);\n\t\tif (!el){\n\t\t\treturn 0;\n\t\t}\n        let width = el.offsetWidth;\n        if (margin){\n            let style = getComputedStyle(el);\n            width += (parseInt(style.getPropertyValue('margin-left')) || 0) + (parseInt(style.getPropertyValue('margin-right')) || 0);\n        }\n        return width;\n    }\n    outerHeight(element, margin){\n\t\tlet el = this.getElement(element);\n\t\tif (!el){\n\t\t\treturn 0;\n\t\t}\n        let height = el.offsetHeight;\n        if (margin){\n            let style = getComputedStyle(el);\n            height += (parseInt(style.getPropertyValue('margin-top')) || 0) + (parseInt(style.getPropertyValue('margin-bottom')) || 0);\n        }\n        return height;\n\t}\n\tclosest(element, selector){\n\t\tlet el = this.getElement(element);\n\t\tvar matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n\t\twhile(el){\n\t\t\tif (matchesSelector.call(el, selector)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tel = el.parentElement;\n\t\t}\n\t\treturn el;\n\t}\n    isChild(element, parent){\n        let p = this.getElement(parent);\n\t\tlet el = this.getElement(element);\n\t\twhile (el && el != p){\n\t\t\tel = el.parentNode;\n\t\t}\n\t\treturn el == p;\n    }\n    offset(element){\n        let el = this.getElement(element);\n\t\tlet rect = el.getBoundingClientRect();\n\t\tlet left = rect.left;\n\t\tlet top = rect.top;\n\t\treturn {left: left+this.getScrollLeft(), top: top+this.getScrollTop()};\n    }\n\tposition(element){\n\t\tlet el = this.getElement(element);\n\t\tlet offsetParent = el.offsetParent;\n\t\tif (!offsetParent){\n\t\t\treturn {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0\n\t\t\t}\n\t\t}\n\t\twhile(offsetParent && (!/^body|html$/i.test(offsetParent.tagName))){\n\t\t\tlet style = getComputedStyle(offsetParent);\n\t\t\tif (style.getPropertyValue('position') == 'static'){\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tlet offset = this.offset(element);\n\t\tlet parentOffset = /^body|html$/i.test(offsetParent.tagName) ? { top: 0, left: 0 } : this.offset(offsetParent);\n\t\tlet style = getComputedStyle(el);\n\t\toffset.left -= parseInt(style.getPropertyValue('margin-left')) || 0;\n\t\toffset.top -= parseInt(style.getPropertyValue('margin-top')) || 0;\n\t\tstyle = getComputedStyle(offsetParent);\n\t\tparentOffset.left += parseInt(style.getPropertyValue('border-left-width')) || 0;\n\t\tparentOffset.top += parseInt(style.getPropertyValue('border-top-width')) || 0;\n\t\treturn {\n\t\t\tleft: offset.left - parentOffset.left,\n\t\t\ttop: offset.top - parentOffset.top\n\t\t};\n\t}\n\tgetScrollLeft(){\n\t\treturn Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\n\t}\n\tgetScrollTop(){\n\t\treturn Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n\t}\n\tgetViewport(){\n\t\tlet de = document.documentElement;\n\t\tlet body = document.getElementsByTagName('body')[0];\n\t\treturn {\n\t\t\twidth: window.innerWidth || de.clientWidth || body.clientWidth,\n\t\t\theight: window.innerHeight || de.clientHeight || body.clientHeight\n\t\t};\n\t}\n\tisAutoSize(value){\n\t\tlet v = String(value);\n\t\tif (v == 'auto' || v == ''){\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\ttoStyleValue(value){\n\t\tif (value == null){\n\t\t\treturn null;\n\t\t}\n\t\tlet v = String(value);\n\t\tvar endchar = v.substr(v.length-1, 1);\n\t\tif (endchar>='0' && endchar<='9'){\n\t\t\treturn v + 'px';\n\t\t} else {\n\t\t\treturn v;\n\t\t}\n\t}\n    addClass(element, className){\n        let el = this.getElement(element);\n        el.classList.add(className);\n    }\n    removeClass(element, className){\n        let el = this.getElement(element);\n        el.classList.remove(className);\n    }\n    hasClass(element, className){\n        let el = this.getElement(element);\n        return el.classList.contains(className);\n    }\n\tscrollTo(container, item){\n\t\tlet containerOffset = this.offset(container);\n\t\tlet itemOffset = this.offset(item);\n\t\tlet containerHeight = this.outerHeight(container);\n\t\tlet itemHeight = this.outerHeight(item);\n\t\tlet offsetTop = itemOffset.top - containerOffset.top;\n\t\tif (offsetTop < 0){\n\t\t\tcontainer.scrollTop = container.scrollTop + offsetTop - 1;\n\t\t} else if (offsetTop > containerHeight - itemHeight){\n\t\t\tcontainer.scrollTop = container.scrollTop - (containerHeight - itemHeight - offsetTop - 1);\n\t\t}\n\t}\n\tslideUp(element, callback){\n\t\tlet el = this.getElement(element);\n\t\tif (this.hasClass(el, 'f-hide')){\n\t\t\treturn;\n\t\t}\n\t\tlet heightStyle = el.style.height;\n\t\tlet height = this.outerHeight(el);\n\t\t// if (height<10){\n\t\t// \treturn;\n\t\t// }\n\t\tel.style.height = height+'px';\n\t\tlet onEnd = () => {\n\t\t\tthis.removeClass(el, 'f-animate');\n\t\t\tthis.removeClass(el, 'panel-noscroll');\n\t\t\tthis.addClass(el, 'f-hide');\n\t\t\tel.style.height = heightStyle;\n\t\t\tel.removeEventListener('transitionend', onEnd, false);\n\t\t\tif (callback){\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\tel.addEventListener('transitionend', onEnd, false);\n\t\tsetTimeout(() => {\n\t\t\tthis.addClass(el, 'f-animate');\n\t\t\tthis.addClass(el, 'panel-noscroll');\n\t\t\tel.style.height = '0px';\n\t\t}, 50);\n\t}\n\tslideDown(element, callback){\n\t\tlet el = this.getElement(element);\n\t\tif (!this.hasClass(el, 'f-hide')){\n\t\t\treturn;\n\t\t}\n\t\tthis.addClass(el, 'panel-noscroll');\n\t\tthis.removeClass(el, 'f-hide');\n\t\tlet heightStyle = el.style.height;\n\t\tlet height = this.outerHeight(el);\n\t\tel.style.height = '0px';\n\t\tlet onEnd = () => {\n\t\t\tthis.removeClass(el, 'f-animate');\n\t\t\tthis.removeClass(el, 'panel-noscroll');\n\t\t\tel.style.height = heightStyle;\n\t\t\tel.removeEventListener('transitionend', onEnd, false);\n\t\t\tif (callback){\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\tel.addEventListener('transitionend', onEnd, false);\n\t\tsetTimeout(() => {\n\t\t\tthis.addClass(el, 'f-animate');\n\t\t\tel.style.height = height+'px';\n\t\t},50);\n\t}\n\tnextGuid(){\n\t\treturn ++guid;\n\t}\n\tbind(element, event, handler){\n\t\thandler.guid = handler.guid || guid++;\n\t\tlet fn = (e) => {\n\t\t\tlet r = handler.call(this, e);\n\t\t\tif (r==false){\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t};\n\t\tlet el = this.getElement(element);\n\t\tel.myevents = el.myevents || {};\n\t\tif (!el.myevents[event]){\n\t\t\tel.myevents[event] = {};\n\t\t}\n\t\tel.myevents[event][String(handler.guid)] = fn;\n\t\tel.addEventListener(event, fn, false);\n\t}\n\tunbind(element, event, handler){\n\t\tlet el = this.getElement(element);\n\t\tif (event){\n\t\t\tif (handler){\n\t\t\t\tlet fn = el.myevents[event][String(handler.guid)];\n\t\t\t\tif (fn){\n\t\t\t\t\tel.removeEventListener(event, fn, false);\n\t\t\t\t}\n\t\t\t\tdelete el.myevents[event][String(handler.guid)];\n\t\t\t} else {\n\t\t\t\tfor(let guid in el.myevents[event]){\n\t\t\t\t\tlet fn = el.myevents[event][guid];\n\t\t\t\t\tel.removeEventListener(event, fn, false);\n\t\t\t\t}\n\t\t\t\tdelete el.myevents[event];\n\t\t\t}\n\t\t} else {\n\t\t\tfor(let event in el.myevents){\n\t\t\t\tfor(let guid in el.myevents[event]){\n\t\t\t\t\tlet fn = el.myevents[event][guid];\n\t\t\t\t\tel.removeEventListener(event, fn, false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete el.myevents;\n\t\t}\n\t}\n}\nexport default new DomHelper();","﻿import domHelper from './DomHelper'\n\nexport default {\n    mounted(el, binding){\n        if (binding.value.disabled){\n            return;\n        }\n        if (binding.value.collapsed){\n            el.collapsed = true;\n            domHelper.addClass(el,'f-hide');\n        }\n        el.sliding = false;\n    },\n    updated(el,binding){\n        if (binding.value.disabled){\n            return;\n        }\n        if (binding.value.collapsed == el.collapsed){\n            return;\n        }\n        if (binding.value.animate){\n            if (el.sliding){\n                return;\n            }\n            el.sliding = true;\n            if (binding.value.collapsed){\n                domHelper.slideUp(el, ()=>{\n                    el.sliding = false;\n                    el.collapsed = true;\n                });\n            } else {\n                domHelper.slideDown(el, ()=>{\n                    el.sliding = false;\n                    el.collapsed = false;\n                });\n            }\n            setTimeout(() => {\n                el.sliding = false;\n            },400);\n        } else {\n            el.collapsed = binding.value.collapsed;\n            if (el.collapsed){\n                domHelper.addClass(el,'f-hide');\n            } else {\n                domHelper.removeClass(el,'f-hide');\n            }\n        }\n    }\n}","﻿import SlideUpDown from '../base/SlideUpDown';\n\nexport default {\n    name: 'Panel',\n    directives: { SlideUpDown },\n    props: {\n        title: String,\n        iconCls: String,\n        border: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: false\n        },\n        closed: {\n            type: Boolean,\n            default: false\n        },\n        collapsed: {\n            type: Boolean,\n            default: false\n        },\n        collapsible: {\n            type: Boolean,\n            default: false\n        },\n        closable: {\n            type: Boolean,\n            default: false\n        },\n        showHeader: {\n            type: Boolean,\n            default: true\n        },\n        showFooter: {\n            type: Boolean,\n            default: true\n        },\n        expandIconCls: {\n            type: String,\n            default: 'panel-tool-expand'\n        },\n        collapseIconCls: {\n            type: String,\n            default: 'panel-tool-collapse'\n        },\n        closeIconCls: {\n            type: String,\n            default: 'panel-tool-close'\n        },\n        panelCls: String,\n        panelStyle: Object,\n        headerCls: String,\n        headerStyle: Object,\n        bodyCls: String,\n        bodyStyle: Object,\n        footerCls: String,\n        footerStyle: Object\n    },\n    data() {\n        return {\n            collapsedState: this.collapsed,\n            closedState: this.closed,\n            animateState: this.animate,\n            collapseToShrinkBody: true\n        }\n    },\n    computed: {\n        hasHeader() {\n            if (!this.showHeader) {\n                return false;\n            }\n            if (this.$slots['header'] || this.title) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        hasFooter() {\n            if (!this.showFooter) {\n                return false;\n            }\n            if (this.$slots['footer']) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        panelClasses() {\n            return ['panel f-column', this.panelCls];\n        },\n        headerClasses() {\n            return ['panel-header f-noshrink f-row f-vcenter', this.headerCls,\n                { 'panel-header-noborder': !this.border }\n            ];\n        },\n        bodyClasses() {\n            return ['panel-body f-full', this.bodyCls, {\n                'panel-body-noheader': !this.hasHeader,\n                'panel-body-nobottom': this.$slots['footer'],\n                'panel-body-noborder': !this.border\n            }];\n        },\n        footerClasses() {\n            return ['panel-footer f-noshrink', this.footerCls, {\n                'panel-footer-noborder': !this.border\n            }];\n        },\n        collapsibleClasses() {\n            return this.collapsedState ? this.expandIconCls : this.collapseIconCls;\n        },\n        closableClasses() {\n            return this.closeIconCls;\n        }\n    },\n    watch: {\n        closed(value) {\n            this.closedState = value;\n        },\n        collapsed(value) {\n            this.collapsedState = value;\n        },\n        animate(value) {\n            this.animateState = value;\n        }\n    },\n    methods: {\n        clickCollapsibleTool() {\n            this.collapsedState = !this.collapsedState;\n        },\n        clickCloseTool() {\n            this.closedState = true;\n        },\n        panelHeader() {\n            if (!this.hasHeader) {\n                return;\n            }\n            const headerTitle = () => {\n                if (this.$slots['header']) {\n                    return this.$slots['header']()\n                } else {\n                    const cls = ['panel-title'];\n                    if (this.iconCls && !this.$slots['icon']) {\n                        cls.push('panel-with-icon');\n                    }\n                    return (\n                        <div class={cls}>{this.title}</div>\n                    )\n                }\n            }\n            const headerIcon = () => {\n                if (this.iconCls && !this.$slots['icon']) {\n                    return <div class={this.iconCls + ' panel-icon'}></div>\n                } else {\n                    return null;\n                }\n            }\n            const panelTools = () => {\n                if (this.collapsible || this.closable) {\n                    return (\n                        <div class=\"panel-tool\">\n                            {this.collapsible && <a href=\"javascript:;\" class={this.collapsibleClasses} onClick={this.clickCollapsibleTool}></a>}\n                            {this.closable && <a href=\"javascript:;\" class={this.closableClasses} onClick={this.clickCloseTool}></a>}\n                        </div>\n                    )\n                }\n            }\n\n            return (\n                <div ref=\"headerRef\" class={this.headerClasses} style={this.headerStyle}>\n                    {headerTitle()}\n                    {headerIcon()}\n                    {panelTools()}\n                </div>\n            )\n        },\n        panelBody() {\n            return (\n                <div ref=\"bodyRef\" v-SlideUpDown={{ animate: this.animateState, collapsed: this.collapsedState, disabled: !this.collapseToShrinkBody }} class={this.bodyClasses} style={this.bodyStyle}>\n                    {this.$slots.default && this.$slots.default()}\n                </div>\n            )\n        },\n        panelFooter() {\n            if (!this.hasFooter) {\n                return null;\n            }\n            return (\n                <div ref=\"footerRef\" class={this.footerClasses} style={this.footerStyle}>\n                    {this.$slots['footer'] && this.$slots['footer']()}\n                </div>\n            )\n        }\n    },\n    render() {\n        if (!this.closedState) {\n            return (\n                <div class={this.panelClasses} style={this.panelStyle}>\n                    {this.panelHeader()}\n                    {this.panelBody()}\n                    {this.panelFooter()}\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿export default {\n    name: 'Accordion',\n    props: {\n        border: {\n            type: Boolean,\n            default: true\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        animate: {\n            type: Boolean,\n            default: false\n        },\n        selectedIndex: {\n            type: [Number, Array],\n            default: 0\n        }\n    },\n    data() {\n        return {\n            panels: []\n        }\n    },\n    computed: {\n        accordionClasses() {\n            return ['accordion f-column', {\n                'accordion-noborder': !this.border\n            }];\n        }\n    },\n    watch: {\n        panels() {\n            this.initPanels();\n        },\n        selectedIndex(value) {\n            let indexes = value instanceof Array ? value : [value];\n            if (this.multiple) {\n                this.panels.filter((p, index) => indexes.indexOf(index) == -1).forEach(p => p.unselect());\n                this.indexes.forEach(index => this.select(index));\n            } else {\n                this.select(indexes[0]);\n            }\n        }\n    },\n    methods: {\n        initPanels() {\n            if (this.panels.length) {\n                this.panels.forEach(p => {\n                    p.isLast = false;\n                    p.animateState = this.animate;\n                });\n                let last = this.panels[this.panels.length - 1];\n                last.isLast = true;\n                this.initSelectedPanel();\n            }\n        },\n        initSelectedPanel() {\n            let panels = this.panels.filter(p => p.selectedState);\n            if (!panels.length) {\n                if (this.multiple) {\n                    panels = this.getPanels(this.selectedIndex || []);\n                } else {\n                    panels = this.getPanels([this.selectedIndex]);\n                }\n            }\n            if (panels.length) {\n                panels.forEach(p => p.animateState = false);\n                if (this.multiple) {\n                    panels.forEach(p => p.collapsedState = false);\n                } else {\n                    panels[0].collapsedState = false;\n                    panels.filter((p, index) => index != 0).forEach(p => p.collapsedState = true);\n                }\n                this.$nextTick(() => {\n                    panels.forEach(p => p.animateState = this.animate);\n                });\n            }\n        },\n        addPanel(panel) {\n            const pp = this.panels.slice();\n            pp.push(panel);\n            this.panels = pp;\n        },\n        removePanel(panel) {\n            const pp = this.panels.slice();\n            let index = pp.indexOf(panel);\n            if (index >= 0) {\n                pp.splice(index, 1);\n                this.panels = pp;\n            }\n        },\n        getPanel(index) {\n            return this.panels[index];\n        },\n        getPanels(indexes) {\n            let panels = [];\n            for (let index of indexes) {\n                let panel = this.getPanel(index);\n                if (panel) {\n                    panels.push(panel);\n                }\n            }\n            return panels;\n        },\n        getSelectedPanels() {\n            return this.panels.filter(p => p.selectedState);\n        },\n        getSelectedPanel() {\n            let pp = this.getSelectedPanels();\n            return pp.length ? pp[0] : null;\n        },\n        getPanelIndex(panel) {\n            for (let i = 0; i < this.panels.length; i++) {\n                if (this.panels[i] == panel) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        getSelectedIndex() {\n            let panel = this.getSelectedPanel();\n            return panel ? this.getPanelIndex(panel) : -1;\n        },\n        select(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.select();\n            }\n        },\n        unselect(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.unselect();\n            }\n        }\n    },\n    render() {\n        return (\n            <div class={this.accordionClasses}>\n                {this.$slots.default()}\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Panel from '../panel/Panel'\n\nexport default {\n    name: 'AccordionPanel',\n    extends: Panel,\n    props: {\n        title: {\n            type: String,\n            default: ''\n        },\n        collapsible: {\n            type: Boolean,\n            default: true\n        },\n        expandIconCls: {\n            type: String,\n            default: 'accordion-expand'\n        },\n        collapseIconCls: {\n            type: String,\n            default: 'accordion-collapse'\n        },\n        collapsed: {\n            type: Boolean,\n            default: true\n        },\n        selected: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            isLast: false\n        }\n    },\n    computed: {\n        selectedState() {\n            return !this.collapsedState;\n        },\n        full() {\n            return this.selected;\n        },\n        panelClasses() {\n            return ['panel f-column', this.panelCls, {\n                'panel-last': this.isLast,\n                'f-full': this.selectedState,\n                'f-noshrink': !this.selectedState\n            }];\n        },\n        headerClasses() {\n            return ['accordion-header panel-header f-noshrink', this.headerCls,\n                { 'panel-header-noborder': !this.border },\n                { 'accordion-header-selected': this.selectedState }\n            ];\n        },\n        bodyClasses() {\n            return ['accordion-body panel-body f-full', this.bodyCls, {\n                'panel-body-noheader': !this.hasHeader,\n                'panel-body-nobottom': this.$slots['footer'],\n                'panel-body-noborder': !this.border\n            }];\n        }\n    },\n    mounted() {\n        this.$parent.addPanel(this);\n        this.$el.addEventListener('click', this.clickHandler, false);\n    },\n    beforeUnmount() {\n        this.$parent.removePanel(this);\n        this.$el.removeEventListener('click', this.clickHandler, false);\n    },\n    methods: {\n        select() {\n            if (this.selectedState) {\n                return;\n            }\n            if (!this.$parent.multiple) {\n                this.$parent.panels.filter(p => p != this).forEach(p => p.unselect());\n            }\n            this.collapsedState = false;\n            this.$parent.$emit('panelSelect', this);\n            this.$nextTick(() => {\n                if (window.EventHub) {\n                    window.EventHub.$emit('panelSelect', this);\n                }\n            })\n        },\n        unselect() {\n            if (!this.selectedState) {\n                return;\n            }\n            this.collapsedState = true;\n            this.$parent.$emit('panelUnselect', this);\n        },\n        clickHandler(event) {\n            let header = domHelper.closest(event.target, '.accordion-header');\n            if (header) {\n                event.stopPropagation();\n                if (this.collapsedState) {\n                    this.select();\n                } else if (this.$parent.multiple) {\n                    this.unselect();\n                }\n            }\n        }\n    }\n}","﻿import { defineComponent } from 'vue';\n\nexport default defineComponent({\n    name: 'LinkButton',\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        toggle: {\n            type: Boolean,\n            default: false\n        },\n        selected: {\n            type: Boolean,\n            default: false\n        },\n        outline: {\n            type: Boolean,\n            default: false\n        },\n        plain: {\n            type: Boolean,\n            default: false\n        },\n        text: String,\n        iconCls: String,\n        iconAlign: {\n            type: String,\n            default: 'left'\n        },\n        size: {\n            type: String,\n            default: 'small'    // or large\n        },\n        href: String,\n        btnCls: String,\n        btnStyle: Object\n    },\n    data() {\n        return {\n            selectedState: this.selected,\n            focused: false\n        }\n    },\n    computed: {\n        isEmpty() {\n            return !this.text && !this.$slots.default;\n        },\n        isDisabled() {\n            return this.disabled;\n        },\n        btnIconCls() {\n            let cls = 'l-btn-icon';\n            if (this.iconCls) {\n                cls += ' ' + this.iconCls;\n            }\n            return cls;\n        },\n        innerCls() {\n            let cls = 'l-btn f-inline-row f-content-center';\n            cls += ' l-btn-' + this.size;\n            if (this.plain) {\n                cls += ' l-btn-plain';\n            }\n            if (this.outline) {\n                cls += ' l-btn-outline';\n            }\n            if (this.selectedState) {\n                cls += this.plain ? ' l-btn-selected l-btn-plain-selected' : ' l-btn-selected';\n            }\n            if (this.isDisabled) {\n                cls += this.plain ? ' l-btn-disabled l-btn-plain-disabled' : ' l-btn-disabled';\n            }\n            if (this.focused) {\n                cls += ' l-btn-focus';\n            }\n            if (this.btnCls) {\n                cls += ' ' + this.btnCls;\n            }\n            if (this.$attrs.class) {\n                cls += ' ' + this.$attrs.class;\n            }\n            return cls;\n        },\n        btnLeftCls() {\n            let cls = 'l-btn-left';\n            if (this.iconCls) {\n                cls += ' l-btn-icon-' + this.iconAlign;\n            }\n            return cls;\n        }\n    },\n    watch: {\n        selected(value) {\n            this.selectedState = value;\n        }\n    },\n    mounted() {\n        if (this.$parent && this.$parent.$options.name == 'ButtonGroup') {\n            this.$parent.addButton(this);\n        }\n    },\n    beforeUnmount() {\n        if (this.$parent && this.$parent.$options.name == 'ButtonGroup') {\n            this.$parent.removeButton(this);\n        }\n    },\n    methods: {\n        focus() {\n            if (this.$refs.btnRef) {\n                this.$refs.btnRef.focus();\n            }\n            this.focused = true;\n        },\n        blur() {\n            if (this.$refs.btnRef) {\n                this.$refs.btnRef.blur();\n            }\n            this.focused = false;\n        },\n        onClick(event) {\n            event.stopPropagation();\n            if (this.disabled) {\n                event.preventDefault();\n                return false;\n            }\n            if (!this.href) {\n                event.preventDefault();\n            }\n            if (this.toggle) {\n                this.selectedState = !this.selectedState;\n            }\n            // this.$emit('click');\n            this.afterClick();\n        },\n        afterClick() {\n\n        },\n        renderInner() {\n            let content = '';\n            if (this.isEmpty) {\n                content = '';\n            } else if (this.text) {\n                content = this.text;\n            } else if (this.$slots.default) {\n                content = this.$slots.default();\n            }\n            return (\n                <>\n                    <span class={this.isEmpty ? 'l-btn-text l-btn-empty' : 'l-btn-text'}>\n                        {content}\n                    </span>\n                    <span class={this.btnIconCls}></span>\n                </>\n            )\n        },\n        renderOthers() {\n            return null;\n        }\n    },\n\n    render() {\n        return (\n            <a ref=\"btnRef\"\n                href={this.href || '#'}\n                class={this.innerCls}\n                style={Object.assign({}, this.$attrs.style, this.btnStyle)}\n                onClick={this.onClick}\n                onFocus={this.focus}\n                onBlur={this.blur}\n            >\n                <span class={this.btnLeftCls}>\n                    {this.renderInner()}\n                </span >\n                {this.renderOthers()}\n            </a >\n        )\n    }\n})","﻿import { defineComponent } from 'vue';\n\nexport default defineComponent({\n    name: 'ButtonGroup',\n    props: {\n        selectionMode: {\n            type: String,\n            default: 'multiple' // or single\n        }\n    },\n    data() {\n        return {\n            buttons: []\n        }\n    },\n    watch: {\n        buttons() {\n            this.initButtons();\n        }\n    },\n    methods: {\n        addButton(button) {\n            const bb = this.buttons.slice();\n            bb.push(button);\n            this.buttons = bb;\n        },\n        removeButton(button) {\n            const bb = this.buttons.slice();\n            let index = bb.indexOf(button);\n            if (index >= 0) {\n                bb.splice(index, 1);\n                this.buttons = bb;\n            }\n        },\n        initButtons() {\n            this.buttons.forEach(btn => {\n                btn.afterClick = () => {\n                    if (this.selectionMode == 'single') {\n                        this.buttons.filter((b) => b != btn).forEach((b) => {\n                            b.selectedState = false;\n                        });\n                        btn.selectedState = true;\n                    }\n                }\n            })\n        }\n    },\n    render() {\n        return (\n            <span class=\"button-group f-inline-row\">\n                {this.$slots.default()}\n            </span>\n        )\n    }\n})","﻿import LinkButton from '../linkbutton/LinkButton';\n\nwindow.FileButtonFileId = window.FileButtonFileId || 1;\n\nexport default {\n    name: 'FileButton',\n    extends: LinkButton,\n    props: {\n        href: {\n            type: String,\n            default: 'javascript:;'\n        },\n        name: {\n            type: String,\n            default: 'file'\n        },\n        accept: String,\n        capture: String,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        url: String,\n        method: {\n            type: String,\n            default: 'POST'\n        },\n        autoUpload: {\n            type: Boolean,\n            default: true\n        },\n        withCredentials: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            fileId: '_easyui_file_' + window.FileButtonFileId++,\n            files: []\n        }\n    },\n    methods: {\n        onFileSelect(event) {\n            this.files = [];\n            for (let i = 0; i < event.target.files.length; i++) {\n                this.files.push(event.target.files[i]);\n            }\n            this.$emit('select', this.files);\n            if (this.files.length && this.autoUpload) {\n                this.upload();\n            }\n        },\n        upload() {\n            if (!this.url) {\n                return;\n            }\n            let xhr = new XMLHttpRequest();\n            let formData = new FormData();\n            for (let i = 0; i < this.files.length; i++) {\n                let file = this.files[i];\n                formData.append(this.name, file, file.name);\n            }\n            xhr.upload.addEventListener('progress', (e) => {\n                if (e.lengthComputable) {\n                    let total = e.total;\n                    let position = e.loaded;\n                    let percent = Math.ceil(position * 100 / total);\n                    this.$emit('progress', percent);\n                }\n            }, false);\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState == 4) {\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        this.$emit('success', { xhr: xhr, files: this.files });\n                    } else {\n                        this.$emit('error', { xhr: xhr, files: this.files });\n                    }\n                }\n            };\n            xhr.open(this.method, this.url, true);\n            xhr.withCredentials = this.withCredentials;\n            xhr.send(formData);\n        },\n        clear() {\n            this.fileRef.nativeElement.value = '';\n        },\n        renderOthers() {\n            return (\n                <label class=\"filebox-label\" for={this.fileId}>\n                    <input type=\"file\" style=\"position:absolute;left:-500000px\"\n                        ref=\"fileRef\"\n                        id={this.fileId}\n                        disabled={this.disabled}\n                        multiple={this.multiple}\n                        accept={this.accept}\n                        capture={this.capture}\n                        onChange={this.onFileSelect}\n                    />\n                </label>\n            )\n        }\n    }\n}","﻿import LinkButton from '../linkbutton/LinkButton';\n\nexport default {\n    name: 'PaginationButton',\n    extends: LinkButton,\n    props: {\n        plain: {\n            type: Boolean,\n            default: true\n        },\n        name: String\n    },\n    computed: {\n        btnIconCls() {\n            let cls = 'l-btn-icon';\n            if (this.name == 'refresh'){\n                if (this.$parent.loading){\n                    cls += ' pagination-loading';\n                } else {\n                    cls += ' pagination-load';\n                }\n            } else {\n                cls += ' pagination-' + this.name;\n            }\n            return cls;\n        },\n        btnLeftCls() {\n            return 'l-btn-left l-btn-icon-' + this.iconAlign;\n        },\n        isDisabled() {\n            if (this.name == 'first' || this.name == 'prev'){\n                return !this.$parent.total || this.$parent.pageNumberState == 1;\n            } else if (this.name == 'next' || this.name == 'last'){\n                return this.$parent.pageNumberState == this.$parent.pageCount;\n            } else {\n                return this.disabled;\n            }\n        }\n\n    },\n    methods: {\n        onClick(event){\n            event.stopPropagation();\n            if (this.isDisabled){\n                event.preventDefault();\n                return;\n            }\n            if (!this.href){\n                event.preventDefault();\n            }\n            if (this.name == 'first'){\n                this.$parent.selectPage(1);\n            } else if (this.name == 'prev'){\n                this.$parent.selectPage(this.$parent.pageNumberState-1);\n            } else if (this.name == 'next'){\n                this.$parent.selectPage(this.$parent.pageNumberState+1);\n            } else if (this.name == 'last'){\n                this.$parent.selectPage(this.$parent.pageCount);\n            } else if (this.name == 'refresh'){\n                this.$parent.refreshPage();\n            }\n        }\n    }\n}","﻿export default {\n    name: 'PaginationList',\n    computed: {\n        pageList() {\n            return this.$parent.pageList;\n        },\n        pageSize() {\n            return this.$parent.pageSizeState;\n        }\n    },\n    methods: {\n        onChange(event) {\n            this.$parent.pageSizeState = parseInt(event.target.value);\n        }\n    },\n    render() {\n        return (\n            <select class=\"pagination-page-list\" onChange={this.onChange}>\n                {\n                    this.pageList.map(page => (\n                        <option selected={page == this.pageSize}>{page}</option>\n                    ))\n                }\n            </select>\n        )\n    }\n}","﻿import LinkButton from '../linkbutton/LinkButton';\n\nexport default {\n    name: 'PaginationLink',\n    components: {\n        LinkButton\n    },\n    computed: {\n        pages() {\n            let begin = this.$parent.pageNumberState - Math.floor(this.$parent.links / 2);\n            if (begin < 1) {\n                begin = 1;\n            }\n            let end = begin + this.$parent.links - 1;\n            if (end > this.$parent.pageCount) {\n                end = this.$parent.pageCount;\n            }\n            begin = end - this.$parent.links + 1;\n            if (begin < 1) {\n                begin = 1;\n            }\n            let pp = [];\n            for (let i = begin; i <= end; i++) {\n                pp.push(i);\n            }\n            return pp;\n        }\n    },\n    methods: {\n        onClick(page) {\n            this.$parent.selectPage(page);\n        }\n    },\n    render() {\n        return (\n            <div class=\"pagination-links f-inline-row\">\n                {\n                    this.pages.map(page => (\n                        <LinkButton\n                            class=\"pagination-link\"\n                            selected={page == this.$parent.pageNumberState}\n                            plain={true}\n                            text={String(page)}\n                            onClick={() => this.onClick(page)}\n                        />\n                    ))\n                }\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'PaginationManual',\n    props: {\n        pageNumber: Number\n    },\n    data() {\n        return {\n            value: this.pageNumber\n        }\n    },\n    watch: {\n        pageNumber() {\n            this.value = this.pageNumber;\n        }\n    },\n    methods: {\n        onBlur() {\n            const page = parseInt(this.value, 10) || 1;\n            this.value = page;\n            this.$emit('pageInput', page);\n        },\n        onKeyDown(event) {\n            if (event.keyCode === 13) {\n                this.onBlur()\n            }\n        }\n    },\n    render() {\n        return (\n            <span style=\"margin:0 6px\">\n                <span>{this.$parent.beforePageText}</span>\n                <input\n                    class=\"pagination-num\"\n                    type=\"text\"\n                    v-model={this.value}\n                    size=\"2\"\n                    onBlur={this.onBlur}\n                    onKeydown={this.onKeyDown}\n                />\n                <span>{this.$parent.afterPageInfo}</span>\n            </span>\n        )\n    }\n}","﻿import PaginationButton from './PaginationButton';\nimport PaginationList from './PaginationList';\nimport PaginationLink from './PaginationLink';\nimport PaginationManual from './PaginationManual';\n\nexport default {\n    name: 'Pagination',\n    components: {\n        PaginationButton,\n        PaginationList,\n        PaginationLink,\n        PaginationManual\n    },\n    props: {\n        pageList: {\n            type: Array,\n            default: () => [10, 20, 30, 40, 50]\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        showPageList: {\n            type: Boolean,\n            default: true\n        },\n        showPageInfo: {\n            type: Boolean,\n            default: true\n        },\n        showPageRefresh: {\n            type: Boolean,\n            default: true\n        },\n        links: {\n            type: Number,\n            default: 10\n        },\n        beforePageText: {\n            type: String,\n            default: () => window.Locale.t('Pagination.beforePageText', 'Page')\n        },\n        afterPageText: {\n            type: String,\n            default: () => window.Locale.t('Pagination.afterPageText', 'of {pages}')\n        },\n        displayMsg: {\n            type: String,\n            default: () => window.Locale.t('Pagination.displayMsg', 'Displaying {from} to {to} of {total} items')\n        },\n        layout: {\n            type: Array,\n            default: () => ['first', 'prev', 'links', 'next', 'last', 'refresh']\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        }\n    },\n    data() {\n        return {\n            pageNumberState: this.pageNumber,\n            pageSizeState: this.pageSize,\n            lastState: null,\n            pagination: this\n        }\n    },\n    computed: {\n        pageInfo() {\n            let info = this.displayMsg;\n            info = info.replace(/{from}/, String(this.total == 0 ? 0 : this.pageSizeState * (this.pageNumberState - 1) + 1));\n            info = info.replace(/{to}/, String(Math.min(this.pageSizeState * (this.pageNumberState), this.total)));\n            info = info.replace(/{total}/, String(this.total));\n            return info;\n        },\n        pageCount() {\n            return !this.total ? 0 : Math.ceil(this.total / this.pageSizeState) || 1;\n        },\n        afterPageInfo() {\n            let info = this.afterPageText;\n            info = info.replace(/{pages}/, String(this.pageCount));\n            return info;\n        }\n    },\n    created() {\n        this._adjustPage();\n        this.lastState = {\n            pageNumber: this.pageNumberState,\n            pageSize: this.pageSizeState\n        };\n    },\n    watch: {\n        pageNumber(value) {\n            this.pageNumberState = value;\n        },\n        pageSize(value) {\n            this.pageSizeState = value;\n        },\n        pageNumberState() {\n            this._adjustPage();\n        },\n        pageSizeState() {\n            this._adjustPage();\n        },\n        total() {\n            this._adjustPage();\n        }\n    },\n    methods: {\n        _isButton(name) {\n            let aa = ['first', 'prev', 'next', 'last', 'refresh'];\n            let index = aa.indexOf(name);\n            return index >= 0;\n        },\n        _adjustPage() {\n            if (this.pageNumberState < 1) {\n                this.pageNumberState = 1;\n            }\n            if (this.pageNumberState > this.pageCount) {\n                this.pageNumberState = this.pageCount;\n            }\n            if (this.total == 0) {\n                this.pageNumberState = 0;\n                if (this.lastState) {\n                    this.lastState.pageNumber = 1;\n                }\n            }\n            // if (this.lastState){\n            //     let state = {pageNumber: this.pageNumberState, pageSize: this.pageSizeState};\n            //     if (this.pageNumberState != this.lastState.pageNumber || this.pageSizeState != this.lastState.pageSize){\n            //         this.lastState = state;\n            //         this.$emit('pageChange', this.lastState);\n            //     }\n            // }\n            if (this.lastState) {\n                let state = { pageNumber: this.pageNumberState || 1, pageSize: this.pageSizeState };\n                if (state.pageNumber != this.lastState.pageNumber || state.pageSize != this.lastState.pageSize) {\n                    this.lastState = state;\n                    this.$emit('pageChange', this.lastState);\n                }\n            }\n        },\n        selectPage(page) {\n            this.pageNumberState = page;\n            this._adjustPage();\n        },\n        refreshPage() {\n            let state = Object.assign({ refresh: true }, this.lastState);\n            if (state.pageNumber <= 0) {\n                state.pageNumber = 1;\n            }\n            this.$emit('pageChange', state);\n        }\n    },\n    render() {\n        return (\n            <div class=\"pagination f-row f-content-center\">\n                {\n                    this.layout.map(name => (\n                        <>\n                            {name == 'list' && <PaginationList></PaginationList>}\n                            {name == 'links' && <PaginationLink></PaginationLink>}\n                            {name == 'manual' && <PaginationManual pageNumber={this.pageNumberState} onPageInput={(page) => this.pageNumberState = page}></PaginationManual>}\n                            {this._isButton(name) && <PaginationButton name={name}></PaginationButton>}\n                            {name == 'sep' && <div class=\"pagination-btn-separator\"></div>}\n                            {\n                                name == 'info' &&\n                                <div class=\"f-full\">\n                                    <div class=\"pagination-info\">{this.pageInfo}</div>\n                                </div>\n                            }\n                            {\n                                name == 'tpl' && this.$slots.default && this.$slots.default(this.pagination)\n                            }\n                        </>\n                    ))\n                }\n            </div >\n        )\n    }\n}","﻿export const DEFAULT_FILTER_OPERATORS = {\n    nofilter: {\n        text: 'No Filter',\n        isMatch: () => {\n            return true;\n        }\n    },\n    contains: {\n        text: 'Contains',\n        isMatch: function(source, value){\n            source = String(source);\n            value = String(value);\n            return source.toLowerCase().indexOf(value.toLowerCase()) >= 0;\n        }\n    },\n    equal: {\n        text: 'Equal',\n        isMatch: function(source, value){\n            return source == value;\n        }\n    },\n    notequal: {\n        text: 'Not Equal',\n        isMatch: function(source, value){\n            return source != value;\n        }\n    },\n    beginwith: {\n        text: 'Begin With',\n        isMatch: function(source, value){\n            source = String(source);\n            value = String(value);\n            return source.toLowerCase().indexOf(value.toLowerCase()) == 0;\n        }\n    },\n    endwith: {\n        text: 'End With',\n        isMatch: function(source, value){\n            source = String(source);\n            value = String(value);\n            return source.toLowerCase().indexOf(value.toLowerCase(), source.length - value.length) !== -1;\n        }\n    },\n    less: {\n        text: 'Less',\n        isMatch: function(source, value){\n            return source < value;\n        }\n    },\n    lessorequal: {\n        text: 'Less Or Equal',\n        isMatch: function(source, value){\n            return source <= value;\n        }\n    },\n    greater: {\n        text: 'Greater',\n        isMatch: function(source, value){\n            return source > value;\n        }\n    },\n    greaterorequal: {\n        text: 'Greater Or Equal',\n        isMatch: function(source, value){\n            return source >= value;\n        }\n    }\n\n};\n\nexport default {\n    name: 'ListBase',\n    template: '',\n    props: {\n        border: {\n            type: Boolean,\n            default: true\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        loadMsg: {\n            type: String,\n            default: () => window.Locale.t('ListBase.loadMsg', 'Processing, please wait ...')\n        },\n        emptyMsg: String,\n        pagination: {\n            type: Boolean,\n            default: false\n        },\n        pagePosition: {\n            type: String,\n            default: 'bottom'\n        },\n        pageOptions: Object,\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        rowHeight: {\n            type: Number,\n            default: 32\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        pageLayout: {\n            type: Array,\n            default: () => ['first','prev','links','next','last','refresh']\n        },\n        pageList: {\n            type: Array,\n            default: () => [10,20,30,40,50]\n        },\n        pageLinks: {\n            type: Number,\n            default: 10\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        idField: String,\n        selectionMode: String,\n        selection: {\n            type: [Object,Array],\n            default: null\n        },\n        filterable: {\n            type: Boolean,\n            default: false\n        },\n        filterRules: {\n            type: Array,\n            default: () => []\n        },\n        filterDelay: {\n            type: Number,\n            default: 400\n        },\n        filterMatchingType: {\n            type: String,\n            default: 'all'\n        },\n        filterPosition: {\n            type: String,\n            default: 'bottom'\n        },\n        filterBtnPosition: {\n            type: String,\n            default: 'right'\n        },\n        filterOperators: {\n            type: Object,\n            default: () => DEFAULT_FILTER_OPERATORS\n        },\n        data: {\n            type: Array,\n            default: () => []\n        }\n    },\n    computed: {\n        selectionValue() {\n            if (this.selectionModeState == 'single'){\n                return this.selectedRows[0] || null;\n            } else if (this.selectionModeState == 'multiple'){\n                return this.selectedRows;\n            } else if (this.selectionModeState == 'cell'){\n                return this.selectedCells[0] || null;\n            } else if (this.selectionModeState == 'multicell'){\n                return this.selectedCells;\n            } else {\n                return null;\n            }\n        }\n    },\n    data() {\n        return {\n            totalState: this.total,\n            pageNumberState: this.pageNumber,\n            pageSizeState: this.pageSize,\n            pageState: null,\n            highlightRow: null,\n            highlightCell: null,\n            selectionModeState: this.selectionMode,\n            selectedRows: [],\n            selectedCells: [],\n            rows: [],\n            innerData: [],\n            filteredData: []\n        }\n    },\n    watch: {\n        total(value){\n            this.totalState = value;\n        },\n        pageNumber(value){\n            this.pageNumberState = value;\n        },\n        pageSize(value){\n            this.pageSizeState = value;\n        },\n        data(value) {\n            this.$nextTick(() => this.setData(value));\n        },\n        selection(value){\n            this.setSelectionValue(value);\n        },\n        selectionMode(value){\n            this.selectionModeState = value;\n        }\n    },\n    mounted(){\n        this.setData(this.data);\n        this.setSelectionValue(this.selection);\n    },\n    methods: {\n        afterSelectionChange(){},\n        setData(value) {\n            if (value == null){\n                value = [];\n            }\n            this.innerData = Object.assign([],value);\n            if (!this.lazy){\n                this.sortData();\n                this.filteredData = this.filterData(this.innerData);\n            } else {\n                this.filteredData = this.innerData;\n            }\n            this.setGroupData();\n            if (this.pagination){\n                if (this.lazy){\n                    if (this.filteredData.length){\n                        this.rows = this.filteredData.slice(0, this.pageSizeState);\n                    } else {\n                        if (this.totalState){\n                            this.$emit('pageChange', {\n                                pageNumber: this.pageNumberState,\n                                pageSize: this.pageSizeState\n                            });\n                        } else {\n                            this.rows = [];\n                        }\n                    }\n                } else {\n                    this.totalState = this.filteredData.length;\n                    // let start = (this.pageNumberState - 1) * this.pageSizeState;\n                    // this.rows = this.filteredData.slice(start, start + this.pageSizeState);\n                    this.setPageData();\n                }\n            } else {\n                this.rows = this.filteredData;\n            }\n        },\n        setGroupData(){\n\n        },\n        setSelectionValue(value){\n            if (value == null){\n                this.selectedRows = [];\n                this.selectedCells = [];\n                return;\n            }\n            if (this.selectionModeState == 'single'){\n                this.selectedRows = [value];\n            } else if (this.selectionModeState == 'multiple'){\n                this.selectedRows = value;\n            } else if (this.selectionModeState == 'cell'){\n                this.selectedCells = [value];\n            } else if (this.selectionModeState == 'multicell'){\n                this.selectedCells = value;\n            }\n        },\n        sortData() {\n\n        },\n        filterData(data) {\n            let isMatch = (row) => {\n                let rules = this.filterRules;\n                if (!rules.length){\n                    return true;\n                }\n                for(let i=0; i<rules.length; i++){\n                    let rule = rules[i];\n                    let source = row[rule.field];\n                    if (source == null){\n                        source = '';\n                    }\n                    let op = this.filterOperators[rule.op];\n                    let matched = op.isMatch(source, rule.value);\n                    if (this.filterMatchingType == 'any'){\n                        if (matched) {\n                            return true;\n                        }\n                    } else {\n                        if (!matched){\n                            return false;\n                        }\n                    }\n                }\n                return this.filterMatchingType == 'all';\n            };\n            let rows = data.filter(row => isMatch(row));\n            return rows;\n    \n        },\n        doFilter(rule) {\n            if (rule){\n                if (rule.value == null || rule.value == ''){\n                    this.removeFilterRule(rule.field);\n                } else {\n                    this.addFilterRule(rule);\n                }\n            }\n            // this.setData(this.data);\n            this.setData(this.innerData);\n            this.$emit('filterChange', this.filterRules);\n        },\n        doEnter() {\n            if (this.isCellSelectionMode()){\n                if (this.highlightCell){\n                    if (this.selectionModeState == 'cell'){\n                        this.selectCell(this.highlightCell.row, this.highlightCell.column);\n                    } else if (this.selectionModeState == 'multicell'){\n                        if (this.isSelected(this.highlightCell.row, this.highlightCell.column)){\n                            this.unselectCell(this.highlightCell.row, this.highlightCell.column);\n                        } else {\n                            this.selectCell(this.highlightCell.row, this.highlightCell.column);\n                        }\n                    }\n                }\n            } else {\n                if (this.highlightRow){\n                    if (this.selectionModeState == 'single'){\n                        this.selectRow(this.highlightRow);\n                    } else if (this.selectionModeState == 'multiple'){\n                        if (this.isSelected(this.highlightRow)){\n                            this.unselectRow(this.highlightRow);\n                        } else {\n                            this.selectRow(this.highlightRow);\n                        }\n                    }\n                }\n            }\n        },\n        getSelectedIndex(row){\n            if (this.idField){\n                for(let i=0; i<this.selectedRows.length; i++){\n                    if (this.selectedRows[i][this.idField] == row[this.idField]){\n                        // this.selectedRows.splice(i, 1, row);\n                        this.selectedRows[i] = row;\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return this.selectedRows.indexOf(row);\n            }\n        },\n        getSelectedCellIndex(row, column){\n            for(let i=0; i<this.selectedCells.length; i++){\n                let cell = this.selectedCells[i];\n                if (cell.column == column){\n                    if (this.idField){\n                        if (cell.row[this.idField] == row[this.idField]){\n                            return i;\n                        }\n                    } else if (cell.row == row){\n                        return i;\n                    }\n                }\n            }\n            return -1;\n        },\n        isCellSelectionMode() {\n            if (this.selectionModeState == 'cell' || this.selectionModeState == 'multicell'){\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isHighlighted(row, column = null) {\n            if (this.isCellSelectionMode()){\n                if (this.highlightCell && this.highlightCell.row == row && this.highlightCell.column == column){\n                    return true;\n                }\n            } else if (this.highlightRow == row){\n                return true;\n            }\n            return false;\n        },\n        isSelected(row, column = null){\n            if (this.isCellSelectionMode()){\n                let index = this.getSelectedCellIndex(row, column);\n                return index != -1;\n            } else {\n                let index = this.getSelectedIndex(row);\n                return index != -1;\n            }\n        },\n        selectRow(row){\n            if (this.isCellSelectionMode()){\n                return;\n            }\n            if (!this.isSelected(row)){\n                if (this.selectionModeState == 'single'){\n                    if (this.selectionValue){\n                        this.$emit('rowUnselect', this.selectionValue);\n                    }\n                    this.selectedRows = [row];\n                } else if (this.selectionModeState == 'multiple'){\n                    this.selectedRows.push(row);\n                }\n                this.$emit('rowSelect', row);\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n    \n        unselectRow(row){\n            if (this.isCellSelectionMode()){\n                return;\n            }\n            let index = this.getSelectedIndex(row);\n            if (index >= 0){\n                this.selectedRows.splice(index, 1);\n                this.$emit('rowUnselect', row);\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n        selectCell(row, column){\n            if (!this.isCellSelectionMode()){\n                return;\n            }\n            if (!this.isSelected(row, column)){\n                if (this.selectionModeState == 'cell'){\n                    if (this.selectionValue){\n                        this.$emit('cellUnselect', this.selectionValue);\n                    }\n                    this.selectedCells = [{row:row,column:column}];\n                } else if (this.selectionModeState == 'multicell'){\n                    this.selectedCells.push({row:row,column:column});\n                }\n                this.$emit('cellSelect', {row:row,column:column});\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n    \n        unselectCell(row, column){\n            if (!this.isCellSelectionMode()){\n                return;\n            }\n            let index = this.getSelectedCellIndex(row, column);\n            if (index >= 0){\n                this.selectedCells.splice(index, 1);\n                this.$emit('cellUnselect', {row:row,column:column});\n                this.$emit('selectionChange', this.selectionValue);\n                this.afterSelectionChange(this.selectionValue);\n            }\n        },\n        clearSelections() {\n            if (this.isCellSelectionMode()){\n                if (this.selectedCells.length){\n                    this.selectedCells = [];\n                    this.$emit('selectionChange', this.selectionValue);\n                    this.afterSelectionChange(this.selectionValue);\n                }\n            } else {\n                if (this.selectedRows.length){\n                    this.selectedRows = [];\n                    this.$emit('selectionChange', this.selectionValue);\n                    this.afterSelectionChange(this.selectionValue);\n                }\n            }\n        },\n        navRow(step) {\n            if (!this.rows.length){\n                return;\n            }\n            let index = this.rows.indexOf(this.highlightRow);\n            if (index == -1){\n                index = 0;\n            } else {\n                index += step;\n                if (index >= this.rows.length){\n                    index = this.rows.length - 1;\n                } else if (index < 0){\n                    index = 0;\n                }\n            }\n            this.highlightRow = this.rows[index];\n        },\n        getFilterRuleIndex(field) {\n            for(let i=0; i<this.filterRules.length; i++){\n                if (this.filterRules[i].field == field){\n                    return i;\n                }\n            }\n            return -1;\n        },\n        getFilterRule(field) {\n            let index = this.getFilterRuleIndex(field);\n            if (index != -1){\n                return this.filterRules[index];\n            } else {\n                return null;\n            }\n        },\n        addFilterRule(rule) {\n            let index = this.getFilterRuleIndex(rule.field);\n            if (index != -1){\n                Object.assign(this.filterRules[index], rule);\n            } else {\n                this.filterRules.push(rule);\n            }\n        },\n    \n        removeFilterRule(field) {\n            let index = this.getFilterRuleIndex(field);\n            if (index != -1){\n                this.filterRules.splice(index, 1);\n            }\n        },\n\n        setPageData(){\n            let start = (this.pageNumberState - 1) * this.pageSizeState;\n            this.rows = this.filteredData.slice(start, start + (+this.pageSizeState));\n        },\n\n        onPageChange(event){\n            if (this.pageState != null && !event.refresh){\n                if (this.pageState.pageNumber == event.pageNumber && this.pageState.pageSize == event.pageSize){\n                    return;\n                }\n            }\n            this.pageState = event;\n            this.pageNumberState = event.pageNumber;\n            this.pageSizeState = event.pageSize\n            if (!this.lazy){\n                // let start = (this.pageNumberState - 1) * this.pageSizeState;\n                // this.rows = this.filteredData.slice(start, start + (+this.pageSizeState));\n                this.setPageData();\n            }\n            this.$emit('pageChange', Object.assign(event, {\n                filterRules: this.filterRules\n            }));\n        },\n        onVirtualPageChange(event){\n            this.pageNumberState = event.pageNumber;\n            this.pageSizeState = event.pageSize\n            this.$emit('pageChange', Object.assign(event, {\n                filterRules: this.filterRules\n            }));\n        },\n        onRowClick(row){\n            this.$emit('rowClick', row);\n            if (this.selectionModeState == 'single'){\n                this.selectRow(row);\n            } else if (this.selectionModeState == 'multiple') {\n                if (this.isSelected(row)){\n                    this.unselectRow(row);\n                } else {\n                    this.selectRow(row);\n                }\n            }\n        },\n        onCellClick(row, column){\n            this.$emit('cellClick', {row:row, column:column});\n            if (this.selectionModeState == 'cell'){\n                this.selectCell(row, column);\n            } else if (this.selectionModeState == 'multicell'){\n                if (this.isSelected(row, column)){\n                    this.unselectCell(row, column);\n                } else {\n                    this.selectCell(row, column);\n                }\n            }\n        }\n                        \n    }\n}","﻿import domHelper from './DomHelper';\n\nexport default {\n    name: 'VirtualScroll',\n    props: {\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        rowHeight: {\n            type: Number,\n            default: 32\n        },\n        maxDivHeight: {\n            type: Number,\n            default: 10000000\n        },\n        maxVisibleHeight: {\n            type: Number,\n            default: 15000000\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        data: {\n            type: Array,\n            default: () => []\n        },\n        scrollPosition: Object\n    },\n    data() {\n        return {\n            innerData: [],\n            items: [],\n            waitingPage: 1,\n            fetchingPage: 0,\n            startIndex: 0,\n            deltaTopHeight: 0,\n            topHeights: [],\n            bottomHeights: [],\n            isUpdating: false,\n            isNewFetching: false,\n            totalState: this.total,\n            pageNumberState: this.pageNumber,\n            scrollPositionState: this.scrollPosition\n        }\n    },\n    watch: {\n        total(value) {\n            this.totalState = value;\n        },\n        pageNumber(value) {\n            this.pageNumberState = value;\n        },\n        data(value) {\n            value = value || [];\n            if (!value.length) {\n                if (!this.totalState) {\n                    this.clear();\n                    return;\n                }\n            }\n            if (this.scrollPositionState) {\n                this.scrollPosition.innerData = value;\n                return;\n            }\n            this.$nextTick(() => {\n                this.setData(value);\n                setTimeout(() => {\n                    this.scrolling();\n                }, 20)\n            });\n        }\n    },\n    mounted() {\n        this.$nextTick(() => {\n            // this.setData(this.data);\n            // this.isNewFetching = true;\n\n            if (this.scrollPositionState) {\n                this.scrollState(this.scrollPositionState);\n                this.scrollPositionState = null;\n            } else {\n                this.setData(this.data);\n                this.isNewFetching = true;\n            }\n        });\n    },\n    methods: {\n        scrollTop(value) {\n            if (value != undefined) {\n                this.$refs.bodyRef.scrollTop = value;\n            } else {\n                return this.$refs.bodyRef.scrollTop;\n            }\n        },\n        relativeScrollTop() {\n            return this.$refs.bodyRef.scrollTop - this.startIndex * this.rowHeight + this.deltaTopHeight;\n        },\n        scrollbarWidth() {\n            return domHelper.outerWidth(this.$refs.bodyRef) - domHelper.outerWidth(this.$refs.contentRef);\n        },\n        scrollState(value) {\n            if (value != undefined) {\n                this.topHeights = value.topHeights;\n                this.bottomHeights = value.bottomHeights;\n                this.deltaTopHeight = value.deltaTopHeight;\n                this.startIndex = value.startIndex;\n                this.innerData = value.innerData || [];\n                this.items = value.items || [];\n                this.$emit('update', this.items);\n                this.$nextTick(() => {\n                    this.scrollTop(value.scrollTop);\n                    this.refresh();\n                    this.scrolling();\n                });\n            } else {\n                return {\n                    topHeights: Object.assign([], this.topHeights),\n                    bottomHeights: Object.assign([], this.bottomHeights),\n                    deltaTopHeight: this.deltaTopHeight,\n                    startIndex: this.startIndex,\n                    scrollTop: this.scrollTop(),\n                    items: Object.assign([], this.items),\n                    innerData: Object.assign([], this.innerData)\n                };\n            }\n        },\n        clear() {\n            this.topHeights = [];\n            this.bottomHeights = [];\n            this.deltaTopHeight = 0;\n            this.startIndex = 0;\n            this.scrollTop(0);\n            this.items = [];\n            this.innerData = [];\n            this.populate();\n        },\n        onScroll(event) {\n            event.stopPropagation();\n            if (!this.isUpdating) {\n                this.scrolling();\n            }\n            this.$emit('bodyScroll', {\n                left: this.$refs.bodyRef.scrollLeft,\n                top: this.scrollTop(),\n                relativeTop: this.relativeScrollTop(),\n                items: this.items\n            });\n        },\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            // this.innerData = value;\n            this.innerData = Object.assign([], value);\n            this.fetchingPage = 0;\n            if (this.lazy) {\n                if (this.innerData.length) {\n                    this.waitingPage = this.pageNumberState;\n                    this.loadPage(this.innerData);\n                } else {\n                    if (this.totalState > 0) {\n                        this.fetchPage(this.waitingPage);\n                    } else {\n                        this.loadPage(this.innerData);\n                    }\n                }\n            } else {\n                this.totalState = this.innerData.length;\n                this.pageNumberState = 1;\n                this.waitingPage = 1;\n                this.startIndex = 0;\n                this.loadPage(this.innerData);\n            }\n        },\n        scrolling() {\n            this.isNewFetching = false;\n            let bodyHeight = domHelper.outerHeight(this.$refs.bodyRef);\n            let bodyOffset = domHelper.offset(this.$refs.bodyRef);\n            let contentOffset = domHelper.offset(this.$refs.contentRef);\n            let top = contentOffset.top - bodyOffset.top;\n            let bottom = top + domHelper.outerHeight(this.$refs.contentRef);\n\n            if (top > bodyHeight || bottom < 0) {\n                let scrollTop = this.$refs.bodyRef.scrollTop;\n                let index = Math.floor((scrollTop + this.deltaTopHeight) / this.rowHeight);\n                let page = Math.floor(index / this.pageSize) + 1;\n                if (page > 0) {\n                    this.isNewFetching = true;\n                    this.startIndex = (page - 1) * this.pageSize;\n                    this.waitingPage = page;\n                    this.items = [];\n                    this.fetchPage(this.waitingPage);\n                }\n            } else if (top > 0) {\n                if (this.startIndex == 0) {\n                    return;\n                }\n                let page = Math.floor(this.startIndex / this.pageSize) + 1;\n                this.waitingPage = page - 1;\n                this.fetchPage(this.waitingPage);\n            } else if (bottom < bodyHeight) {\n                if (this.startIndex + this.items.length >= this.totalState) {\n                    return;\n                }\n                let page = Math.floor(this.startIndex / this.pageSize) + 1;\n                if (this.items.length >= this.pageSize * 2) {\n                    this.waitingPage = page + 2;\n                } else {\n                    this.waitingPage = page + 1;\n                }\n                this.fetchPage(this.waitingPage);\n            }\n        },\n        populate() {\n            if (!this.$refs.bodyRef) {\n                return;\n            }\n            this.isUpdating = true;\n\n            let bodyHeight = domHelper.outerHeight(this.$refs.bodyRef);\n            let topHeight = this.startIndex * this.rowHeight;\n            let bottomHeight = this.totalState * this.rowHeight - topHeight - this.items.length * this.rowHeight;\n            this.topHeights = this.splitHeights(topHeight);\n            this.bottomHeights = this.splitHeights(bottomHeight);\n            let spos = this.$refs.bodyRef.scrollTop + this.deltaTopHeight;\n            if (topHeight > this.maxVisibleHeight) {\n                this.deltaTopHeight = topHeight - this.maxVisibleHeight;\n                this.topHeights = this.splitHeights(this.maxVisibleHeight);\n            } else {\n                this.deltaTopHeight = 0;\n            }\n            if (bottomHeight > this.maxVisibleHeight) {\n                this.bottomHeights = this.splitHeights(this.maxVisibleHeight);\n            } else if (bottomHeight == 0) {\n                let lastCount = this.totalState % this.pageSize;\n                if (lastCount) {\n                    this.bottomHeights = this.splitHeights(bodyHeight - lastCount * this.rowHeight);\n                }\n            }\n            this.$refs.bodyRef.scrollTop = spos - this.deltaTopHeight;\n            this.$emit('update', this.items);\n            this.$nextTick(() => {\n                if (this.$refs.bodyRef) {\n                    this.$refs.bodyRef.scrollTop = spos - this.deltaTopHeight;\n                    if (this.isNewFetching) {\n                        this.scrolling();\n                    }\n                    this.isUpdating = false;\n                }\n                // this.scrolling();\n            });\n        },\n        splitHeights(height) {\n            let count = Math.floor(height / this.maxDivHeight);\n            let leftHeight = height - this.maxDivHeight * count;\n            if (height < 0) {\n                leftHeight = 0;\n            }\n            let heights = [];\n            for (let i = 0; i < count; i++) {\n                heights.push(this.maxDivHeight);\n            }\n            heights.push(leftHeight);\n            return heights;\n        },\n        loadPage(items) {\n            if (this.pageNumberState != this.waitingPage) {\n                return;\n            }\n            items = items.slice(0, this.pageSize);\n            let page = Math.floor(this.startIndex / this.pageSize) + 1;\n            if (page == this.waitingPage) {\n                this.items = items;\n                this.populate();\n            } else if (this.waitingPage == page + 1) {\n                this.items = this.items.slice(0, this.pageSize).concat(items);\n                this.populate();\n            } else if (this.waitingPage == page + 2) {\n                this.startIndex += this.pageSize;\n                this.items = this.items.slice(this.pageSize, this.pageSize * 2).concat(items);\n                this.populate();\n            } else if (this.waitingPage == page - 1) {\n                this.startIndex -= this.pageSize;\n                this.items = items.concat(this.items.slice(0, this.pageSize));\n                this.populate();\n            } else {\n                this.startIndex = (this.pageNumberState - 1) * this.pageSize;\n                this.items = items;\n                this.populate();\n            }\n        },\n        fetchPage(page) {\n            if (this.fetchingPage != page) {\n                this.fetchingPage = page;\n                if (!this.lazy) {\n                    let start = (page - 1) * this.pageSize;\n                    let items = this.innerData.slice(start, start + this.pageSize);\n                    this.pageNumberState = page;\n                    this.loadPage(items);\n                }\n                this.$emit('pageChange', {\n                    pageNumber: page,\n                    pageSize: this.pageSize\n                });\n            }\n        },\n        gotoPage(page) {\n            this.startIndex = (page - 1) * this.pageSize;\n            this.waitingPage = page;\n            this.populate();\n            this.$nextTick(() => {\n                this.$refs.bodyRef.scrollTop = this.startIndex * this.rowHeight - this.deltaTopHeight;\n                this.fetchPage(page);\n            });\n        },\n        refresh() {\n            let page = Math.floor(this.startIndex / this.pageSize) + 1;\n            this.waitingPage = page;\n            this.fetchingPage = 0;\n            this.fetchPage(page);\n        }\n\n    },\n    render() {\n        return (\n            <div class=\"f-column panel-noscroll\">\n                <div ref=\"bodyRef\" class=\"scroll-body f-column f-full\" onScroll={this.onScroll}>\n                    <div ref=\"topRef\" class=\"scroll-top f-noshrink\">\n                        {\n                            this.topHeights.map(h => (\n                                <div style={{ height: h + 'px' }}></div>\n                            ))\n                        }\n                    </div>\n                    <div ref=\"contentRef\" class=\"scroll-content f-noshrink\">\n                        {this.$slots.default()}\n                    </div>\n                    <div ref=\"bottomRef\" class=\"scroll-bottom f-noshrink\">\n                        {\n                            this.bottomHeights.map(h => (\n                                <div style={{ height: h + 'px' }}></div>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\nimport ListBase from '../base/ListBase';\nimport VirtualScroll from '../base/VirtualScroll';\nimport { Pagination } from '../pagination';\n\nexport default defineComponent({\n    name: 'DataList',\n    extends: ListBase,\n    components: { VirtualScroll },\n    props: {\n        itemStyle: Object,\n        itemCls: String,\n        hoverCls: {\n            type: String,\n            default: 'datagrid-row-over'\n        },\n        selectedCls: {\n            type: String,\n            default: 'datagrid-row-selected'\n        },\n        scrollPosition: [Number, Object]\n    },\n    computed: {\n        innerClasses() {\n            return ['f-full', {\n                'f-column': this.virtualScroll\n            }];\n        },\n        innerStyle() {\n            return { overflow: this.virtualScroll ? 'hidden' : 'auto' };\n        },\n        virtualItemStyle() {\n            return Object.assign({}, this.itemStyle, { height: this.rowHeight + 'px' });\n        }\n    },\n    data() {\n        return {\n            vrows: [],\n            scrollPositionState: this.scrollPosition\n        }\n    },\n    mounted() {\n        if (this.$refs.innerRef && this.scrollPositionState) {\n            this.$nextTick(() => {\n                this.scrollTop(this.scrollPositionState);\n                this.scrollPositionState = null;\n            });\n        }\n    },\n    methods: {\n        getItemClass(row) {\n            let cc = [];\n            if (this.itemCls) {\n                cc.push(this.itemCls);\n            }\n            if (this.hoverCls && this.highlightRow == row) {\n                cc.push(this.hoverCls);\n            }\n            if (this.selectedCls && this.isSelected(row)) {\n                cc.push(this.selectedCls);\n            }\n            return cc.length ? cc.join(' ') : null;\n        },\n        getRowIndex(index) {\n            if (this.$refs.vscrollRef) {\n                return index + this.$refs.vscrollRef.startIndex;\n            } else if (this.pagination) {\n                return index + (this.pageNumberState - 1) * this.pageSizeState;\n            } else {\n                return index;\n            }\n        },\n        scrollTop(value) {\n            if (value != undefined) {\n                if (this.$refs.vscrollRef) {\n                    // this.$refs.vscrollRef.scrollTop(value);\n                    this.$refs.vscrollRef.scrollState(value);\n                } else {\n                    this.$refs.innerRef.scrollTop = value;\n                }\n            } else {\n                if (this.$refs.vscrollRef) {\n                    // return this.$refs.vscrollRef.scrollTop();\n                    return this.$refs.vscrollRef.scrollState();\n                } else {\n                    return this.$refs.innerRef.scrollTop;\n                }\n            }\n        },\n        navRow(step) {\n            ListBase.methods.navRow.call(this, step);\n            let index = this.rows.indexOf(this.highlightRow);\n            if (index >= 0) {\n                this.$nextTick(() => {\n                    let container = this.$refs.vscrollRef ? this.$refs.vscrollRef.$refs.bodyRef : this.$refs.innerRef;\n                    let item = container.querySelector('.' + this.hoverCls);\n                    if (item) {\n                        domHelper.scrollTo(container, item);\n                    }\n                })\n            }\n        },\n        highlightFirstRow() {\n            this.highlightRow = this.rows.length ? this.rows[0] : null;\n            this.navRow(0);\n        },\n        scrollToSelectedRow() {\n            let container = this.$refs.vscrollRef ? this.$refs.vscrollRef.$refs.bodyRef : this.$refs.innerRef;\n            let item = container.querySelector('.' + this.selectedCls);\n            if (item) {\n                domHelper.scrollTo(container, item);\n            }\n        },\n        renderPagination(position) {\n            if (!this.pagination) {\n                return null;\n            }\n            if (this.pagePosition != 'both' && this.pagePosition != position) {\n                return null;\n            }\n            let ref = 'pageTopRef';\n            let cls = 'datagrid-pager f-noshrink';\n            if (this.pagePosition == 'top') {\n                cls += ' datagrid-pager-top';\n            } else {\n                ref = 'pageBottomRef';\n            }\n            return (\n                <Pagination ref={ref} class={cls}\n                    total={this.totalState}\n                    pageSize={this.pageSizeState}\n                    pageNumber={this.pageNumberState}\n                    loading={this.loading}\n                    onPageChange={this.onPageChange}>\n                </Pagination>\n            )\n        },\n        renderLoading() {\n            if (!this.loading) {\n                return null;\n            }\n            return (\n                <div class=\"datagrid-loading f-row\">\n                    <div class=\"datagrid-mask\"></div>\n                    <div class=\"datagrid-mask-msg\">{this.loadMsg}</div>\n                </div>\n            )\n        },\n        renderEmpty() {\n            if (this.loading || this.rows.length) {\n                return null;\n            }\n            if (this.$slots['empty']) {\n                const content = this.$slots['empty']();\n                return (\n                    <div class=\"datagrid-empty\">{content}</div>\n                )\n            } else {\n                return null;\n            }\n        },\n        renderList() {\n            if (this.virtualScroll) {\n                return null;\n            }\n            return (\n                <>\n                    {\n                        this.rows.map((row, rowIndex) => (\n                            <div\n                                class={this.getItemClass(row)}\n                                style={this.itemStyle}\n                                onMouseenter={() => this.highlightRow = row}\n                                onMouseleave={() => this.highlightRow = null}\n                                onClick={(event) => this.onRowClick(row, event)}\n                            >\n                                {this.$slots.default({ row: row, rowIndex: this.getRowIndex(rowIndex) })}\n                            </div>\n                        ))\n                    }\n                </>\n            )\n        },\n        renderVirtualList() {\n            if (!this.virtualScroll) {\n                return null;\n            }\n            return (\n                <VirtualScroll ref=\"vscrollRef\" class=\"f-full\"\n                    data={this.rows}\n                    total={this.total}\n                    pageNumber={this.pageNumber}\n                    pageSize={this.pageSize}\n                    rowHeight={this.rowHeight}\n                    lazy={this.lazy}\n                    scrollPosition={this.scrollPosition}\n                    onUpdate={value => this.vrows = value}\n                    onPageChange={this.onVirtualPageChange}>\n                    {\n                        this.vrows.map((row, rowIndex) => (\n                            <div\n                                class={this.getItemClass(row)}\n                                style={this.virtualItemStyle}\n                                onMouseenter={() => this.highlightRow = row}\n                                onMouseleave={() => this.highlightRow = null}\n                                onClick={event => this.onRowClick(row, event)}\n                            >\n                                {this.$slots.default({ row: row, rowIndex: this.getRowIndex(rowIndex) })}\n                            </div>\n                        ))\n                    }\n                </VirtualScroll>\n            )\n        }\n    },\n    render() {\n        let bodyCls = 'panel-body panel-body-noheader datagrid f-full f-column';\n        if (!this.border) {\n            bodyCls += ' panel-body-noborder';\n        }\n        return (\n            <div class=\"f-column\">\n                <div class={bodyCls}>\n                    {this.renderPagination('top')}\n                    <div ref=\"innerRef\" class={this.innerClasses} style={this.innerStyle}>\n                        {this.renderList()}\n                        {this.renderVirtualList()}\n                    </div>\n                    {this.renderPagination('bottom')}\n                </div>\n                {this.renderLoading()}\n                {this.renderEmpty()}\n            </div>\n        )\n    }\n})","﻿import { h } from 'vue';\n\nexport default {\n    name: 'Addon',\n    props: {\n        align: {\n            type: String,\n            default: 'right'\n        }\n    },\n    render() {\n        if (!this.$slots.default) {\n            return '';\n        }\n        return h(\n            'span',\n            {\n                'class': {\n                    'textbox-addon f-inline-row f-noshrink': true,\n                    'f-order2': this.align == 'left',\n                    'f-order4': this.align == 'right'\n                }\n            },\n            [this.$slots.default()]\n        )\n    }\n}","﻿export default {\n    name: 'Label',\n    props: {\n        for: String,\n        align: {\n            type: String,\n            default: 'left'\n        }\n    },\n    computed: {\n        labelClasses() {\n            // return 'textbox-label textbox-label-'+this.align;\n            return ['textbox-label', {\n                'textbox-label-top': this.align == 'top'\n            }]\n        },\n        labelStyle() {\n            return {\n                textAlign: this.align\n            }\n        }\n    },\n    mounted() {\n        if (this.for) {\n            let att = document.createAttribute('for');\n            att.value = this.for;\n            this.$el.setAttributeNode(att);\n        }\n    },\n    render() {\n        return (\n            <label class={this.labelClasses} style={this.labelStyle}>\n                {this.$slots.default()}\n            </label>\n        )\n    }\n}","﻿import { defineComponent } from \"vue\";\n\nexport default defineComponent({\n    name: 'FieldBase',\n    template: '',\n    props: {\n        name: String,\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        validateOnCreate: {\n            type: Boolean,\n            default: true\n        },\n        validateOnBlur: {\n            type: Boolean,\n            default: false\n        },\n        validateOnChange: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            invalidState: this.invalid\n        }\n    },\n    watch: {\n        invalid(value) {\n            this.invalidState = value;\n        }\n    },\n    computed: {\n        form() {\n            let parent = this.$parent;\n            while (parent && parent.$options.name != 'Form') {\n                parent = parent.$parent;\n            }\n            return parent;\n        },\n        field() {\n            let parent = this.$parent;\n            while (parent && parent.$options.name != 'FormField') {\n                parent = parent.$parent;\n            }\n            return parent;\n        },\n        fieldName() {\n            if (this.name) {\n                return this.name;\n            }\n            return this.field ? this.field.name : null;\n        }\n    },\n    mounted() {\n        if (this.form && this.form.fieldAdd) {\n            this.form.fieldAdd(this);\n        }\n    },\n    beforeUnmount() {\n        if (this.form && this.form.fieldRemove) {\n            this.form.fieldRemove(this);\n        }\n    },\n    methods: {\n        renderField() {\n            return null;\n        },\n        afterFocus() { },\n        afterBlur() {\n            if (this.form && this.form.fieldBlur) {\n                this.form.fieldBlur(this)\n            }\n        },\n        afterValueChange() {\n            if (this.form && this.form.fieldChange) {\n                this.form.fieldChange(this)\n            }\n        },\n        setValid(valid) {\n            this.invalidState = !valid;\n        }\n    },\n    render() {\n        return this.renderField()\n    }\n})","﻿import { defineComponent } from 'vue';\nimport FieldBase from './FieldBase';\n\nexport default defineComponent({\n    name: 'InputBase',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: [String, Number, Array],\n        modelValue: [String, Number, Array],\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: true\n        },\n        iconCls: String,\n        iconAlign: {\n            type: String,\n            default: 'right'\n        },\n        placeholder: String,\n        multiline: {\n            type: Boolean,\n            default: false\n        },\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: Number,\n        cls: String,\n        inputCls: String,\n        inputStyle: Object,\n        inputId: String,\n        textFormatter: Function\n        // textFormatter: {\n        //     type: Function,\n        //     default: (value) => {return value == null ? value : String(value)}\n        // }\n    },\n    data() {\n        const v = this.value !== undefined ? this.value : this.modelValue;\n        return {\n            valueState: v,\n            textState: String(v || ''),\n            focused: false\n        }\n    },\n    computed: {\n        baseClasses() {\n            return ['textbox f-inline-row f-field', this.cls, {\n                'textbox-disabled': this.disabled,\n                'textbox-readonly': this.readonly,\n                'textbox-focused': this.focused,\n                'textbox-invalid': this.invalidState\n            }];\n        },\n        inputClasses() {\n            return ['textbox-text f-full f-order3', this.inputCls, {\n                'validatebox-invalid': this.invalidState\n            }];\n        },\n        addonClasses() {\n            return ['textbox-addon textbox-addon-icon f-inline-row f-noshrink', {\n                'f-order1': this.iconAlign == 'left',\n                'f-order5': this.iconAlign == 'right'\n            }];\n        },\n        addonIconClasses() {\n            return ['textbox-icon textbox-icon-disabled', this.iconCls];\n        },\n        text() {\n            return this.textState;\n        }\n    },\n    watch: {\n        value() {\n            this.setValue(this.value);\n        },\n        modelValue() {\n            this.setValue(this.modelValue);\n        }\n    },\n    methods: {\n        defaultTextFormatter(value) {\n            return value == null ? value : String(value);\n        },\n        setValue(value) {\n            if (value !== this.valueState) {\n                let previousValue = this.valueState;\n                this.valueState = value;\n                this.$emit('update:modelValue', this.valueState);\n                this.$emit('valueChange', {\n                    currentValue: this.valueState,\n                    previousValue: previousValue\n                });\n                this.afterValueChange();\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n        },\n        focus() {\n            if (this.$refs.inputRef) {\n                this.$refs.inputRef.focus();\n            }\n            this.focused = true;\n            this.$emit('focus');\n            this.afterFocus();\n        },\n        blur() {\n            if (this.$refs.inputRef) {\n                this.$refs.inputRef.blur();\n            }\n            this.focused = false;\n            this.$emit('blur');\n            this.afterBlur();\n        },\n        getSelectionStart() {\n            return this.getSelectionRange().start;\n        },\n        getSelectionRange() {\n            let start = 0;\n            let end = 0;\n            let target = this.$refs.inputRef;\n            if (typeof target.selectionStart == 'number') {\n                start = target.selectionStart;\n                end = target.selectionEnd;\n            }\n            return { start: start, end: end };\n        },\n        setSelectionRange(start, end) {\n            let target = this.$refs.inputRef;\n            if (target.setSelectionRange) {\n                target.setSelectionRange(start, end);\n            } else if (target.createTextRange) {\n                var range = target.createTextRange();\n                range.collapse();\n                range.moveEnd('character', end);\n                range.moveStart('character', start);\n                range.select();\n            }\n        },\n        renderInput() {\n            const pp = {\n                class: this.inputClasses,\n                style: this.inputStyle,\n                value: this.text,\n                id: this.inputId,\n                disabled: this.disabled ? 'disabled' : null,\n                readonly: (this.readonly || !this.editable) ? 'readonly' : null,\n                tabindex: this.tabindex,\n                placeholder: this.placeholder,\n                onInput: this.onInput,\n                onFocus: this.focus,\n                onBlur: this.blur\n            }\n            return (\n                <>\n                    {!this.multiline && <input ref=\"inputRef\" autocomplete=\"off\" {...pp}></input>}\n                    {this.multiline && <textarea ref=\"inputRef\" autocomplete=\"off\" {...pp}></textarea>}\n                    <input class=\"textbox-value\" type=\"hidden\" value={this.valueState} disabled={this.disabled ? 'disabled' : null}></input>\n                </>\n            )\n        },\n        renderAddon() {\n            return (\n                <>\n                    {this.$slots.default && this.$slots.default()}\n                    {\n                        this.iconCls &&\n                        <span ref=\"addonRef\" class={this.addonClasses}>\n                            <span class={this.addonIconClasses}></span>\n                        </span>\n                    }\n                </>\n            )\n        },\n        renderOthers() {\n            return null;\n        },\n        renderField() {\n            return (\n                <span class={this.baseClasses}>\n                    {this.renderInput()}\n                    {this.renderAddon()}\n                    {this.renderOthers()}\n                </span>\n            )\n        }\n\n    }\n})","﻿import domHelper from '../base/DomHelper';\nimport InputBase from './InputBase';\n\nexport default {\n    name: 'ComboBase',\n    extends: InputBase,\n    props: {\n        hasDownArrow: {\n            type: Boolean,\n            default: true\n        },\n        arrowIconCls: {\n            type: String,\n            default: 'combo-arrow'\n        },\n        arrowAlign: {\n            type: String,\n            default: 'right'\n        },\n        panelAlign: {\n            type: String,\n            default: 'left'\n        },\n        panelStyle: Object,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        separator: {\n            type: String,\n            default: ','\n        },\n        delay: {\n            type: Number,\n            default: 200\n        },\n        cls: String\n    },\n    data() {\n        return {\n            panelClosed: true,\n            panelLeft: 0,\n            panelTop: 0,\n            scrollTop: 0\n        }\n    },\n    computed: {\n        baseClasses() {\n            return ['textbox f-inline-row combo f-field', this.cls, {\n                'textbox-disabled': this.disabled,\n                'textbox-readonly': this.readonly,\n                'textbox-focused': this.focused,\n                'textbox-invalid': this.invalidState\n            }];\n        },\n        arrowClasses() {\n            return ['textbox-addon f-column f-noshrink', {\n                'f-order0': this.arrowAlign == 'left',\n                'f-order6': this.arrowAlign == 'right'\n            }];\n        }\n    },\n    mounted() {\n        domHelper.bind(document, 'click', this.onDocumentClick);\n        domHelper.bind(document, 'mousewheel', this.onDocumentMouseWheel);\n    },\n    beforeUnmount() {\n        if (this.$refs.panelRef) {\n            this.$el.appendChild(this.$refs.panelRef);\n        }\n        domHelper.unbind(document, 'click', this.onDocumentClick);\n        domHelper.unbind(document, 'mousewheel', this.onDocumentMouseWheel);\n    },\n    methods: {\n        onDocumentClick(event) {\n            if (!this.disabled && !this.editable) {\n                if (domHelper.isChild(event.target, this.$refs.inputRef)) {\n                    event.stopPropagation();\n                    this.togglePanel();\n                    return false;\n                }\n            }\n            if (this.$refs.panelRef) {\n                event.stopPropagation();\n                if (domHelper.isChild(event.target, this.$el)) {\n                    return false;\n                }\n                if (!domHelper.isChild(event.target, this.$refs.panelRef)) {\n                    this.closePanel();\n                }\n            }\n        },\n        onDocumentMouseWheel(event) {\n            if (this.$refs.panelRef) {\n                event.stopPropagation();\n                if (domHelper.isChild(event.target, this.$refs.panelRef)) {\n                    //return false;\n                } else {\n                    this.closePanel();\n                }\n            }\n        },\n        togglePanel() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            this.panelClosed ? this.openPanel() : this.closePanel();\n            this.focus();\n        },\n        alignPanel() {\n            let view = domHelper.getViewport();\n            let pos = domHelper.offset(this.$el);\n            let hwidth = domHelper.outerWidth(this.$el);\n            let pwidth = domHelper.outerWidth(this.$refs.panelRef);\n            let hheight = domHelper.outerHeight(this.$el);\t// host height\n            let pheight = domHelper.outerHeight(this.$refs.panelRef);\t\t// panel height\n            let left = pos.left;\n            if (this.panelAlign == 'right') {\n                left += hwidth - pwidth;\n            }\n            if (left + pwidth > view.width + domHelper.getScrollLeft()) {\n                left = view.width + domHelper.getScrollLeft() - pwidth;\n            }\n            if (left < 0) {\n                left = 0;\n            }\n            let top = pos.top + hheight;\n            if (top + pheight > view.height + domHelper.getScrollTop()) {\n                top = pos.top - pheight;\n            }\n            if (top < domHelper.getScrollTop()) {\n                top = pos.top + hheight;\n            }\n            this.panelTop = top;\n            this.panelLeft = left;\n        },\n\n        openPanel() {\n            if (!this.panelClosed) {\n                return;\n            }\n            this.panelClosed = false;\n            this.alignPanel();\n            this.$nextTick(() => {\n                document.body.appendChild(this.$refs.panelRef);\n                let hwidth = domHelper.outerWidth(this.$el);\n                // let pwidth = domHelper.outerWidth(this.$refs.panelRef);\n                // if (pwidth < hwidth || !this.panelStyle || !this.panelStyle['width']){\n                //     this.$refs.panelRef.style.width = hwidth+'px';\n                // }\n                if (this.panelStyle) {\n                    if (!this.panelStyle['width']) {\n                        this.$refs.panelRef.style.width = hwidth + 'px';\n                    }\n                    if (!this.panelStyle['minWidth']) {\n                        this.$refs.panelRef.style.minWidth = hwidth + 'px';\n                    }\n                } else {\n                    this.$refs.panelRef.style.width = hwidth + 'px';\n                }\n                this.alignPanel();\n                this.$refs.panelRef.scrollTop = this.scrollTop;\n            });\n        },\n        closePanel() {\n            if (!this.panelClosed) {\n                this.scrollTop = this.$refs.panelRef.scrollTop;\n                this.panelClosed = true;\n            }\n        },\n        renderArrow() {\n            if (!this.hasDownArrow) {\n                return null;\n            }\n            return (\n                <span ref=\"arrowRef\" class={this.arrowClasses} onClick={this.togglePanel}>\n                    <span class={this.arrowIconCls + ' textbox-icon f-full'}></span>\n                </span>\n            )\n        },\n        renderPanel() {\n            if (this.panelClosed) {\n                return null;\n            }\n            const style = Object.assign({}, this.panelStyle, {\n                left: this.panelLeft + 'px',\n                top: this.panelTop + 'px'\n            })\n            return (\n                <div ref=\"panelRef\"\n                    class=\"panel-body panel-body-noheader combo-panel combo-p\"\n                    style={style}>\n                    <div className=\"f-column\" style={{ height: '100%', overflow: 'hidden' }}>\n                        <div className=\"f-full f-column scroll-body\">\n                            {this.renderContent()}\n                        </div>\n                        {this.$slots['footer'] && this.$slots['footer']()}\n                    </div>\n                </div>\n            )\n        },\n        renderContent() {\n            return null;\n        },\n        renderOthers() {\n            return (\n                <>\n                    {this.renderArrow()}\n                    {this.renderPanel()}\n                </>\n            )\n        }\n    }\n}","﻿export class DateHelper {\n\n\tparseSelections(format) {\n\t\tlet selections = [];\n\t\tlet formatTokens = format.split(/[^A-Za-z]/);\n\t\tlet start = 0;\n\t\tlet end = 0;\n\t\tfor(let token of formatTokens){\n\t\t\tif (token){\n\t\t\t\tend += token.length;\n\t\t\t\tselections.push([start, end]);\n\t\t\t\tstart = end + 1;\n\t\t\t\tend = start;\n\t\t\t} else {\n\t\t\t\tstart++;\n\t\t\t\tend++;\n\t\t\t}\n\t\t}\n\t\treturn selections;\n\t}\n\n\tparseDate(value, format) {\n\t\tif (!value){\n\t\t\treturn null;\n\t\t}\n\t\tlet formatTokens = format.split(/[^A-Za-z]/).filter(t => t);\n\t\tlet dateTokens = value.split(/[^A-Za-z0-9]/).filter(t => t);\n\t\tlet date = new Date();\n\t\tdate.setHours(0);\n\t\tdate.setMinutes(0);\n\t\tdate.setSeconds(0);\n\t\tdate.setMilliseconds(0);\n\n\t\tlet parser = {\n\t\t\tdd:   (value) => date.setDate(value),\n\t\t\td:    (value) => date.setDate(value),\n\t\t\tMM:   (value) => date.setMonth(+value - 1),\n\t\t\tM:    (value) => date.setMonth(+value - 1),\n\t\t\tyyyy: (value) => date.setFullYear(value),\n\t\t\tyy:   (value) => {\n\t\t\t\tvalue = +value;\n\t\t\t\tlet year = new Date().getFullYear();\n\t\t\t\tif (value + 2000 - year < 20){\n\t\t\t\t\tvalue += 2000;\n\t\t\t\t} else {\n\t\t\t\t\tvalue += 1900;\n\t\t\t\t}\n\t\t\t\tdate.setFullYear(value);\n\t\t\t},\n\t\t\tHH:   (value) => date.setHours(value),\n\t\t\tH:    (value) => date.setHours(value),\n\t\t\tmm:   (value) => date.setMinutes(value),\n\t\t\tss:   (value) => date.setSeconds(value),\n\t\t\tSSS:  (value) => date.setMilliseconds(value),\n\t\t\tSS:   (value) => date.setMilliseconds(value),\n\t\t\tS:    (value) => date.setMilliseconds(value)\n\t\t};\n\n\t\tfor(let i=0; i<formatTokens.length; i++){\n\t\t\tlet formatToken = formatTokens[i];\n\t\t\tlet dateToken = dateTokens[i];\n\t\t\tlet f = parser[formatToken];\n\t\t\tif (f){\n\t\t\t\tf(+dateToken || 0);\n\t\t\t}\n\t\t}\n\n\t\treturn date;\n\t}\n\n\tformatDate(date, format) {\n\t\tif (!date) {\n\t\t\treturn '';\n\t\t}\n\t\tlet formatN = (value) => {\n\t\t\treturn value < 10 ? '0' + value : value;\n\t\t};\n\t\tlet formatter = {\n\t\t\tdd:   () => formatN(date.getDate()),\n\t\t\td:    () => date.getDate(),\n\t\t\tMM:   () => formatN(date.getMonth() + 1),\n\t\t\tM:    () => date.getMonth() + 1,\n\t\t\tyyyy: () => date.getFullYear(),\n\t\t\tyy:   () => String(date.getFullYear()).substr(2, 2),\n\t\t\tHH:   () => formatN(date.getHours()),\n\t\t\tmm:   () => formatN(date.getMinutes()),\n\t\t\tss:   () => formatN(date.getSeconds()),\n\t\t\tSSS:  () => formatN(date.getMilliseconds()),\n\t\t\tSS:   () => formatN(date.getMilliseconds()),\n\t\t\tS:    () => date.getMilliseconds()\n\t\t};\n\t\treturn format.replace(/dd|d|M{1,4}|yyyy|yy|HH|mm|ss|S{1,3}|E{3,4}/g, (match) => {\n\t\t\tlet f = formatter[match];\n\t\t\treturn f ? f() : match;\n\t\t});\n\t}\n}\nexport default new DateHelper();\n","﻿export class TreeHelper {\n    constructor(){\n\t\tthis.cascadeCheck = true;\n\t\tthis.$vue = null;\n\t}\n\n\tsetCheckState(node, checkState){\n\t\tif (this.$vue){\n\t\t\tnode.checkState = checkState;\n\t\t\t// this.$vue.$set(node, 'checkState', checkState);\n\t\t} else {\n\t\t\tnode.checkState = checkState;\n\t\t}\n\t}\n\n\tcheckNode(node, callback){\n\t\tif (node.checkState != 'checked'){\n\t\t\tthis.setCheckState(node, 'checked');\n\t\t\tif (this.cascadeCheck){\n\t\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\t\tthis.setParentCheckbox(node);\n\t\t\t}\n\t\t\tcallback(node);\n\t\t}\n\t}\n\n\tuncheckNode(node, callback){\n\t\tif (node.checkState != 'unchecked'){\n\t\t\tthis.setCheckState(node, 'unchecked');\n\t\t\tif (this.cascadeCheck){\n\t\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\t\tthis.setParentCheckbox(node);\n\t\t\t}\n\t\t\tcallback(node);\n\t\t}\n\t}\n\n\tuncheckAllNodes(nodes, callback){\n\t\tlet changed = false;\n\t\tthis.forNodes(nodes, (node) => {\n\t\t\tif (node.checkState != 'unchecked'){\n\t\t\t\tthis.setCheckState(node, 'unchecked');\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t});\n\t\tif (changed){\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tsetParentCheckbox(node){\n\t\tlet pnode = node.parent;\n\t\tif (pnode){\n\t\t\tthis.setCheckState(pnode, this.calcNodeState(pnode));\n\t\t\tthis.setParentCheckbox(pnode);\n\t\t}\n\t}\n\n\tsetChildCheckbox(node, checkState){\n\t\tthis.setCheckState(node, checkState);\n\t\tif (node.children){\n\t\t\tfor(let cnode of node.children){\n\t\t\t\tthis.setChildCheckbox(cnode, checkState);\n\t\t\t}\n\t\t}\n\t}\n\n\tadjustCheck(node) {\n\t\tif (!this.cascadeCheck){\n\t\t\treturn;\n\t\t}\n\t\tif (node.checkState == 'checked'){\n\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\tthis.setParentCheckbox(node);\n\t\t} else if (node.checkState == 'unchecked'){\n\t\t\tthis.setChildCheckbox(node, node.checkState);\n\t\t\tthis.setParentCheckbox(node);\n\t\t} else {\n\t\t\tthis.setCheckState(node, this.calcNodeState(node));\n\t\t\tthis.setParentCheckbox(node);\n\t\t}\n\t}\n\n\tcalcNodeState(node) {\n\t\tlet count = node.children ? node.children.length : 0;\n\t\tif (count){\n\t\t\tlet checkedCount = 0;\n\t\t\tlet uncheckedCount = 0;\n\t\t\tfor(let cnode of node.children){\n\t\t\t\tthis.setCheckState(cnode, cnode.checkState || 'unchecked');\n\t\t\t\tif (cnode.checkState == 'checked'){\n\t\t\t\t\tcheckedCount ++;\n\t\t\t\t} else if (cnode.checkState == 'unchecked'){\n\t\t\t\t\tuncheckedCount ++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedCount == count){\n\t\t\t\treturn 'checked';\n\t\t\t} else if (uncheckedCount == count){\n\t\t\t\treturn 'unchecked';\n\t\t\t} else {\n\t\t\t\treturn 'indeterminate';\n\t\t\t}\n\t\t}\n\t\treturn 'unchecked';\n\t}\n\n\tforNodes(fromNodes, callback){\n\t\tfromNodes = fromNodes || [];\n\t\tlet nodes = [];\n\t\tfor(let i=0; i<fromNodes.length; i++){\n\t\t\tnodes.push(fromNodes[i]);\n\t\t}\n\t\twhile(nodes.length){\n\t\t\tlet node = nodes.shift();\n\t\t\tif (callback(node) == false){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (node.children){\n\t\t\t\tfor(let i=node.children.length-1; i>=0; i--){\n\t\t\t\t\tnode.children[i].parent = node;\n\t\t\t\t\tnodes.unshift(node.children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfindNode(nodes, field, value){\n\t\tlet node = null;\n\t\tthis.forNodes(nodes, (n) => {\n\t\t\tif (n[field] == value){\n\t\t\t\tnode = n;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n}\n\nexport default new TreeHelper();\n","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\n\nexport default defineComponent({\n    name: 'GridColumn',\n    props: {\n        field: String,\n        title: String,\n        width: [Number, String],\n        rowspan: {\n            type: [Number, String],\n            default: 1\n        },\n        colspan: {\n            type: [Number, String],\n            default: 1\n        },\n        hidden: {\n            type: Boolean,\n            default: false\n        },\n        sortable: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        editRules: [Array,Object,String],\n        editMessages: Object,\n        order: {\n            type: String,\n            default: 'asc'\n        },\n        frozen: {\n            type: Boolean,\n            default: false\n        },\n        align: String,\n        halign: String,\n        sorter: Function,\n        headerCls: String,\n        headerStyle: Object,\n        cellCss: [String,Object,Function],\n        expander: {\n            type: Boolean,\n            default: false\n        },\n        filterable: {\n            type: Boolean,\n            default: true\n        },\n        filterOperators: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            grid: null,\n            widthState: 0,\n            frozenState: this.frozen,\n            currOrder: null,\n            filterOperator: 'contains',\n            filterValue: null,\n            isFiltering: false\n        }\n    },\n    watch: {\n        filterValue(){\n            this.doFilter();\n        },\n        hidden(){\n            this.grid.initColumns();\n        }\n    },\n    mounted() {\n        this.widthState = domHelper.toStyleValue(this.width);\n        this.$parent.addColumn(this);\n    },\n    beforeUnmount(){\n        this.$parent.removeColumn(this);\n    },\n    render() {\n        return '';\n    },\n    methods: {\n        doFilter(){\n            if (this.isFiltering){\n                return;\n            }\n            this.isFiltering = true;\n            setTimeout(() => {\n                if (this.filterValue == '' || this.filterValue == null){\n                    // this.filterOperator = null;\n                    this.grid.removeFilterRule(this.field);\n                    this.grid.doFilter();\n                } else if (this.filterOperator){\n                    this.grid.addFilterRule({\n                        field: this.field,\n                        op: this.filterOperator,\n                        value: this.filterValue\n                    });\n                    this.grid.doFilter();\n                }\n                this.isFiltering = false;\n            }, this.grid.filterDelay);\n        }\n    }\n})","﻿import { defineComponent } from 'vue';\n\nexport default defineComponent({\n    name: 'GridHeaderRow',\n    data() {\n        return {\n            columns: [],\n            timer: null\n        }\n    },\n    watch: {\n        columns() {\n            clearTimeout(this.timer);\n            this.timer = setTimeout(() => {\n                this.$parent.$parent.initColumns()\n                this.$parent.$parent.initHeaderHeight()\n                this.timer = null;\n            })\n        }\n    },\n    mounted() {\n        this.$parent.addRow(this);\n    },\n    beforeUnmount() {\n        this.$parent.removeRow(this);\n    },\n    methods: {\n        addColumn(column) {\n            const cc = this.columns.slice();\n            cc.push(column);\n            this.columns = cc;\n        },\n        removeColumn(column) {\n            const cc = this.columns.slice();\n            let index = cc.indexOf(column);\n            if (index >= 0) {\n                cc.splice(index, 1);\n                this.columns = cc;\n            }\n        },\n\n    },\n    render(){\n        return (\n            <div>{this.$slots.default()}</div>\n        )\n    }\n})","﻿import {h} from 'vue';\nimport GridColumn from \"./GridColumn\";\n\nexport default {\n    name: 'GridHeaderCell',\n    props: {\n        column: GridColumn\n    },\n    render(){\n        let cell = null;\n        // if (this.column.$slots.header){\n        //     cell = this.column.$slots.header;\n        // } else if (this.column.$scopedSlots.header){\n        //     cell = this.column.$scopedSlots.header({column:this.column});\n        // } else {\n        //     cell = h('span', this.column.title);\n        // }\n        if (this.column.$slots['header']){\n            cell = this.column.$slots['header']({column:this.column})\n        } else {\n            cell = <span>{this.column.title}</span>\n        }\n        return h(\n            'div',\n            {\n                'class':{\n                    'datagrid-cell':true,\n                    'datagrid-sort':this.column.field && this.column.sortable,\n                    'datagrid-sort-asc':this.column.currOrder=='asc',\n                    'datagrid-sort-desc':this.column.currOrder=='desc'\n                },\n                'style':{\n                    'text-align':this.column.halign || this.column.align || null\n                }\n            },\n            [\n                cell,\n                h('span', {class:'datagrid-sort-icon'})\n            ]\n        )\n    }\n}","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\nimport ComboBase from '../base/ComboBase';\nimport DataList from '../datalist/DataList';\nimport { FieldBase } from '../base';\n\nexport default defineComponent({\n    name: 'ComboBox',\n    extends: ComboBase,\n    components: {\n        DataList\n    },\n    props: {\n        value: [String, Number, Array],\n        valueField: {\n            type: String,\n            default: 'value'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        },\n        groupField: String,\n        limitToList: {\n            type: Boolean,\n            default: true\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        rowHeight: {\n            type: Number,\n            default: 30\n        },\n        pageNumber: {\n            type: Number,\n            default: 1\n        },\n        pageSize: {\n            type: Number,\n            default: 10\n        },\n        total: {\n            type: Number,\n            default: 0\n        },\n        data: {\n            type: Array,\n            default: () => []\n        },\n        filter: Function\n    },\n    data() {\n        return {\n            mappingTexts: {},\n            datalistScrollTop: 0,\n            scrollPosition: null,\n            inputingText: null,\n            displayingText: null,\n            lastFilterValue: null,\n            innerData: [],\n            items: [],\n            totalState: this.total,\n            selection: null,\n            timer: null\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n                const ftext = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n                this.setText(ftext);\n                // this.textState = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n            }\n            return this.textState;\n        }\n    },\n    watch: {\n        total(value) {\n            this.totalState = value;\n        },\n        data(value) {\n            this.setData(value);\n            this.initTextMapping();\n        }\n    },\n    mounted() {\n        domHelper.bind(this.$el, 'keydown', this.onKeyDown);\n        this.setData(this.data);\n        // this.$on('valueChange', () => {\n        //     this.updateText();\n        // });\n        // this.$on('blur', this.onBlur);\n        this.initTextMapping();\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$el, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        afterValueChange() {\n            FieldBase.methods.afterValueChange.call(this)\n            this.updateText();\n        },\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            this.onBlur();\n        },\n        defaultFilter(q, item) {\n            let index = String(item[this.textField]).toLowerCase().indexOf(q.trim().toLowerCase());\n            return index === -1 ? false : true;\n        },\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            this.innerData = Object.assign([], value);\n            this.items = this.innerData;\n            this.updateText();\n        },\n        setText(value) {\n            this.textState = value;\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n\n        },\n        onKeyDown(event) {\n            if (this.panelClosed && event.which == 40) {\n                this.openPanel();\n                event.preventDefault();\n                return;\n            }\n            switch (event.which) {\n                case 40:\t// down\n                    this.$refs.datalist.navRow(1);\n                    event.preventDefault();\n                    break;\n                case 38:\t// up\n                    this.$refs.datalist.navRow(-1);\n                    event.preventDefault();\n                    break;\n                case 13:\t// enter\n                    if (this.$refs.datalist && this.$refs.datalist.highlightRow) {\n                        this.$refs.datalist.doEnter();\n                        if (!this.multiple) {\n                            this.closePanel();\n                        }\n                        this.textState = this.displayingText;\n                    }\n                    event.preventDefault();\n                    break;\n                case 9:\t\t// tab\n                    this.fixValue();\n                    this.closePanel();\n                    break;\n                case 27:\t// escape\n                    this.closePanel();\n                    this.textState = this.displayingText;\n                    event.preventDefault();\n                    break;\n            }\n        },\n        onBlur() {\n            if (!this.panelClosed) {\n                this.fixValue();\n            }\n        },\n        fixValue() {\n            if (this.inputingText == null) {\n                return;\n            }\n            let text = this.inputingText.trim();\n            if (!text) {\n                this.setValue(null);\n                this.clearSelections();\n                return;\n            }\n            if (this.multiple) {\n                let vv = [];\n                let used = [];\n                let tt = text.split(this.separator).filter(t => t.trim() != '');\n                for (let val of (this.valueState || [])) {\n                    let text = this.mappingTexts[val];\n                    if (tt.indexOf(text) != -1) {\n                        vv.push(val);\n                        used.push(text);\n                    }\n                }\n                if (!this.limitToList) {\n                    tt = tt.filter(t => used.indexOf(t) == -1);\n                    if (tt.length) {\n                        vv = vv.concat(tt);\n                    }\n                }\n                if ((this.valueState || []).join('') != vv.join('')) {\n                    this.setValue(vv);\n                }\n            } else {\n                if (this.inputingText != this.displayingText) {\n                    this.clearSelections();\n                    this.setValue(this.limitToList ? null : this.inputingText);\n                }\n            }\n            this.inputingText = null;\n        },\n        doFilter(value) {\n            if (this.lastFilterValue == value) {\n                return;\n            }\n            // this.$refs.datalist.scrollTop(0);\n            value = (value || '').trim();\n            if (!this.lazy) {\n                if (value) {\n                    let val = value;\n                    if (this.multiple) {\n                        let tt = value.split(this.separator);\n                        val = tt[tt.length - 1] || '';\n                    }\n                    this.items = this.innerData.filter(item => {\n                        return (this.filter || this.defaultFilter).call(this, val.trim(), item)\n                    });\n                } else {\n                    this.items = this.innerData;\n                }\n                this.totalState = this.items.length;\n                this.$nextTick(() => {\n                    if (this.$refs.datalist) {\n                        this.$refs.datalist.highlightFirstRow();\n                    }\n                });\n            }\n            this.lastFilterValue = value;\n            this.$emit('filterChange', {\n                pageNumber: 1,\n                pageSize: this.pageSize,\n                filterValue: value\n            });\n        },\n        openPanel() {\n            ComboBase.methods.openPanel.call(this);\n            if (this.editable && !this.focused) {\n                this.doFilter('');\n            }\n            // setTimeout(() => {\n            //     // this.$refs.datalist.scrollTop(this.datalistScrollTop);\n            //     this.$refs.datalist.scrollToSelectedRow();\n            // },20)\n        },\n        closePanel() {\n            if (!this.panelClosed) {\n                this.scrollPosition = this.$refs.datalist.scrollTop();\n                this.datalistScrollTop = this.$refs.datalist.scrollTop();\n                ComboBase.methods.closePanel.call(this);\n            }\n        },\n        onRowClick() {\n            if (!this.multiple) {\n                this.closePanel();\n            }\n        },\n        onSelectionChange(event) {\n            // this.$emit('selectionChange', event);\n            this.inputingText = null;\n            if (event == null) {\n                this.setValue(null);\n                this.selection = null;\n                return;\n            }\n            if (this.multiple) {\n                this.setValue(event.map(row => row[this.valueField]));\n            } else {\n                this.setValue(event[this.valueField]);\n            }\n            // this.selection = event;\n        },\n        onPageChange(event) {\n            this.$emit('filterChange', Object.assign(event, {\n                filterValue: this.lastFilterValue\n            }));\n        },\n        initTextMapping() {\n            if (this.selectionValue) {\n                if (this.selectionValue instanceof Array) {\n                    this.selectionValue.forEach(row => {\n                        let v = row[this.valueField];\n                        let t = row[this.textField];\n                        this.mappingTexts[v] = t;\n                    });\n                } else {\n                    let v = this.selectionValue[this.valueField];\n                    let t = this.selectionValue[this.textField];\n                    this.mappingTexts[v] = t;\n                }\n            }\n        },\n        updateText() {\n            if (this.valueState == null) {\n                if (this.$refs.datalist) {\n                    this.mappingTexts = {};\n                }\n                this.displayingText = null;\n                this.updateSelection(null);\n            } else {\n                let mt = {};\n                let tt = [];\n                if (this.multiple) {\n                    let rows = [];\n                    for (let i = 0; i < this.valueState.length; i++) {\n                        let val = this.valueState[i];\n                        let item = this.findItem(val);\n                        if (item) {\n                            mt[val] = item[this.textField];\n                            rows.push(item);\n                        } else {\n                            mt[val] = this.mappingTexts[val] || val;\n                            let row = {};\n                            row[this.valueField] = val;\n                            row[this.textField] = mt[val];\n                            rows.push(row);\n                        }\n                        tt.push(mt[val]);\n                    }\n                    this.updateSelection(rows);\n                } else {\n                    let item = this.findItem(this.valueState);\n                    if (item) {\n                        mt[this.valueState] = item[this.textField];\n                        this.updateSelection(item);\n                    } else {\n                        mt[this.valueState] = this.mappingTexts[this.valueState] || this.valueState;\n                        let row = {};\n                        row[this.valueField] = this.valueState;\n                        row[this.textField] = mt[this.valueState];\n                        this.updateSelection(row);\n                    }\n                    tt.push(mt[this.valueState]);\n                }\n                this.mappingTexts = mt;\n                this.displayingText = tt.join(this.separator);\n            }\n        },\n\n        findItem(value) {\n            let finder = (value, items = null) => {\n                if (!items) {\n                    items = this.data || [];\n                }\n                for (let item of items) {\n                    if (item[this.valueField] == value) {\n                        return item;\n                    }\n                }\n                return null;\n            };\n\n            let item = finder(value);\n            if (!item && this.selection) {\n                let items = this.selection instanceof Array ? this.selection : [this.selection];\n                item = finder(value, items);\n            }\n            return item;\n        },\n        updateSelection(rows) {\n            if (!rows) {\n                rows = [];\n            } else {\n                rows = rows instanceof Array ? rows : [rows];\n            }\n\n            const oldSelection = this.selection;\n            // let items = [];\n            // if (this.selection){\n            //     items = this.selection instanceof Array ? this.selection : [this.selection];\n            // }\n            if (this.multiple) {\n                this.selection = rows;\n            } else {\n                this.selection = rows[0] || null;\n            }\n            // if (items.length != rows.length){\n            //     this.$emit('selectionChange', this.selection);\n            // }\n            if (this.selection != oldSelection) {\n                this.$emit('selectionChange', this.selection);\n            }\n        },\n        clearSelections() {\n            if (this.selection) {\n                if (this.multiple) {\n                    if (this.selection.length) {\n                        this.selection = [];\n                        this.$emit('selectionChange', this.selection);\n                    }\n                } else {\n                    this.selection = null;\n                    this.$emit('selectionChange', this.selection);\n                }\n            }\n        },\n        renderContent() {\n            const listslots = {\n                default: (scope) => this.$slots['item'] ? this.$slots['item'](scope) : scope.row[this.textField],\n                empty: this.$slots['empty']\n            }\n            return (\n                <DataList ref=\"datalist\" class=\"f-full\" style=\"height:100%\" itemCls=\"combobox-item\" hoverCls=\"combobox-item-hover\" selectedCls=\"combobox-item-selected\"\n                    border={false}\n                    data={this.items}\n                    lazy={this.lazy}\n                    virtualScroll={this.virtualScroll}\n                    total={this.totalState}\n                    pageNumber={this.pageNumber}\n                    pageSize={this.pageSize}\n                    rowHeight={this.rowHeight}\n                    selectionMode={this.multiple ? 'multiple' : 'single'}\n                    idField={this.valueField}\n                    selection={this.selection}\n                    scrollPosition={this.scrollPosition}\n                    onRowClick={this.onRowClick}\n                    onSelectionChange={this.onSelectionChange}\n                    onPageChange={this.onPageChange}\n                    v-slots={listslots}>\n                </DataList>\n            )\n        }\n    }\n})","﻿import ComboBox from '../combobox/ComboBox';\n\nexport default {\n    name: 'GridFilterButton',\n    extends: ComboBox,\n    props: {\n        arrowIconCls: {\n            type: String,\n            default: 'icon-filter'\n        },\n        panelStyle: {\n            type: Object,\n            default: () => { return { height: 'auto', width: '150px' } }\n        },\n        inputStyle: {\n            type: Object,\n            default: () => { return { display: 'none' } }\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        column: Object\n    },\n    mounted() {\n        this.$nextTick(() => this.initData());\n    },\n    methods: {\n        initData() {\n            if (this.column.filterOperators && this.column.filterOperators.length) {\n                let filterOperators = this.column.grid.filterOperators;\n                let data = this.column.filterOperators.map(op => {\n                    return {\n                        value: op,\n                        text: filterOperators[op].text\n                    };\n                });\n                this.setData(data);\n                let rule = this.column.grid.getFilterRule(this.column.field);\n                if (rule) {\n                    this.column.filterOperator = rule.op;\n                } else {\n                    this.column.filterOperator = null;\n                }\n            }\n\n        },\n        onSelectionChange(event) {\n            ComboBox.methods.onSelectionChange.call(this, event)\n            if (!event) {\n                return;\n            }\n            let value = event.value;\n            if (!value) {\n                this.column.filterOperator = null;\n                this.column.filterValue = null;\n                this.column.grid.removeFilterRule(this.column.field);\n                return;\n            }\n            if (value == 'nofilter') {\n                this.column.filterOperator = null;\n                this.column.filterValue = null;\n                this.column.grid.removeFilterRule(this.column.field);\n                this.column.grid.doFilter();\n            } else if (this.column.filterValue != null && this.column.filterValue != '') {\n                this.column.filterOperator = value;\n                this.column.grid.addFilterRule({\n                    field: this.column.field,\n                    op: value,\n                    value: this.column.filterValue\n                });\n                this.column.grid.doFilter();\n            }\n        }\n    }\n}","﻿import { h } from 'vue';\nimport GridColumn from \"./GridColumn\";\nimport GridFilterButton from './GridFilterButton';\n\nexport default {\n    name: 'GridFilterCell',\n    components: {\n        GridFilterButton\n    },\n    props: {\n        column: GridColumn,\n        grid: Object\n    },\n    computed: {\n        filterValue() {\n            return this.column.filterValue;\n        }\n    },\n    watch: {\n        'column.filterValue'(value) {\n            if (this.$refs.input) {\n\n                this.$refs.input.value = value;\n            }\n        }\n    },\n    methods: {\n        isOnLeft() {\n            if (this.column.filterOperators && this.column.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'left') {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnRight() {\n            if (this.column.filterOperators && this.column.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'right') {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    },\n    render() {\n        let leftButton = '';\n        if (this.isOnLeft()) {\n            rightButton = (\n                <GridFilterButton class=\"datagrid-filter-btn datagrid-filter-btn-left f-noshrink\"\n                    column={this.column}\n                    value={this.column.filterOperator}\n                />\n            )\n        }\n        let rightButton = '';\n        if (this.isOnRight()) {\n            rightButton = (\n                <GridFilterButton class=\"datagrid-filter-btn datagrid-filter-btn-right f-noshrink\"\n                    column={this.column}\n                    value={this.column.filterOperator}\n                />\n            )\n        }\n\n        let cell = null;\n        if (this.column.$slots['filter']) {\n            cell = this.column.$slots['filter']({ column: this.column });\n            // } else if (this.column.$scopedSlots.filter){\n            //     cell = this.column.$scopedSlots.filter({column:this.column});\n        } else {\n            cell = (\n                <input\n                    ref=\"input\"\n                    class=\"datagrid-editable-input datagrid-filter f-full\"\n                    value={this.column.filterValue}\n                    onInput={event=>{\n                        this.column.filterValue = event.target.value;\n                    }}\n                />\n            )\n        }\n        return h(\n            'div',\n            {\n                'class': 'datagrid-filter-c f-row'\n            },\n            [\n                leftButton, cell, rightButton\n            ]\n        )\n    }\n}","﻿import GridFilterCell from './GridFilterCell';\n\nexport default {\n    name: 'GridFilterRow',\n    components: {\n        GridFilterCell\n    },\n    props: {\n        columns: Array,\n        grid: Object\n    },\n    methods1: {\n        isOnLeft(col) {\n            if (col.filterOperators && col.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'left') {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnRight(col) {\n            if (col.filterOperators && col.filterOperators.length) {\n                if (this.grid.filterBtnPosition == 'right') {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    },\n    render() {\n        return (\n            <tr class=\"datagrid-header-row datagrid-filter-row\">\n                {\n                    this.columns.map(col => (\n                        <td>\n                            <GridFilterCell column={col} grid={this.grid}></GridFilterCell>\n                        </td>\n                    ))\n                }\n            </tr>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport { MyEvent } from '../base/DomHelper';\n\nexport default class ResizableClass {\n    constructor(el, value=null){\n        this.updateOptions(value);\n        this.$el = el;\n\t}\n    updateOptions(value){\n        let opts = Object.assign({\n            disabled: false,\n            handles: 'all', // n, e, s, w, ne, se, sw, nw, all\n            edge: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 10000,\n            maxHeight: 10000,\n            resizeStart: () => {},\n            resizing: () => {},\n            resizeStop: () => {}\n        }, this, value||{});\n        Object.assign(this, opts);\n    }\n    bindEvents(){\n\t\tthis.$el._downHandler = (e) => {\n\t\t\tthis.onMouseDown(e);\n\t\t};\n        this.$el._moveHandler = (e) => {\n            this.onMouseMove(e);\n        };\n        this.$el._leaveHandler = (e) => {\n            this.onMouseLeave(e);\n        };\n        domHelper.bind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.bind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.bind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tunbindEvents(){\n        domHelper.unbind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tparseEvent(event) {\n\t\t// let touchEvents = ['touchstart','touchmove','touchend','touchcancel'];\n\t\t// if (touchEvents.indexOf(event.type) >= 0){\n\t\t// \tlet touch = event.touches[0] || event.changedTouches[0];\n\t\t// \tevent.pageX = touch.pageX;\n\t\t// \tevent.pageY = touch.pageY;\n\t\t// }\n\t\t// return event;\n\t\treturn new MyEvent(event);\n\t}\n\tonMouseDown(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tlet dir = this.getDirection(event);\n\t\tif (!dir){\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tlet style = getComputedStyle(this.$el);\n\t\tthis.state = {\n\t\t\ttarget: this.$el,\n\t\t\tdir: dir,\n\t\t\twidth: domHelper.outerWidth(this.$el),\n\t\t\theight: domHelper.outerHeight(this.$el),\n\t\t\tstartWidth: domHelper.outerWidth(this.$el),\n\t\t\tstartHeight: domHelper.outerHeight(this.$el),\n\t\t\tstartX: event.pageX,\n\t\t\tstartY: event.pageY,\n\t\t\tleft: parseInt(style.left) || 0,\n\t\t\ttop: parseInt(style.top) || 0,\n\t\t\tstartLeft: parseInt(style.left) || 0,\n\t\t\tstartTop: parseInt(style.top) || 0\n\t\t};\n        this.isResizing = true;\n        document.body.style.cursor = dir ? dir+'-resize' : '';\n\t\tthis.bindDocumentEvents();\n\t\tthis.resizeStart(this.state);\n\t}\n\tonMouseMove(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tif (this.isResizing){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n        let dir = this.getDirection(event);\n\t\tthis.$el.style.cursor = dir ? dir+'-resize' : '';\n\t\tthis.$el.resizeCursor = dir ? dir+'-resize' : '';\n\t}\n\tonMouseLeave(){\n\t\tif (this.disabled){\n\t\t\treturn;\n        }\n        this.$el.style.cursor = '';\n\t\tthis.$el.resizeCursor = '';\n\t}\n\tdoMove(event){\n\t\tif (!this.isResizing){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tthis.doResize(event);\n\t\tthis.applySize();\n\t\tthis.resizing(this.state);\n\t\treturn false;\n\t}\n\tdoUp(event){\n\t\tevent = this.parseEvent(event);\n        this.isResizing = false;\n\t\tdocument.body.style.cursor = '';\n\t\tthis.doResize(event);\n\t\tthis.applySize();\n\t\tthis.unbindDocumentEvents();\n\t\tthis.resizeStop(this.state);\n\t\treturn false;\n\t}\n\tgetDirection(e) {\n\t\tlet dir = '';\n\t\tlet offset = domHelper.offset(this.$el);\n\t\tlet width = domHelper.outerWidth(this.$el);\n\t\tlet height = domHelper.outerHeight(this.$el);\n\t\tif (e.pageY > offset.top && e.pageY < offset.top + this.edge) {\n\t\t\tdir += 'n';\n\t\t} else if (e.pageY < offset.top + height && e.pageY > offset.top + height - this.edge) {\n\t\t\tdir += 's';\n\t\t}\n\t\tif (e.pageX > offset.left && e.pageX < offset.left + this.edge) {\n\t\t\tdir += 'w';\n\t\t} else if (e.pageX < offset.left + width && e.pageX > offset.left + width - this.edge) {\n\t\t\tdir += 'e';\n\t\t}\n\t\t\n\t\tlet handles = this.handles.split(',').map(h => h.trim().toLowerCase());\n\t\tif (handles.indexOf('all') >= 0 || handles.indexOf(dir) >= 0){\n\t\t\treturn dir;\n\t\t}\n\t\tfor(var i=0; i<dir.length; i++){\n\t\t\tlet index = handles.indexOf(dir.substr(i, 1));\n\t\t\tif (index >= 0){\n\t\t\t\treturn handles[index];\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\tdoResize(e) {\n\t\tlet resizeData = this.state;\n\t\tif (resizeData.dir.indexOf('e') != -1) {\n\t\t\tlet width = resizeData.startWidth + e.pageX - resizeData.startX;\n\t\t\twidth = Math.min(\n\t\t\t\t\t\tMath.max(width, this.minWidth),\n\t\t\t\t\t\tthis.maxWidth\n\t\t\t\t\t);\n\t\t\tresizeData.width = width;\n\t\t}\n\t\tif (resizeData.dir.indexOf('s') != -1) {\n\t\t\tlet height = resizeData.startHeight + e.pageY - resizeData.startY;\n\t\t\theight = Math.min(\n\t\t\t\t\tMath.max(height, this.minHeight),\n\t\t\t\t\tthis.maxHeight\n\t\t\t);\n\t\t\tresizeData.height = height;\n\t\t}\n\t\tif (resizeData.dir.indexOf('w') != -1) {\n\t\t\tlet width = resizeData.startWidth - e.pageX + resizeData.startX;\n\t\t\twidth = Math.min(\n\t\t\t\t\t\tMath.max(width, this.minWidth),\n\t\t\t\t\t\tthis.maxWidth\n\t\t\t\t\t);\n\t\t\tresizeData.width = width;\n\t\t\tresizeData.left = resizeData.startLeft + resizeData.startWidth - resizeData.width;\n\t\t}\n\t\tif (resizeData.dir.indexOf('n') != -1) {\n\t\t\tlet height = resizeData.startHeight - e.pageY + resizeData.startY;\n\t\t\theight = Math.min(\n\t\t\t\t\t\tMath.max(height, this.minHeight),\n\t\t\t\t\t\tthis.maxHeight\n\t\t\t\t\t);\n\t\t\tresizeData.height = height;\n\t\t\tresizeData.top = resizeData.startTop + resizeData.startHeight - resizeData.height;\n\t\t}\n\t}\n\n\tapplySize() {\n        this.$el.style.left = this.state.left + 'px';\n        this.$el.style.top = this.state.top + 'px';\n\t\tif (this.state.width != this.state.startWidth){\n            this.$el.style.width = this.state.width + 'px';\n\t\t}\n\t\tif (this.state.height != this.state.startHeight){\n            this.$el.style.height = this.state.height + 'px';\n\t\t}\n\t}\n\tbindDocumentEvents() {\n\t\tthis.$el._docMoveHandler = (e) => {\n\t\t\tthis.doMove(e);\n\t\t};\n\t\tthis.$el._docUpHandler = (e) => {\n\t\t\tthis.doUp(e);\n\t\t};\n\t\tdomHelper.bind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.bind(document, 'touchend', this.$el._docUpHandler);\n\t}\n\tunbindDocumentEvents() {\n\t\tdomHelper.unbind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.unbind(document, 'touchend', this.$el._docUpHandler);\n\t}\n\n}","﻿import ResizableClass from './ResizableClass';\n\nexport default {\n    name: 'Resizable',\n    mounted(el, binding){\n        el._resizeInstance = new ResizableClass(el, binding.value);\n        el._resizeInstance.bindEvents();\n    },\n    updated(el, binding){\n        el._resizeInstance.updateOptions(binding.value);\n    },\n    beforeUnmount(el){\n        el._resizeInstance.unbindEvents();\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridHeaderCell from './GridHeaderCell';\nimport GridFilterRow from './GridFilterRow';\nimport Resizable from '../resizable/Resizable';\n\nexport default {\n    name: 'GridHeader',\n    components: {\n        GridHeaderCell,\n        GridFilterRow\n    },\n    directives: {\n        Resizable\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        columnGroup: Object,\n        paddingWidth: {\n            type: Number,\n            default: 0\n        },\n        filterable: {\n            type: Boolean,\n            default: false\n        },\n        grid: Object\n    },\n    data() {\n        return {\n            heightState: 0,\n            scrollLeftState: 0,\n            hoverColumn: null,\n            dragScope: {}\n        }\n    },\n    computed: {\n        filterOnTop() {\n            if (this.grid.filterable) {\n                if (this.grid.filterPosition == 'both' || this.grid.filterPosition == 'top') {\n                    return true;\n                }\n            }\n            return false;\n        },\n        filterOnBottom() {\n            if (this.grid.filterable) {\n                if (this.grid.filterPosition == 'both' || this.grid.filterPosition == 'bottom') {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n    methods: {\n        height(value) {\n            if (value == undefined) {\n                return domHelper.outerHeight(this.$refs.contentRef);\n            } else {\n                this.heightState = value ? value - 1 : value;\n            }\n        },\n        scrollLeft(value) {\n            if (value == undefined) {\n                return this.scrollLeftState;\n            } else {\n                this.scrollLeftState = value;\n                this.$refs.headerRef.scrollLeft = value;\n            }\n        },\n        onCellClick(event, col) {\n            this.$emit('cellClick', {\n                column: col,\n                originalEvent: event\n            });\n        },\n        getResizableOpts(col) {\n            return {\n                disabled: !this.grid.columnResizing || !col.field,\n                handles: 'e',\n                resizing: (event) => { this.onColumnResizing(col, event) },\n                resizeStop: (event) => { this.onColumnResizeStop(col, event) }\n            }\n        },\n        getDraggableOpts(col) {\n            return {\n                disabled: !this.grid.columnMoving || !col.field,\n                revert: true,\n                deltaX: 0,\n                deltaY: 0,\n                edge: 5,\n                scope: this.dragScope,\n                proxy: this.$refs.proxy,\n                dragStart: (event) => { this.onColumnDragStart(col, event) }\n            }\n        },\n        getDroppableOpts(col) {\n            return {\n                field: col.field,\n                dragOver: (scope) => { this.onColumnDragOver(col, scope) },\n                dragLeave: (scope) => { this.onColumnDragLeave(col, scope) },\n                drop: (scope) => { this.onColumnDrop(col, scope) }\n            }\n        },\n        onColumnResizing(col, event) {\n            event.target.style.width = null;\n            event.target.style.left = null;\n            event.target.style.top = null;\n            this.grid.resizeColumn(col.field, event.width);\n        },\n        onColumnResizeStop(col, event) {\n            event.target.style.width = null;\n            event.target.style.left = null;\n            event.target.style.top = null;\n            this.grid.resizeColumn(col.field, event.width);\n        },\n        onColumnDragStart(col, event) {\n            Object.assign(this.dragScope, {\n                column: col,\n                event: event,\n                fromIndex: this.grid.allColumns.indexOf(col),\n                viewOffset: domHelper.offset(this.grid.$refs.viewRef)\n            })\n        },\n        onColumnDragOver(col, scope) {\n            if (!scope) {\n                return;\n            }\n            scope.toIndex = this.grid.allColumns.indexOf(col);\n            const diff = scope.fromIndex - scope.toIndex;\n            scope.point = diff === 0 ? null : (diff < 0 ? 'after' : 'before');\n            let splitStyle = null;\n            if (diff !== 0) {\n                let el = scope.event.target.currDroppable.$el;\n                let offset = domHelper.offset(el);\n                let left = offset.left - scope.viewOffset.left;\n                if (scope.toIndex !== 0) {\n                    left -= 1;\n                }\n                splitStyle = {\n                    left: domHelper.toStyleValue(diff < 0 ? left + domHelper.outerWidth(el) : left),\n                    top: 0\n                };\n            }\n            this.grid.splitStyle = splitStyle\n        },\n        onColumnDragLeave() {\n            this.grid.splitStyle = null;\n        },\n        onColumnDrop(col, scope) {\n            if (!scope) {\n                return;\n            }\n            this.dragScope = {};\n            this.$nextTick(() => {\n                if (scope.point) {\n                    this.grid.moveColumn(scope.column.field, col.field, scope.point)\n                }\n            })\n        },\n        renderGroupCells() {\n            if (!this.columnGroup) {\n                return null;\n            }\n            return (\n                <tbody>\n                    {this.filterOnTop && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                    {\n                        this.columnGroup.rows.map(row => (\n                            <tr class=\"datagrid-header-row\">\n                                {\n                                    row.columns.map(col => (\n                                        <td\n                                            v-Resizable={this.getResizableOpts(col)}\n                                            rowspan={col.rowspan}\n                                            colspan={col.colspan}\n                                            class={(col.field ? 'datagrid-field-td' : '') + (this.hoverColumn == col && col.sortable ? ' datagrid-header-over' : '')}\n                                            onMouseenter={()=>this.hoverColumn = col}\n                                            onMouseleave={()=>this.hoverColumn = null}\n                                            onClick={event => this.onCellClick(event, col)}>\n                                            <GridHeaderCell column={col}></GridHeaderCell>\n                                        </td>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                    {this.filterOnBottom && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                </tbody>\n            )\n        },\n        renderRowCells() {\n            if (this.columnGroup) {\n                return null;\n            }\n            return (\n                <tbody>\n                    {this.filterOnTop && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                    <tr class=\"datagrid-header-row\">\n                        {\n                            this.columns.map(col => (\n                                <td\n                                    v-Resizable={this.getResizableOpts(col)}\n                                    v-Draggable={this.getDraggableOpts(col)}\n                                    v-Droppable={this.getDroppableOpts(col)}\n                                    class={'datagrid-field-td' + (this.hoverColumn == col && col.sortable ? ' datagrid-header-over' : '')}\n                                    onMouseenter={() => this.hoverColumn = col}\n                                    onMouseleave={() => this.hoverColumn = null}\n                                    onClick={event => this.onCellClick(event, col)}>\n                                    <GridHeaderCell column={col}></GridHeaderCell>\n                                </td>\n                            ))\n                        }\n                    </tr>\n                    {this.filterOnBottom && <GridFilterRow columns={this.columns} grid={this.grid}></GridFilterRow>}\n                </tbody>\n            )\n        }\n    },\n    render() {\n        return (\n            <div class=\"datagrid-header f-row f-noshrink\">\n                <div ref=\"headerRef\" class=\"datagrid-header-inner f-full\" style={{ height: this.heightState + 'px' }}>\n                    <table ref=\"contentRef\" class=\"datagrid-htable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                        <colgroup>\n                            {\n                                this.columns.map(col => (\n                                    <col style={{ width: col.widthState }}></col>\n                                ))\n                            }\n                        </colgroup>\n                        {this.renderGroupCells()}\n                        {this.renderRowCells()}\n\n                    </table>\n                </div >\n                {this.paddingWidth && <div class=\"datagrid-header f-noshrink\" style={{ width: this.paddingWidth + 'px' }}></div>}\n                <DraggableProxy ref=\"proxy\">\n                    <div class=\"datagrid-moving-proxy\">{this.dragScope.column ? this.dragScope.column.title : null}</div>\n                </DraggableProxy>\n            </div >\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'GridBody',\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            scrollTopState: 0\n        }\n    },\n    methods: {\n        onScroll(){\n            this.$emit('bodyScroll', {\n                left: this.$refs.bodyRef.scrollLeft,\n                top: this.$refs.bodyRef.scrollTop\n            });\n        },\n        scrollTop(value){\n            if (value == undefined){\n                return this.scrollTopState;\n            } else {\n                this.scrollTopState = value;\n                this.$refs.bodyRef.scrollTop = value;\n            }\n        },\n        scrollbarWidth(){\n            return domHelper.outerWidth(this.$refs.bodyRef) - domHelper.outerWidth(this.$refs.innerRef);\n        }\n    }\n}","﻿\nexport default {\n    name: 'GridFooterCell',\n    props: {\n        row: Object,\n        column: Object,\n        rowIndex: Number\n    },\n    render() {\n        let cell = null;\n        if (this.column.$slots['footer']) {\n            cell = this.column.$slots['footer']({\n                row: this.row,\n                column: this.column,\n                rowIndex: this.rowIndex\n            });\n        } else {\n            cell = this.row[this.column.field];\n        }\n        return (\n            <div class=\"datagrid-cell\" style={{ textAlign: this.column.align || null }}>{cell}</div>\n        )\n    }\n}","﻿import GridFooterCell from './GridFooterCell';\n\nexport default {\n    name: 'GridFooter',\n    components: {\n        GridFooterCell\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        paddingWidth: {\n            type: Number,\n            default: 0\n        }\n    },\n    data() {\n        return {\n            scrollLeftState: 0\n        }\n    },\n    methods: {\n        scrollLeft(value) {\n            if (value == undefined) {\n                return this.scrollLeftState;\n            } else {\n                this.scrollLeftState = value;\n                this.$refs.footerRef.scrollLeft = value;\n            }\n        }\n    },\n    render() {\n        return (\n            <div class=\"datagrid-footer f-row f-noshrink\">\n                <div ref=\"footerRef\" class=\"datagrid-footer-inner f-full\">\n                    <table class=\"datagrid-ftable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                        <colgroup>\n                            {\n                                this.columns.map(col => (\n                                    <col style={{ width: col.widthState }}></col>\n                                ))\n                            }\n                        </colgroup>\n                        <tbody>\n                            {\n                                this.rows.map((row, rowIndex) => (\n                                    <tr class=\"datagrid-row\">\n                                        {\n                                            this.columns.map(col => (\n                                                <td>\n                                                    <GridFooterCell row={row} column={col} rowIndex={rowIndex}></GridFooterCell>\n                                                </td>\n\n                                            ))\n                                        }\n                                    </tr>\n\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                {this.paddingWidth && <div class=\"datagrid-footer f-noshrink\" style={{ width: this.paddingWidth + 'px' }}></div>}\n            </div>\n        )\n    }\n}","﻿import GridHeader from './GridHeader';\nimport GridBody from './GridBody';\nimport GridFooter from './GridFooter';\n\nexport default {\n    name: 'GridView',\n    components: {\n        GridHeader,\n        GridBody,\n        GridFooter\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        columnGroup: Object,\n        viewIndex: {\n            type: Number,\n            default: 2\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        footerRows: {\n            type: Array,\n            default: () => []\n        },\n        filterable: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            headerPaddingWidth: 0\n        }\n    },\n    computed: {\n        viewCls() {\n            return 'f-column datagrid-view' + this.viewIndex + (this.viewIndex == 2 ? ' f-full' : ' f-noshrink');\n        },\n    },\n    watch: {\n        rows() {\n            this.$nextTick(() => {\n                this.headerPaddingWidth = this.getHeaderPaddingWidth();\n            })\n        }\n    },\n    methods: {\n        scrollTop(value) {\n            if (value == undefined) {\n                return this.$refs.body.scrollTop();\n            } else {\n                this.$refs.body.scrollTop(value);\n            }\n        },\n        headerHeight(value) {\n            if (value == undefined) {\n                return this.$refs.header ? this.$refs.header.height() : 0;\n            } else {\n                if (this.$refs.header) {\n                    this.$refs.header.height(value);\n                }\n            }\n        },\n        getHeaderPaddingWidth() {\n            if (this.viewIndex == 2) {\n                let width = this.$refs.body ? this.$refs.body.scrollbarWidth() : 0;\n                if (width > 0) {\n                    return width;\n                }\n            }\n            return null;\n        },\n        onBodyScroll(event) {\n            // this.headerPaddingWidth = this.getHeaderPaddingWidth();\n            if (this.$refs.header) {\n                this.$refs.header.scrollLeft(event.left);\n            }\n            if (this.$refs.footer) {\n                this.$refs.footer.scrollLeft(event.left);\n            }\n            this.$emit('bodyScroll', event);\n        },\n        onResize() {\n\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.viewCls}>\n                <GridHeader ref=\"header\"\n                    columnGroup={this.columnGroup}\n                    columns={this.columns}\n                    paddingWidth={this.headerPaddingWidth}>\n                </GridHeader>\n                <GridBody ref=\"body\" align=\"center\"\n                    columns={this.columns}\n                    rows={this.rows}\n                    onBodyScroll={this.onBodyScroll}>\n                </GridBody>\n            </div>\n        )\n    }\n}","﻿import { defineComponent } from 'vue';\nimport ListBase from '../base/ListBase';\nimport domHelper from '../base/DomHelper';\nimport GridColumn from './GridColumn';\nimport GridHeaderRow from './GridHeaderRow';\nimport GridHeader from './GridHeader';\nimport GridView from './GridView';\n\nexport default defineComponent({\n    name: 'GridBase',\n    extends: ListBase,\n    components: {\n        GridColumn,\n        GridHeaderRow,\n        GridHeader,\n        GridView\n    },\n    props: {\n        rowHeight: {\n            type: Number,\n            default: 32\n        },\n        striped: {\n            type: Boolean,\n            default: false\n        },\n        rowCss: [Object, Function],\n        frozenWidth: {\n            type: [Number, String],\n            default: '200px'\n        },\n        frozenAlign: {\n            type: String,\n            default: 'left'\n        },\n        sorts: {\n            type: [Object, Array],\n            default: () => []\n        },\n        multiSort: {\n            type: Boolean,\n            default: false\n        },\n        showHeader: {\n            type: Boolean,\n            default: true\n        },\n        showFooter: {\n            type: Boolean,\n            default: false\n        },\n        editMode: String,   // row, cell\n        tipOptions: Object,\n        clickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        dblclickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        footerData: {\n            type: Array,\n            default: () => []\n        },\n        filterRules: {\n            type: Array,\n            default: () => []\n        },\n        columnResizing: {\n            type: Boolean,\n            default: false\n        },\n        columnMoving: {\n            type: Boolean,\n            default: false\n        },\n        cellSpan: {\n            type: Function,\n            default: () => {\n                return {\n                    rowspan: 1,\n                    colspan: 1\n                }\n            }\n        }\n    },\n    data() {\n        return {\n            leftGroup: null,\n            rightGroup: null,\n            centerGroup: null,\n            leftColumns: [],\n            rightColumns: [],\n            centerColumns: [],\n            columnRefs: [],\n            groupRefs: [],\n            sortsState: this.sorts,\n            editingItem: null,\n            headerHeight: 0,\n            splitStyle: null\n        }\n    },\n    computed: {\n        allColumns() {\n            let cc = [];\n            if (this.leftColumns) {\n                cc = cc.concat(this.leftColumns);\n            }\n            if (this.centerColumns) {\n                cc = cc.concat(this.centerColumns);\n            }\n            if (this.rightColumns) {\n                cc = cc.concat(this.rightColumns);\n            }\n            return cc;\n        },\n        footerRows() {\n            if (this.footerData instanceof Array) {\n                return this.footerData;\n            } else {\n                return [this.footerData];\n            }\n        },\n        leftFrozenWidth() {\n            let width = this.leftGroup ? this.leftGroup.widthState : 0;\n            return width ? width : this.frozenWidth;\n        },\n        rightFrozenWidth() {\n            let width = this.rightGroup ? this.rightGroup.widthState : 0;\n            return width ? width : this.frozenWidth;\n        }\n    },\n    watch: {\n        groupRefs() {\n            this.initColumns();\n            this.initHeaderHeight();\n        },\n        columnRefs() {\n            this.initColumns();\n            this.initHeaderHeight();\n        },\n        filterRules() {\n            this.initFilterRules();\n        }\n    },\n    created() {\n        this.initColumnSort();\n        if (window.EventHub) {\n            window.EventHub.$on('tabSelect', (tab) => {\n                if (domHelper.isChild(this.$el, tab.$el)) {\n                    if (!this.headerHeight) {\n                        this.initHeaderHeight();\n                    }\n                }\n            })\n            window.EventHub.$on('panelSelect', (panel) => {\n                if (domHelper.isChild(this.$el, panel.$el)) {\n                    if (!this.headerHeight) {\n                        this.initHeaderHeight();\n                    }\n                }\n            })\n        }\n    },\n    mounted() {\n        this.hasDestroyed = false;\n        this.initFilterRules();\n        this.$nextTick(() => this.initHeaderHeight());\n        if (window.EventHub){\n            window.EventHub.$emit('gridMounted', this);\n        }\n    },\n    beforeUnmount() {\n        this.hasDestroyed = true;\n    },\n    methods: {\n        addColumn(column) {\n            this.columnRefs.push(column);\n            this.changeColumns();\n        },\n        removeColumn(column) {\n            let index = this.columnRefs.indexOf(column);\n            if (index >= 0) {\n                this.columnRefs.splice(index, 1);\n                this.changeColumns();\n            }\n        },\n        addColumnGroup(group) {\n            this.groupRefs.push(group);\n            this.changeColumns();\n        },\n        removeColumnGroup(group) {\n            let index = this.columnRefs.indexOf(group);\n            if (index >= 0) {\n                this.groupRefs.splice(index, 1);\n                this.changeColumns();\n            }\n        },\n        changeColumns() {\n            if (this.hasDestroyed) {\n                return;\n            }\n            clearTimeout(this.columnTimer);\n            this.columnTimer = setTimeout(() => {\n                this.initColumns();\n                this.initHeaderHeight();\n            })\n        },\n        // initColumns() {\n        //     this.leftGroup = null;\n        //     this.leftColumns = null;\n        //     this.rightGroup = null;\n        //     this.rightColumns = null;\n        //     this.centerGroup = null;\n        //     this.centerColumns = null;\n        //     if (this.groupRefs && this.groupRefs.length) {\n        //         this.groupRefs.forEach((g) => {\n        //             let cc = this.getColumnLayout(g);\n        //             let columns = cc[cc.length - 1];\n        //             if (g.frozen) {\n        //                 if (g.align == 'left') {\n        //                     this.leftGroup = g;\n        //                     this.leftColumns = columns;\n        //                 } else {\n        //                     this.rightGroup = g;\n        //                     this.rightColumns = columns;\n        //                 }\n        //             } else {\n        //                 this.centerGroup = g;\n        //                 this.centerColumns = columns;\n        //             }\n        //         });\n        //     }\n        //     if (!this.centerColumns) {\n        //         this.centerColumns = this.columnRefs.filter((c) => {\n        //             return !c.frozenState;\n        //         });\n        //         let frozenColumns = this.columnRefs.filter((c) => {\n        //             return c.frozenState;\n        //         });\n        //         if (frozenColumns.length) {\n        //             if (this.frozenAlign == 'left') {\n        //                 this.leftColumns = frozenColumns;\n        //             } else {\n        //                 this.rightColumns = frozenColumns;\n        //             }\n        //         }\n        //     }\n        //     this.allColumns.forEach(c => c.grid = this);\n        //     this.initColumnSort();\n        // },\n        initColumns() {\n            const { columnRefs, groupRefs } = this;\n            let newState = {\n                leftGroup: null,\n                leftColumns: null,\n                rightGroup: null,\n                rightColumns: null,\n                centerGroup: null,\n                centerColumns: null\n            };\n            if (groupRefs && groupRefs.length) {\n                groupRefs.forEach((g) => {\n                    let cc = this.getColumnLayout(g);\n                    let columns = cc[cc.length - 1];\n                    if (g.frozen) {\n                        if (g.align == 'left') {\n                            newState.leftGroup = g;\n                            newState.leftColumns = columns;\n                        } else {\n                            newState.rightGroup = g;\n                            newState.rightColumns = columns;\n                        }\n                    } else {\n                        newState.centerGroup = g;\n                        newState.centerColumns = columns;\n                    }\n                });\n            }\n            if (!newState.centerColumns) {\n                newState.centerColumns = columnRefs.filter((c) => {\n                    return !c.frozenState && !c.hidden;\n                });\n                let frozenColumns = columnRefs.filter((c) => {\n                    return c.frozenState && !c.hidden;\n                });\n                if (frozenColumns.length) {\n                    if (this.frozenAlign == 'left') {\n                        newState.leftColumns = frozenColumns;\n                    } else {\n                        newState.rightColumns = frozenColumns;\n                    }\n                }\n            }\n            Object.assign(this, newState);\n            this.allColumns.forEach(c => c.grid = this);\n            this.initColumnSort();\n        },\n        initHeaderHeight() {\n            if (this.$refs.view1) {\n                this.$refs.view1.headerHeight(null);\n            }\n            if (this.$refs.view2) {\n                this.$refs.view2.headerHeight(null);\n            }\n            if (this.$refs.view3) {\n                this.$refs.view3.headerHeight(null);\n            }\n            this.$nextTick(() => {\n                let h1 = this.$refs.view1 ? this.$refs.view1.headerHeight() : 0;\n                let h2 = this.$refs.view2 ? this.$refs.view2.headerHeight() : 0;\n                let h3 = this.$refs.view3 ? this.$refs.view3.headerHeight() : 0;\n                this.headerHeight = Math.max(h1, h2, h3);\n                if (this.$refs.view1) {\n                    this.$refs.view1.headerHeight(this.headerHeight);\n                }\n                if (this.$refs.view2) {\n                    this.$refs.view2.headerHeight(this.headerHeight);\n                }\n                if (this.$refs.view3) {\n                    this.$refs.view3.headerHeight(this.headerHeight);\n                }\n            })\n        },\n        initFilterRules() {\n            this.filterRules.forEach(r => {\n                let col = this.findColumn(r.field);\n                if (col) {\n                    col.filterValue = r.value;\n                    col.filterOperator = r.op;\n                }\n            });\n        },\n        getColumnLayout(group) {\n            let aa = [];\n            let count = this.getColumnCount(group);\n            for (let i = 0; i < group.rows.length; i++) {\n                aa[i] = new Array(count);\n            }\n            group.rows.forEach((row, rowIndex) => {\n                row.columns.filter(c => !c.hidden).forEach(col => {\n                    let colIndex = this.getColumnIndex(aa[rowIndex]);\n                    if (colIndex >= 0) {\n                        for (let c = 0; c < col.colspan; c++) {\n                            for (let r = 0; r < col.rowspan; r++) {\n                                aa[rowIndex + r][colIndex + c] = col || '';\n                            }\n                        }\n                    }\n                })\n            });\n            return aa;\n        },\n        getColumnCount(group) {\n            let count = 0;\n            group.rows[0].columns.filter(c => !c.hidden).forEach(col => {\n                count += Number(col.colspan);\n            });\n            return count;\n        },\n        getColumnIndex(a) {\n            for (let i = 0; i < a.length; i++) {\n                if (a[i] == undefined) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        onBodyScroll(event) {\n            let top = event ? event.top : this.view2.scrollTop();\n            if (this.$refs.view1) {\n                this.$refs.view1.scrollTop(top);\n            }\n            if (this.$refs.view3) {\n                this.$refs.view3.scrollTop(top);\n            }\n        },\n        addSort(col) {\n            let index = -1;\n            for (let i = 0; i < this.sortsState.length; i++) {\n                if (this.sortsState[i].field == col.field) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index >= 0) {\n                let nextOrder = this.sortsState[index].order == 'asc' ? 'desc' : 'asc';\n                if (this.multiSort && nextOrder == col.order) {\n                    this.sortsState.splice(index, 1);\n                } else {\n                    this.sortsState[index].order = nextOrder;\n                }\n            } else {\n                if (this.multiSort) {\n                    this.sortsState.push({\n                        field: col.field,\n                        order: col.order\n                    });\n                } else {\n                    this.sortsState = [{\n                        field: col.field,\n                        order: col.order\n                    }];\n                }\n            }\n            this.initColumnSort();\n        },\n        initColumnSort() {\n            this.sortsState = this.sortsState || [];\n            if (!(this.sortsState instanceof Array)) {\n                this.sortsState = [this.sortsState];\n            }\n            if (!this.multiSort) {\n                this.sortsState = this.sortsState.slice(0, 1);\n            }\n            for (let c = 0; c < this.allColumns.length; c++) {\n                let col = this.allColumns[c];\n                col.currOrder = null;\n                for (let s = 0; s < this.sortsState.length; s++) {\n                    let sort = this.sortsState[s];\n                    if (sort.field == col.field) {\n                        col.currOrder = sort.order;\n                        break;\n                    }\n                }\n            }\n        },\n        findColumn(field) {\n            let cc = this.allColumns;\n            for (let i = 0; i < cc.length; i++) {\n                if (cc[i].field == field) {\n                    return cc[i];\n                }\n            }\n            return null;\n        },\n        addFilterRule(rule) {\n            // super.addFilterRule(rule);\n            ListBase.methods.addFilterRule.call(this, rule);\n            let col = this.findColumn(rule.field);\n            if (col) {\n                col.filterValue = rule.value;\n                col.filterOperator = rule.op;\n            }\n        },\n        resizeColumn(field, width) {\n            const col = this.findColumn(field);\n            if (col) {\n                col.widthState = domHelper.toStyleValue(width);\n                this.$emit('columnResize', col);\n            }\n        },\n        moveColumn(fromField, toField, point) {\n            const leftCount = (this.leftColumns || []).length;\n            const centerCount = (this.centerColumns || []).length;\n            const columnRefs = this.columnRefs.slice();\n            const fromIndex = columnRefs.findIndex(col => col.field === fromField);\n            const fromCol = columnRefs[fromIndex];\n            columnRefs.splice(fromIndex, 1);\n            const toIndex = columnRefs.findIndex(col => col.field === toField);\n            columnRefs.splice(toIndex + (point === 'before' ? 0 : 1), 0, fromCol);\n            for (let i = 0; i < columnRefs.length; i++) {\n                columnRefs[i].frozenState = true;\n            }\n            for (let i = leftCount; i < leftCount + centerCount; i++) {\n                columnRefs[i].frozenState = false;\n            }\n            this.columnRefs = columnRefs;\n            this.splitStyle = null;\n            this.$nextTick(() => {\n                this.$emit('columnMove', {\n                    from: this.findColumn(fromField),\n                    to: this.findColumn(toField),\n                    point\n                })\n            })\n        },\n\n        isEditing(row, column = null) {\n            if (this.editMode && this.editingItem) {\n                if (this.editMode == 'cell' && this.editingItem.column != column) {\n                    return false;\n                }\n                if (this.idField) {\n                    if (this.editingItem.row[this.idField] == row[this.idField]) {\n                        return true;\n                    }\n                } else {\n                    if (this.editingItem.row == row) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        beginEdit(row, column = null, rowEl = null) {\n            if (!this.isEditing(row, column)) {\n                this.endEdit();\n                if (this.editingItem) {\n                    setTimeout(() => {\n                        if (this.editMode == 'row') {\n                            this.selectRow(this.editingItem.row);\n                        } else if (this.editMode == 'cell') {\n                            this.selectCell(this.editingItem.row, this.editingItem.column);\n                        }\n                    });\n                    return;\n                }\n                let originalValue = this.editMode == 'row' ? Object.assign({}, row) : row[column.field];\n                this.editingItem = {\n                    row: row,\n                    column: column,\n                    originalValue: originalValue,\n                    element: rowEl\n                };\n                this.$emit('editBegin', this.editingItem);\n            }\n        },\n        endEdit() {\n            if (this.editingItem) {\n                let el = this.editingItem.element;\n                if (el && el.querySelector('.validatebox-invalid')) {\n                    return;\n                }\n                if (this.editingItem.invalid) {\n                    return;\n                }\n                this.$emit('editEnd', this.editingItem);\n                this.editingItem = null;\n            }\n        },\n        cancelEdit() {\n            if (this.editingItem) {\n                let item = this.editingItem;\n                this.editingItem = null;\n                setTimeout(() => {\n                    if (this.editMode == 'cell') {\n                        item.row[item.column.field] = item.originalValue;\n                    } else {\n                        Object.assign(item.row, item.originalValue);\n                    }\n                    this.$emit('editCancel', item);\n                });\n            }\n        },\n        navRow(step) {\n            ListBase.methods.navRow.call(this, step);\n            let index = this.rows.indexOf(this.highlightRow);\n            if (index >= 0) {\n                this.$nextTick(() => {\n                    let container = this.$refs.view2.$refs.body.$refs.bodyRef;\n                    let item = container.querySelector('.datagrid-row-over');\n                    if (item) {\n                        domHelper.scrollTo(container, item);\n                    }\n                })\n            }\n        },\n\n    }\n})","﻿import { defineComponent } from 'vue';\nimport domHelper from '../base/DomHelper';\n\nexport default defineComponent({\n    name: 'GridColumnGroup',\n    props: {\n        frozen: {\n            type: Boolean,\n            default: false\n        },\n        align: {\n            type: String,\n            default: 'left'\n        },\n        width: [Number, String]\n    },\n    data() {\n        return {\n            widthState: 0,\n            rows: []\n        }\n    },\n    mounted() {\n        this.widthState = domHelper.toStyleValue(this.width);\n        this.$parent.addColumnGroup(this);\n    },\n    beforeUnmount() {\n        this.$parent.removeColumnGroup(this);\n    },\n    methods: {\n        addRow(row){\n            this.rows.push(row);\n        },\n        removeRow(row){\n            let index = this.rows.indexOf(row);\n            if (index >= 0){\n                this.rows.splice(index,1);\n            }\n        }\n    },\n    render(){\n        return (\n            <div>{this.$slots.default()}</div>\n        )\n    }\n})","﻿export default {\n    name: 'GridEmpty',\n    props: {\n        grid: Object\n    },\n    render() {\n        let content = null;\n        if (this.grid.$slots['empty']) {\n            content = this.grid.$slots['empty']()\n        }\n        if (content) {\n            return (\n                <div class=\"datagrid-empty\">{content}</div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿import InputBase  from '../base/InputBase';\n\nexport default {\n    name: 'TextBox',\n    extends: InputBase,\n    computed: {\n        text() {\n            return this.focused ? this.textState : (this.textFormatter||this.defaultTextFormatter)(this.textState);\n        }\n    },\n    methods: {\n        setValue(value){\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        onInput(event){\n            this.textState = event.target.value;\n            this.setValue(this.textState);\n        }\n    }\n}","﻿import { TextBox } from \"../textbox\";\nexport default {\n    name: 'GridBodyCell',\n    props: {\n        row: Object,\n        column: Object,\n        rowIndex: Number\n    },\n    data() {\n        return {\n            error: null\n        }\n    },\n    computed: {\n        grid() {\n            let t = this;\n            while (t.$options.name !== 'DataGrid' && t.$options.name !== 'TreeGrid') {\n                t = t.$parent;\n            }\n            return t;\n        }\n    },\n    methods: {\n        onKeyDown(event) {\n            if (this.grid.editMode == 'cell') {\n                setTimeout(() => {\n                    if (event.which == 13) {\n                        event.stopPropagation();\n                        this.grid.endEdit();\n                    } else if (event.which == 27) {\n                        event.stopPropagation();\n                        this.grid.cancelEdit();\n                    }\n                });\n            }\n        },\n        onValidate(errors) {\n            if (!this.grid.editingItem) {\n                return;\n            }\n            const field = this.column.field;\n            let error = errors[field];\n            error = error ? error[0] : null;\n            this.error = error;\n            let editingItem = this.grid.editingItem;\n            editingItem.errors = editingItem.errors || {};\n            Object.assign(editingItem.errors, { [field]: errors[field] });\n            let errCount = 0;\n            for (let field in editingItem.errors) {\n                errCount += editingItem.errors[field].length;\n            }\n            editingItem.invalid = errCount > 0;\n            this.grid.$emit('editValidate', editingItem);\n        }\n    },\n    render() {\n        let isEditable = this.$parent.isEditable(this.row, this.column);\n        let cell = null;\n        if (isEditable) {\n            if (this.column.$slots['edit']) {\n                cell = this.column.$slots['edit']({\n                    row: this.row,\n                    column: this.column,\n                    rowIndex: this.rowIndex,\n                    error: this.error\n                });\n                cell.forEach(c => {\n                    c.props.name = this.column.field;\n                });\n            } else {\n                cell = (\n                    <TextBox\n                        class=\"f-full\"\n                        name={this.column.field}\n                        value={this.row[this.column.field]}\n                        onValueChange={e => {\n                            this.row[this.column.field] = e.currentValue;\n                            this.$refs.form.validate();\n                        }}\n                    />\n                )\n            }\n            cell = (\n                <Form\n                    ref=\"form\"\n                    class=\"f-column\"\n                    model={this.row}\n                    rules={{ [this.column.field]: this.column.editRules }}\n                    messages={{ [this.column.field]: this.column.editMessages }}\n                    onValidate={errors => {\n                        this.onValidate(errors);\n                    }}\n                    onSubmit={event => event.preventDefault()}\n                    onKeydown={this.onKeyDown}\n                    v-Tooltip={Object.assign({\n                        closed: !this.error,\n                        content: this.error\n                    }, this.grid.tipOptions)}\n                >\n                    {cell}\n                </Form>\n            )\n        } else {\n            if (this.column.$slots['body']) {\n                cell = this.column.$slots['body']({\n                    row: this.row,\n                    column: this.column,\n                    rowIndex: this.rowIndex\n                });\n            } else if (this.column.$slots['cell']) {\n                cell = this.column.$slots['cell']({\n                    row: this.row,\n                    column: this.column,\n                    rowIndex: this.rowIndex\n                });\n            } else {\n                cell = this.row[this.column.field];\n                // cell = String(this.row[this.column.field]);\n            }\n        }\n        return (\n            <div\n                class={['datagrid-cell', { 'datagrid-editable': isEditable }]}\n                style={{ textAlign: this.column.align || null }}\n            >\n                {cell}\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'DataGridRowDetail',\n    props: {\n        gridBody: Object,\n        row: Object,\n        rowIndex: Number\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        }\n    },\n    render() {\n        if (this.gridBody.view.viewIndex == 2) {\n            return (\n                <div class=\"datagrid-row-detail\">\n                    {\n                        this.grid.$slots['detail']({\n                            row: this.row,\n                            rowIndex: this.rowIndex\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return '';\n        }\n    }\n}","﻿import {h} from 'vue';\n\nexport default {\n    name: 'DataGridRowGroup',\n    props: {\n        row: Object,\n        left: Number,\n        grid: Object\n    },\n    render(){\n        return h(\n            'div',\n            {\n                'class':'datagrid-group-title',\n                'style':{left:this.left+'px'}\n            },\n            [\n                this.grid.$slots['group'] ? this.grid.$slots['group']({\n                    value: this.row.value,\n                    rows: this.row.rows\n                }) : this.row.value\n            ]\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridBodyCell from '../gridbase/GridBodyCell';\nimport DataGridRowDetail from './DataGridRowDetail';\nimport DataGridRowGroup from './DataGridRowGroup';\n\nexport default {\n    name: 'DataGridTable',\n    components: {\n        GridBodyCell,\n        DataGridRowDetail,\n        DataGridRowGroup\n    },\n    props: {\n        columns: {\n            type: Array,\n            default: () => []\n        },\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        gridBody: Object\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        }\n    },\n    methods: {\n        showExpandIcon() {\n            if (this.grid.leftColumns) {\n                if (this.gridBody.view.viewIndex == 1) {\n                    return true;\n                }\n            } else if (this.gridBody.view.viewIndex == 2) {\n                return true;\n            }\n            return false;\n        },\n        groupTitleWidth() {\n            return domHelper.outerWidth(this.$refs.groupTitleRef);\n        },\n        titleLeft() {\n            if (this.gridBody.view.viewIndex == 2) {\n                if (this.grid.leftColumns) {\n                    if (this.grid.view1) {\n                        let width = domHelper.outerWidth(this.grid.$refs.view1.$refs.body.$refs.bodyRef);\n                        return width - this.grid.expanderWidth;\n                    }\n                }\n            }\n            return null;\n        },\n        onRowClick(row) {\n            this.grid.onRowClick(row);\n        },\n        onRowDblClick(row) {\n            this.grid.$emit('rowDblClick', row);\n        },\n        onRowContextMenu(row, event) {\n            this.grid.$emit('rowContextMenu', { row: row, originalEvent: event });\n        },\n        onCellClick(row, col, event) {\n            let cellEl = domHelper.closest(event.currentTarget, '.datagrid-td');\n            let rowEl = domHelper.closest(cellEl, '.datagrid-row');\n            this.grid.onCellClick(row, col, event);\n            if (this.grid.clickToEdit || (this.grid.dblclickToEdit && this.grid.editingItem)) {\n                this.doEdit(row, col, rowEl, cellEl);\n            }\n        },\n        onCellDblClick(row, col, event) {\n            let cellEl = domHelper.closest(event.currentTarget, '.datagrid-td');\n            let rowEl = domHelper.closest(cellEl, '.datagrid-row');\n            this.grid.$emit('cellDblClick', { row: row, column: col });\n            if (this.grid.dblclickToEdit) {\n                this.doEdit(row, col, rowEl, cellEl);\n            }\n        },\n        onCellContextMenu(row, col, event) {\n            this.grid.$emit('cellContextMenu', { row: row, column: col, originalEvent: event });\n        },\n        onCellKeyDown() {\n            // if (this.grid.editMode == 'cell'){\n            //     setTimeout(() => {\n            //         if (event.which == 13){\n            //             event.stopPropagation();\n            //             this.grid.endEdit();\n            //         } else if (event.which == 27){\n            //             event.stopPropagation();\n            //             this.grid.cancelEdit();\n            //         }\n            //     });\n            // }\n        },\n        doEdit(row, col, rowEl, cellEl) {\n            this.grid.beginEdit(row, col, rowEl);\n            setTimeout(() => {\n                let input = cellEl.querySelector('.textbox-text');\n                if (input) {\n                    input.focus();\n                }\n            });\n        },\n        onGroupExpanderClick(value, event) {\n            event.stopPropagation();\n            this.grid.toggleGroup(value);\n        },\n        onDetailExpanderClick(row, event) {\n            event.stopPropagation();\n            this.grid.toggleRow(row);\n        },\n        getRowIndex(rowIndex, row) {\n            if (this.grid.groupField) {\n                rowIndex = row._rowIndex;\n            }\n            return this.grid.getAbsoluteIndex(rowIndex);\n        },\n        getCss(css, row, value, type) {\n            if (css) {\n                let cssValue = typeof css == 'function' ? css(row, value) : css;\n                if (type == 'class') {\n                    return typeof cssValue == 'string' ? cssValue : null;\n                } else {\n                    return typeof cssValue == 'object' ? cssValue : null;\n                }\n            }\n            return null;\n        },\n        getRowClass(row) {\n            return this.getCss(this.grid.rowCss, row, null, 'class');\n        },\n        getRowStyle(row) {\n            return this.getCss(this.grid.rowCss, row, null, 'style');\n        },\n        getCellClass(column, row) {\n            return this.getCss(column.cellCss, row, row[column.field], 'class');\n        },\n        getCellStyle(column, row) {\n            return this.getCss(column.cellCss, row, row[column.field], 'style');\n        },\n        isEditable(row, col) {\n            if (this.grid.isEditing(row, col)) {\n                if (col.editable) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getCellSpan(row, column, rowIndex) {\n            return this.grid.cellSpan({ row, column, rowIndex });\n        },\n        hasCellSpan(row, column, rowIndex) {\n            const span = this.getCellSpan(row, column, rowIndex);\n            return span.rowspan && span.colspan;\n        },\n        renderGroupRow(row) {\n            if (!row || !this.grid.isGroupRow(row)) {\n                return null;\n            }\n            return (\n                <tr class=\"datagrid-row datagrid-group-row\">\n                    <td class=\"datagrid-td-group\" colspan={this.columns.length}>\n                        <div class=\"datagrid-group f-row\">\n                            {\n                                this.showExpandIcon() &&\n                                <span\n                                    class=\"datagrid-group-expander f-row f-content-center f-noshrink\"\n                                    style={{ width: this.grid.expanderWidth + 'px' }}\n                                    onClick={event => this.onGroupExpanderClick(row.value, event)}>\n                                    <span class={'datagrid-row-expander' + (row.collapsed ? ' datagrid-row-expand' : ' datagrid-row-collapse')}>\n                                    </span>\n                                </span>\n                            }\n                            <DataGridRowGroup grid={this.grid} left={-this.titleLeft()} row={row}></DataGridRowGroup>\n                        </div>\n                    </td>\n                </tr>\n            )\n        },\n        renderDefaultRow(row, rowIndex) {\n            if (!row || this.grid.isGroupRow(row)) {\n                return null;\n            }\n            return (\n                <tr class={'datagrid-row ' + this.getRowClass(row) + (this.grid.isHighlighted(row) ? ' datagrid-row-over' : '') + (this.grid.isSelected(row) ? ' datagrid-row-selected' : '') + (this.grid.striped && this.getRowIndex(rowIndex) % 2 ? ' datagrid-row-alt' : '')}\n                    style={this.getRowStyle(row)}\n                    onMouseenter={() => this.grid.highlightRow = row}\n                    onMouseleave={() => this.grid.highlightRow = null}\n                    onClick={event => this.onRowClick(row, event)}\n                    onDblclick={event => this.onRowDblClick(row, event)}\n                    onContextmenu={event => this.onRowContextMenu(row, event)}>\n                    {\n                        this.columns.map(col => (\n                            <>\n                                {\n                                    col.expander &&\n                                    <td class=\"datagrid-td-expander\">\n                                        <div class=\"datagrid-cell f-row f-content-center\">\n                                            <span class={'datagrid-row-expander' + (this.grid.isRowExpanded(row) ? ' datagrid-row-collapse' : ' datagrid-row-expand')}\n                                                onClick={event => this.onDetailExpanderClick(row, event)}>\n                                            </span>\n                                        </div>\n                                    </td>\n                                }\n                                {\n                                    !col.expander && this.hasCellSpan(row, col, rowIndex) &&\n                                    <td\n                                        class={'datagrid-td ' + this.getCellClass(col, row) + (this.grid.isSelected(row, col) ? ' datagrid-row-selected' : '') + (this.grid.isHighlighted(row, col) ? ' datagrid-row-over' : '')}\n                                        style={this.getCellStyle(col, row)}\n                                        rowspan={this.getCellSpan(row, col, rowIndex).rowspan}\n                                        colspan={this.getCellSpan(row, col, rowIndex).colspan}\n                                        onMouseenter={() => this.grid.highlightCell = { row: row, column: col }}\n                                        onMouseleave={() => this.grid.highlightCell = null}\n                                        onClick={event => this.onCellClick(row, col, event)}\n                                        onDblclick={event => this.onCellDblClick(row, col, event)}\n                                        onContextmenu={event => this.onCellContextMenu(row, col, event)}\n                                        onKeydown={event => this.onCellKeyDown(row, col, event)}>\n                                        <GridBodyCell row={row} column={col} rowIndex={this.getRowIndex(rowIndex, row)}></GridBodyCell>\n                                    </td>\n                                }\n                            </>\n\n                        ))\n                    }\n                </tr>\n            )\n        },\n        renderDetailRow(row, rowIndex) {\n            if (this.grid.$slots['detail'] && this.grid.isRowExpanded(row) && !this.grid.isGroupRow(row)) {\n                return (\n                    <tr>\n                        <td colspan={this.columns.length}>\n                            <DataGridRowDetail gridBody={this.gridBody} row={row} rowIndex={this.getRowIndex(rowIndex, row)}></DataGridRowDetail>\n                        </td>\n                    </tr>\n                )\n            } else {\n                return null;\n            }\n        }\n\n    },\n    render() {\n        return (\n            <table class=\"datagrid-btable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                <colgroup>\n                    {\n                        this.columns.map(col => (\n                            <col style={{ width: col.widthState }}></col>\n                        ))\n                    }\n                </colgroup>\n                <tbody>\n                    {\n                        (this.rows || []).map((row, rowIndex) => (\n                            <>\n                                {\n                                    this.renderGroupRow(row)\n                                }\n                                {\n                                    this.renderDefaultRow(row, rowIndex)\n                                }\n                                {\n                                    this.renderDetailRow(row, rowIndex)\n                                }\n                            </>\n                        ))\n                    }\n                </tbody>\n            </table>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridBody from '../gridbase/GridBody';\nimport DataGridTable from './DataGridTable';\n// import { DomHelper } from '../base/DomHelper';\n\nexport default {\n    name: 'DataGridBody',\n    extends: GridBody,\n    components: {\n        DataGridTable\n    },\n    data() {\n        return {\n            marginTop: 0,\n            currRows: []\n        }\n    },\n    computed: {\n        view() {\n            return this.$parent;\n        },\n        isVirtualScroll() {\n            if (this.view.grid.virtualScroll && this.view.viewIndex == 2) {\n                return true;\n            } else {\n                return false;\n            }\n\n        }\n    },\n    watch: {\n        rows() {\n            // this.currRows = this.rows;\n            // if (this.view.grid.virtualScroll && this.view.viewIndex != 2){\n            //     this.currRows = this.rows.slice(0, this.view.grid.pageSize*2);\n            // }\n            if (this.view.grid.virtualScroll) {\n                this.currRows = this.rows.slice(0, this.view.grid.pageSize * 2);\n            } else {\n                this.currRows = this.rows;\n            }\n        }\n    },\n    methods: {\n        scrollTop(value) {\n            if (value == undefined) {\n                if (this.isVirtualScroll) {\n                    return this.$refs.vscroll.relativeScrollTop();\n                } else {\n                    return this.$refs.bodyRef.scrollTop;\n                }\n            } else {\n                if (!this.isVirtualScroll) {\n                    this.marginTop = -value;\n                }\n            }\n        },\n        scrollbarWidth() {\n            if (this.$refs.vscroll) {\n                return this.$refs.vscroll.scrollbarWidth();\n            } else {\n                return domHelper.outerWidth(this.$refs.bodyRef) - domHelper.outerWidth(this.$refs.innerRef);\n            }\n        },\n        onVirtualScroll(event) {\n            this.$emit('bodyScroll', event);\n        },\n        onVirtualPageChange(event) {\n            this.view.grid.onVirtualPageChange(event);\n        },\n        onVirtualPageUpdate(event) {\n            this.currRows = event;\n            this.view.grid.updateFrozenView(this.$refs.vscroll ? this.$refs.vscroll.scrollTop : 0, this.currRows);\n        }\n    },\n    render() {\n        return (\n            <div ref=\"bodyRef\" class={'datagrid-body f-full' + (this.isVirtualScroll ? ' datagrid-vbody f-column' : '')} style=\"margin-top:0\" onScroll={this.onScroll}>\n                <div ref=\"innerRef\" class={'datagrid-body-inner' + (this.isVirtualScroll ? ' f-column f-full panel-noscroll' : '')} style={{ marginTop: this.marginTop + 'px' }}>\n                    {\n                        !this.isVirtualScroll &&\n                        <DataGridTable columns={this.columns} rows={this.currRows} gridBody={this}></DataGridTable>\n                    }\n                    {\n                        this.isVirtualScroll &&\n                        <VirtualScroll ref=\"vscroll\"\n                            class=\"f-full\"\n                            data={this.rows}\n                            total={this.view.grid.total}\n                            pageSize={this.view.grid.pageSize}\n                            rowHeight={this.view.grid.rowHeight}\n                            lazy={this.view.grid.lazy}\n                            pageNumber={this.view.grid.pageNumber}\n                            onUpdate={this.onVirtualPageUpdate}\n                            onBodyScroll={this.onVirtualScroll}\n                            onPageChange={this.onVirtualPageChange}\n                        >\n                            <DataGridTable columns={this.columns} rows={this.currRows} gridBody={this}></DataGridTable>\n                        </VirtualScroll>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","﻿import GridView from '../gridbase/GridView';\nimport DataGridBody from './DataGridBody';\n\nexport default {\n    name: 'DataGridView',\n    extends: GridView,\n    components: {\n        DataGridBody\n    },\n    computed: {\n        grid() {\n            return this.$parent;\n        }\n    },\n    methods: {\n        onHeaderCellClick(event) {\n            let col = event.column;\n            if (col.sortable) {\n                this.grid.addSort(event.column);\n                this.grid.setData(this.grid.innerData);\n                if (this.$refs.body.vscroll) {\n                    this.$refs.body.vscroll.refresh();\n                }\n                this.grid.$emit('sortChange', this.grid.sortsState);\n            }\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.viewCls}>\n                {\n                    this.grid.showHeader &&\n                    <GridHeader ref=\"header\"\n                        columnGroup={this.columnGroup}\n                        columns={this.columns}\n                        paddingWidth={this.headerPaddingWidth}\n                        grid={this.grid}\n                        onCellClick={this.onHeaderCellClick}>\n                    </GridHeader>\n                }\n                <DataGridBody ref=\"body\" align=\"center\"\n                    columns={this.columns}\n                    rows={this.rows}\n                    onBodyScroll={this.onBodyScroll}>\n                </DataGridBody>\n                {\n                    this.grid.showFooter &&\n                    <GridFooter ref=\"footer\"\n                        columns={this.columns}\n                        rows={this.footerRows}\n                        paddingWidth={this.headerPaddingWidth}>\n                    </GridFooter>\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Pagination from '../pagination/Pagination';\nimport ListBase from '../base/ListBase';\nimport GridBase from '../gridbase/GridBase';\nimport GridEmpty from '../gridbase/GridEmpty';\nimport DataGridView from './DataGridView';\n\nexport default {\n    name: 'DataGrid',\n    extends: GridBase,\n    components: {\n        Pagination,\n        DataGridView,\n        GridEmpty\n    },\n    props: {\n        groupField: String,\n        expanderWidth: {\n            type: Number,\n            default: 30\n        },\n        aggregate: Function\n    },\n    data() {\n        return {\n            groupData: [],\n            expandedRows: [],\n            frozenRows: [],\n            splitStyle: null\n        }\n    },\n    watch: {\n        rows() {\n            if (!this.virtualScroll) {\n                this.frozenRows = this.rows;\n            }\n        }\n    },\n    methods: {\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            ListBase.methods.setData.call(this, value);\n            this.frozenRows = this.virtualScroll ? [] : this.rows;\n        },\n        setGroupData() {\n            if (this.groupField) {\n                if (!this.isGrouped(this.filteredData)) {\n                    this.groupData = this.makeGroup(this.filteredData);\n                    this.filteredData = this.makeGroupedRows();\n                    let index = 0;\n                    this.filteredData.forEach(row => {\n                        if (!this.isGroupRow(row)) {\n                            row._rowIndex = index++;\n                        }\n                    });\n                }\n            }\n        },\n        setPageData() {\n            if (this.groupField) {\n                const dataRows = this.makeGroupedRows();\n                const getIndex = (index) => {\n                    let count = 0;\n                    let currIndex = 0;\n                    if (index === 0) {\n                        return 0;\n                    }\n                    for (let i = 0; i < dataRows.length && count < index; i++) {\n                        let row = dataRows[i];\n                        if (!this.isGroupRow(row)) {\n                            count++;\n                            currIndex = i;\n                        } else {\n                            let group = this.getGroup(row.value);\n                            if (group) {\n                                row.collapsed = group.collapsed;\n                            }\n                        }\n                    }\n                    return currIndex + 1;\n                }\n                let start = (this.pageNumberState - 1) * this.pageSizeState;\n                let end = start + (+this.pageSizeState);\n                let rows = dataRows.slice(getIndex(start), getIndex(end));\n                let groupedRows = dataRows.filter(row => this.isGroupRow(row));\n                this.totalState = dataRows.length - groupedRows.length;\n                let lastRows = [];\n                let pageCount = (!this.totalState ? 0 : Math.ceil(this.totalState / this.pageSizeState) || 1);\n                if (this.pageNumberState === pageCount) {\n                    for (let i = groupedRows.length - 1; i >= 0; i--) {\n                        let row = groupedRows[i];\n                        if (row.collapsed) {\n                            lastRows.unshift(row);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                this.rows = rows.concat(lastRows);\n            } else {\n                ListBase.methods.setPageData.call(this);\n            }\n        },\n        updateFrozenView(scrollTop, rows) {\n            if (rows) {\n                this.frozenRows = rows;\n            }\n            if (this.$refs.view1) {\n                this.$refs.view1.scrollTop(scrollTop);\n            }\n            if (this.$refs.view3) {\n                this.$refs.view3.scrollTop(scrollTop);\n            }\n        },\n        onBodyScroll(event) {\n            this.updateFrozenView(event.relativeTop || event.top, event.items);\n        },\n        getRowIndex(row) {\n            let body = this.$refs.view2.$refs.body;\n            let index = body.currRows.indexOf(row);\n            if (index == -1) {\n                return -1;\n            }\n            if (body.$refs.vscroll) {\n                return index + body.$refs.vscroll.startIndex;\n            } else if (this.pagination) {\n                return index + (this.pageNumberState - 1) * this.pageSizeState;\n            } else {\n                return index;\n            }\n        },\n        getAbsoluteIndex(index) {\n            let body = this.$refs.view2.$refs.body;\n            if (body.$refs.vscroll) {\n                return index + body.$refs.vscroll.startIndex;\n            } else if (this.pagination) {\n                return index + (this.pageNumberState - 1) * this.pageSizeState;\n            } else {\n                return index;\n            }\n        },\n        scrollTo(row) {\n            let index = this.$refs.view2.$refs.body.currRows.indexOf(row);\n            if (index >= 0) {\n                let body = this.$refs.view2.$refs.body.$refs.bodyRef;\n                let tr = body.querySelector('table>tbody>tr:nth-child(' + (index + 1) + ')');\n                domHelper.scrollTo(body, tr);\n                this.updateFrozenView(this.$refs.view2.$refs.body.scrollTop(), this.rows);\n            }\n        },\n        sortData() {\n            if (!this.sortsState || !this.sortsState.length) {\n                return;\n            }\n            let cc = [];\n            for (let i = 0; i < this.sortsState.length; i++) {\n                cc.push(this.findColumn(this.sortsState[i].field));\n            }\n            let sortFunc = (a, b) => {\n                return a == b ? 0 : (a > b ? 1 : -1);\n            };\n            this.innerData.sort((r1, r2) => {\n                let r = 0;\n                for (let i = 0; i < this.sortsState.length; i++) {\n                    let sort = this.sortsState[i];\n                    if (cc[i] && cc[i].sorter) {\n                        r = cc[i].sorter(r1, r2);\n                    } else {\n                        r = sortFunc(r1[sort.field], r2[sort.field]);\n                    }\n                    r = r * (sort.order == 'asc' ? 1 : -1);\n                    if (r != 0) {\n                        return r;\n                    }\n                }\n                return r;\n            });\n        },\n\n        isGroupRow(row) {\n            return row._groupRow ? true : false;\n        },\n        isGrouped(data) {\n            if (data && data.length) {\n                if (this.isGroupRow(data[0])) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getGroup(value, groups) {\n            if (!groups) {\n                groups = this.groupData;\n            }\n            for (let group of groups) {\n                if (group.value == value) {\n                    return group;\n                }\n            }\n            return null;\n        },\n        makeGroup(data) {\n            let groups = [];\n            for (let row of data) {\n                if (!this.isGroupRow(row)) {\n                    let group = this.getGroup(row[this.groupField], groups);\n                    if (group) {\n                        group.rows.push(row);\n                    } else {\n                        group = {\n                            value: row[this.groupField],\n                            collapsed: false,\n                            rows: [row]\n                        };\n                        groups.push(group);\n                    }\n                }\n            }\n            if (this.aggregate) {\n                groups.forEach(group => {\n                    const row = this.aggregate(group.rows);\n                    group.rows.push(row);\n                })\n            }\n            return groups;\n        },\n        makeGroupedRows() {\n            let rows = [];\n            for (let group of this.groupData) {\n                rows.push({\n                    _groupRow: true,\n                    value: group.value,\n                    rows: group.rows,\n                    collapsed: group.collapsed\n                });\n                if (!group.collapsed) {\n                    rows = rows.concat(group.rows);\n                }\n            }\n            return rows;\n        },\n        collapseGroup(value) {\n            let group = this.getGroup(value);\n            if (group) {\n                group.collapsed = true;\n                this.rows = this.makeGroupedRows();\n                if (this.pagination && !this.lazy) {\n                    this.setPageData();\n                }\n                this.$emit('groupCollapse', group);\n            }\n        },\n        expandGroup(value) {\n            let group = this.getGroup(value);\n            if (group) {\n                group.collapsed = false;\n                this.rows = this.makeGroupedRows();\n                if (this.pagination && !this.lazy) {\n                    this.setPageData();\n                }\n                this.$emit('groupExpand', group);\n            }\n        },\n        toggleGroup(value) {\n            let group = this.getGroup(value);\n            if (group) {\n                if (group.collapsed) {\n                    this.expandGroup(value);\n                } else {\n                    this.collapseGroup(value);\n                }\n            }\n        },\n        getExpandedIndex(row) {\n            if (this.idField) {\n                for (let i = 0; i < this.expandedRows.length; i++) {\n                    if (this.expandedRows[i][this.idField] == row[this.idField]) {\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return this.expandedRows.indexOf(row);\n            }\n        },\n        isRowExpanded(row) {\n            let index = this.getExpandedIndex(row);\n            return index != -1;\n        },\n        collapseRow(row) {\n            let index = this.getExpandedIndex(row);\n            if (index >= 0) {\n                this.expandedRows.splice(index, 1);\n                this.$emit('rowCollapse', row);\n            }\n        },\n        expandRow(row) {\n            if (!this.isRowExpanded(row)) {\n                this.expandedRows.push(row);\n                this.$emit('rowExpand', row);\n            }\n        },\n        toggleRow(row) {\n            if (this.isRowExpanded(row)) {\n                this.collapseRow(row);\n            } else {\n                this.expandRow(row);\n            }\n        },\n        renderPagination(position) {\n            if (!this.pagination) {\n                return null;\n            }\n            if (this.pagePosition != 'both' && this.pagePosition != position) {\n                return null;\n            }\n            return (\n                <Pagination class=\"datagrid-pager datagrid-pager-top f-noshrink\"\n                    total={this.totalState}\n                    pageSize={this.pageSizeState}\n                    pageNumber={this.pageNumberState}\n                    layout={this.pageLayout}\n                    pageList={this.pageList}\n                    links={this.pageLinks}\n                    loading={this.loading}\n                    onPageChange={this.onPageChange}\n                >\n                    {this.$slots['tpl'] && this.$slots['tpl']({ datagrid: this })}\n                </Pagination>\n            )\n        }\n\n    },\n    render() {\n        let bodyCls = 'panel-body panel-body-noheader datagrid datagrid-wrap f-full f-column';\n        if (!this.border) {\n            bodyCls += ' panel-body-noborder';\n        }\n        return (\n            <div class=\"f-column panel-noscroll\">\n                <div style=\"display:none\">{this.$slots.default()}</div>\n                <div class={bodyCls}>\n                    {this.renderPagination('top')}\n                    <div ref=\"viewRef\" class=\"datagrid-view f-row f-full\">\n                        {\n                            (this.leftGroup || this.leftColumns) &&\n                            <DataGridView ref=\"view1\"\n                                key=\"view1\"\n                                viewIndex={1}\n                                columnGroup={this.leftGroup}\n                                columns={this.leftColumns}\n                                rows={this.frozenRows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.leftFrozenWidth }}\n                            />\n                        }\n                        <DataGridView ref=\"view2\"\n                            key=\"view2\"\n                            viewIndex={2}\n                            columnGroup={this.centerGroup}\n                            columns={this.centerColumns}\n                            rows={this.rows}\n                            footerRows={this.footerRows}\n                            onBodyScroll={this.onBodyScroll}\n                        />\n                        {\n                            (this.rightGroup || this.rightColumns) &&\n                            <DataGridView ref=\"view3\"\n                                key=\"view3\"\n                                viewIndex={3}\n                                columnGroup={this.rightGroup}\n                                columns={this.rightColumns}\n                                rows={this.frozenRows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.rightFrozenWidth }}\n                            />\n                        }\n                        {\n                            this.splitStyle && <div class=\"datagrid-split-proxy\" style={this.splitStyle}></div>\n                        }\n                    </div>\n                    {this.renderPagination('bottom')}\n                </div>\n                {\n                    this.emptyMsg && !this.rows.length && !this.loading &&\n                    <div class=\"datagrid-empty\">{this.emptyMsg}</div>\n                }\n                {\n                    this.loading &&\n                    <div class=\"datagrid-loading f-row\">\n                        <div class=\"datagrid-mask\"></div>\n                        <div class=\"datagrid-mask-msg\">{this.loadMsg}</div>\n                    </div>\n                }\n                {\n                    !this.rows.length && !this.loading &&\n                    <GridEmpty grid={this}></GridEmpty>\n                }\n            </div>\n        )\n    }\n\n}","﻿import InputBase from './InputBase';\n\nexport default {\n    name: 'SpinnerBase',\n    extends: InputBase,\n    props: {\n        reversed: {\n            type: Boolean,\n            default: false\n        },\n        spinners: {\n            type: Boolean,\n            default: true\n        },\n        spinAlign: {\n            type: String,\n            default: 'right'\n        },\n    },\n    methods: {\n        onClickUp() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            if (this.spinAlign == 'left' || this.spinAlign == 'right') {\n                this.doSpinUp();\n            } else {\n                this.reversed ? this.doSpinDown() : this.doSpinUp();\n            }\n        },\n        onClickDown() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            if (this.spinAlign == 'left' || this.spinAlign == 'right') {\n                this.doSpinDown();\n            } else {\n                this.reversed ? this.doSpinUp() : this.doSpinDown();\n            }\n        },\n        doSpinUp() { },\n        doSpinDown() { },\n        renderHorizontal() {\n            let upcls = 'spinner-button';\n            let downcls = 'spinner-button';\n            if (this.reversed) {\n                upcls += ' spinner-button-up';\n                downcls += ' spinner-button-down';\n            } else {\n                upcls += ' spinner-button-down';\n                downcls += ' spinner-button-up';\n            }\n            return (\n                <>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-left f-inline-row f-noshrink f-order1\" onClick={this.onClickDown}>\n                        <span class={upcls}></span>\n                    </span>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-right f-inline-row f-noshrink f-order5\" onClick={this.onClickUp}>\n                        <span class={downcls}></span>\n                    </span>\n                </>\n            )\n        },\n        renderVertical() {\n            let upcls = 'spinner-button';\n            let downcls = 'spinner-button';\n            if (this.reversed) {\n                upcls += ' spinner-button-up';\n                downcls += ' spinner-button-down';\n            } else {\n                upcls += ' spinner-button-down';\n                downcls += ' spinner-button-up';\n            }\n            return (\n                <>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-bottom f-noshrink\" onClick={this.onClickDown}>\n                        <span class={upcls}></span>\n                    </span>\n                    <span class=\"textbox-addon spinner-arrow spinner-button-top f-noshrink\" onClick={this.onClickUp}>\n                        <span class={downcls}></span>\n                    </span>\n                </>\n            )\n        },\n        renderDefault() {\n            let cls = 'textbox-addon spinner-button-updown f-column f-noshrink';\n            if (this.spinAlign == 'left') {\n                cls += ' f-order1';\n            } else if (this.spinAlign == 'right') {\n                cls += ' f-order5';\n            }\n            return (\n                <>\n                    <span class={cls}>\n                        <span class=\"spinner-arrow spinner-button-top f-full\" onClick={this.onClickUp}>\n                            <span class=\"spinner-arrow-up\"></span>\n                        </span>\n                        <span class=\"spinner-arrow spinner-button-bottom f-full\" onClick={this.onClickDown}>\n                            <span class=\"spinner-arrow-down\"></span>\n                        </span>\n                    </span>\n                </>\n            )\n        },\n        renderOthers() {\n            if (!this.spinners) {\n                return null;\n            }\n            if (this.spinAlign === 'horizontal') {\n                return this.renderHorizontal();\n            } else if (this.spinAlign === 'vertical') {\n                return this.renderVertical();\n            } else {\n                return this.renderDefault();\n            }\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport SpinnerBase from '../base/SpinnerBase';\nimport InputBase from '../base/InputBase';\n\nexport default {\n    name: 'NumberBox',\n    extends: SpinnerBase,\n    props: {\n        value: Number,\n        min: Number,\n        max: Number,\n        increment: {\n            type: Number,\n            default: 1\n        },\n        precision: {\n            type: Number,\n            default: 0\n        },\n        decimalSeparator: {\n            type: String,\n            default: '.'\n        },\n        groupSeparator: {\n            type: String,\n            default: ''\n        },\n        prefix: {\n            type: String,\n            default: ''\n        },\n        suffix: {\n            type: String,\n            default: ''\n        }\n    },\n    created() {\n        this.setValue(this.parser.call(this, this.valueState));\n    },\n    mounted() {\n        domHelper.bind(this.$refs.inputRef, 'keypress', this.onKeyPress);\n        domHelper.bind(this.$refs.inputRef, 'blur', this.onBlur);\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$refs.inputRef);\n    },\n    methods: {\n        defaultTextFormatter(value){\n            return this.formatter.call(this, value);\n        },\n        setValue(value){\n            value = this.parser(value);\n            this.textState = this.formatter(value);\n            InputBase.methods.setValue.call(this, value);\n        },\n        onKeyPress(event){\n            if (this.focused){\n                if (event.keyCode == 13){\n                    this.onBlur();\n                }\n                return this.filter.call(this, event);\n            }\n        },\n        onBlur(){\n            let value = this.parser(this.textState);\n            this.setValue(value);\n        },\n        filter(e){\n            var s = this.text;\n            if (e.metaKey || e.ctrlKey){\n                return true;\n            }\n            if (['46','8','13','0'].indexOf(String(e.which)) !== -1){\n                return true;\n            }\n            let c = String.fromCharCode(e.which);\n            if (!c){\n                return true;\n            }\n            if (c == '-' || c == this.decimalSeparator){\n                return (s.indexOf(c) == -1) ? true : false;\n            } else if (c == this.groupSeparator){\n                return true;\n            } else if ('0123456789'.indexOf(c) >= 0){\n                return true;\n            } else {\n                return false;\n            }\n        },\n        formatter(value){\n            if (value == null){\n                return null;\n            }\n            value = parseFloat(value+'');\n            let s = this.precision != -1 ? value.toFixed(this.precision) : String(value);\n            let s1 = s;\n            let s2 = '';\n            let dpos = s.indexOf('.');\n            if (dpos >= 0){\n                s1 = s.substring(0, dpos);\n                s2 = s.substring(dpos+1, s.length);\n            }\n            if (this.groupSeparator){\n                let p = /(\\d+)(\\d{3})/;\n                while (p.test(s1)){\n                    s1 = s1.replace(p, '$1' + this.groupSeparator + '$2');\n                }\n            }\n            if (s2){\n                return this.prefix + s1 + this.decimalSeparator + s2 + this.suffix;\n            } else {\n                return this.prefix + s1 + this.suffix;\n            }\n        },\n        parser(s){\n            if (s == null){\n                return null;\n            }\n            s = (s+'').trim();\n            if (this.prefix) {\n                s = s.replace(new RegExp('\\\\'+this.prefix,'g'), '');\n            }\n            if (this.suffix) {\n                s = s.replace(new RegExp('\\\\'+this.suffix,'g'), '');\n            }\n            if (this.groupSeparator){\n                s = s.replace(new RegExp('\\\\'+this.groupSeparator,'g'), '');\n            }\n            if (this.decimalSeparator){\n                s = s.replace(new RegExp('\\\\'+this.decimalSeparator,'g'), '.')\n            }\n            s = s.replace(/\\s/g,'');\n            let v = parseFloat(s);\n            if (isNaN(v)){\n                return null;\n            } else {\n                if (this.precision != -1){\n                    v = parseFloat(v.toFixed(this.precision));\n                }\n                if (this.min != null && this.min > v){\n                    v = this.min;\n                }\n                if (this.max != null && this.max < v){\n                    v = this.max;\n                }\n                return v;\n            }\n        },\n        doSpinUp() {\n            let v = (this.valueState || 0) + this.increment;\n            this.setValue(this.parser(String(v)));\n        },\n        doSpinDown() {\n            let v = (this.valueState || 0) - this.increment;\n            this.setValue(this.parser(String(v)));\n        }\n                    \n    }\n}","﻿import FieldBase from '../base/FieldBase';\n\nexport default {\n    name: 'SwitchButton',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: {\n            type: Boolean,\n            default: false\n        },\n        modelValue: {\n            type: Boolean,\n            default: false\n        },\n        onText: {\n            type: String,\n            default: 'ON'\n        },\n        offText: {\n            type: String,\n            default: 'OFF'\n        },\n        handleText: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        inputId: String\n    },\n    computed: {\n        buttonClasses() {\n            return ['switchbutton f-inline-row', {\n                'switchbutton-readonly': this.readonly,\n                'switchbutton-disabled': this.disabled,\n                'switchbutton-checked': this.valueState\n            }];\n        }\n    },\n    data() {\n        return {\n            valueState: this.modelValue\n        }\n    },\n    watch: {\n        value() {\n            if (this.value !== this.valueState) {\n                this.valueState = this.value;\n            }\n        },\n        modelValue() {\n            if (this.modelValue !== this.valueState) {\n                this.valueState = this.modelValue;\n            }\n        }\n    },\n    methods: {\n        onClick(event) {\n            event.stopPropagation();\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            this.valueState = !this.valueState;\n            // this.$emit('input', this.valueState);\n            this.$emit('update:modelValue', this.valueState);\n        }\n    },\n    render() {\n        return (\n            <span class={this.buttonClasses} onClick={this.onClick}>\n                <span class=\"switchbutton-inner\">\n                    <span class=\"switchbutton-on\">\n                        <span class=\"f-row f-content-center\">{this.onText}</span>\n                    </span>\n                    <span class=\"switchbutton-handle\">\n                        <span class=\"f-row f-content-center\">{this.handleText}</span>\n                    </span>\n                    <span class=\"switchbutton-off\">\n                        <span class=\"f-row f-content-center\">{this.offText}</span>\n                    </span>\n                    <input class=\"switchbutton-value\" type=\"checkbox\" id={this.inputId} />\n                </span>\n            </span>\n        )\n    }\n}","﻿import FieldBase from '../base/FieldBase';\n\nexport default {\n    name: 'CheckBox',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: String,\n        name: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        inputId: String,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        modelValue: [Boolean, Array]\n    },\n    model: {\n        prop: 'modelValue',\n        event: 'modelChange'\n    },\n    data() {\n        return {\n            checked: false,\n            values: []\n        }\n    },\n    watch: {\n        modelValue() {\n            let previousChecked = this.checked;\n            this.initChecked();\n            if (previousChecked != this.checked) {\n                this.$emit('checkedChange', this.checked);\n            }\n        }\n    },\n    mounted() {\n        this.initChecked();\n    },\n    computed: {\n        checkClasses() {\n            return ['f-full', {\n                'checkbox-disabled': this.disabled,\n                'checkbox-checked': this.checked\n            }]\n        }\n    },\n    methods: {\n        initChecked() {\n            if (this.multiple) {\n                if (this.modelValue == null) {\n                    this.values = [];\n                } else {\n                    this.values = this.modelValue instanceof Array ? this.modelValue : [this.modelValue];\n                }\n                this.setChecked(this.values.indexOf(this.value) != -1);\n            } else {\n                this.setChecked(this.modelValue);\n            }\n        },\n        setChecked(value) {\n            this.$refs.inputRef.checked = value;\n            this.checked = value;\n        },\n        isChecked() {\n            return this.$refs.inputRef ? this.$refs.inputRef.checked : false;\n        },\n        onClickButton(event) {\n            event.preventDefault();\n            if (!this.disabled) {\n                this.setChecked(!this.isChecked());\n                this.updateValues();\n            }\n        },\n        onChange() {\n            this.updateValues();\n        },\n        updateValues() {\n            this.checked = this.isChecked();\n            if (this.multiple) {\n                if (this.checked) {\n                    this.values.push(this.value)\n                } else {\n                    this.values = this.values.filter(v => v != this.value);\n                }\n                // this.$emit('modelChange', this.values);\n                this.$emit('update:modelValue', this.values);\n            } else {\n                // this.$emit('modelChange', this.checked);\n                this.$emit('update:modelValue', this.checked);\n            }\n            this.$emit('checkedChange', this.checked);\n        }\n    },\n    render() {\n        return (\n            <span class={['f-inline-row checkbox', { 'checkbox-invalid': this.invalidState }]}>\n                <span class={this.checkClasses} onClick={this.onClickButton}>\n                    {\n                        this.checked &&\n                        <svg class=\"checkbox-inner\" xml:space=\"preserve\" focusable=\"false\" version=\"1.1\" viewBox=\"0 0 24 24\"><path d=\"M4.1,12.7 9,17.6 20.3,6.3\" fill=\"none\" stroke=\"white\"></path></svg>\n                    }\n                </span>\n                <div class=\"checkbox-value\">\n                    <input ref=\"inputRef\" id={this.inputId} type=\"checkbox\" name={this.name} disabled={this.disabled} onChange={this.onChange} />\n                </div>\n            </span>\n        )\n    }\n}","﻿import FieldBase from '../base/FieldBase';\n\nexport default {\n    name: 'RadioButton',\n    extends: FieldBase,\n    components: { FieldBase },\n    props: {\n        value: String,\n        name: String,\n        inputId: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        modelValue: String\n    },\n    model: {\n        prop: 'modelValue',\n        event: 'modelChange'\n    },\n    data() {\n        return {\n            checked: false\n        }\n    },\n    watch: {\n        modelValue() {\n            this.initValue();\n        }\n    },\n    computed: {\n        radioClasses() {\n            return ['f-full', {\n                'radiobutton-disabled': this.disabled,\n                'radiobutton-checked': this.checked\n            }]\n        }\n    },\n    mounted() {\n        this.initValue();\n    },\n    methods: {\n        initValue() {\n            let checked = (this.value == this.modelValue);\n            this.setChecked(checked);\n        },\n        onClickButton() {\n            this.select();\n        },\n        onChange() {\n            this.select();\n        },\n        isChecked() {\n            return this.$refs.inputRef ? this.$refs.inputRef.checked : false;\n        },\n        setChecked(value) {\n            this.$refs.inputRef.checked = value;\n            this.checked = value;\n        },\n        select() {\n            if (this.disabled) {\n                return;\n            }\n            this.setChecked(true);\n            // this.$emit('modelChange', this.value);\n            this.$emit('update:modelValue', this.value);\n        }\n    },\n    render() {\n        return (\n            <span class={['f-inline-row radiobutton', { 'radiobutton-invalid': this.invalidState }]}>\n                <span class={this.radioClasses} onClick={this.onClickButton}>\n                    {\n                        this.checked &&\n                        <span class=\"radiobutton-inner\"></span>\n                    }\n                </span>\n                <div class=\"radiobutton-value\">\n                    <input ref=\"inputRef\" id={this.inputId} type=\"radio\" name={this.name} disabled={this.disabled} onChange={this.onChange} />\n                </div>\n            </span>\n        )\n    }\n}","﻿export default {\n    name: 'TreeNodeTitle',\n    props: {\n        tree: Object,\n        node: Object\n    },\n    render() {\n        let cell = this.node.text;\n        if (this.tree.$slots.default){\n            cell=this.tree.$slots.default({\n                node:this.node\n            })\n        }\n        return (\n            <span class=\"tree-title\">{cell}</span>\n        )\n    }\n}","﻿export default {\n    name: 'Form',\n    props: {\n        model: Object,\n        rules: Object,\n        messages: Object,\n        labelPosition: {\n            type: String,\n            default: 'before'\n        },\n        labelAlign: {\n            type: String,\n            default: 'left'\n        },\n        labelWidth: {\n            type: [Number, String],\n            default: 80\n        },\n        floatingLabel: {\n            type: Boolean,\n            default: false\n        },\n        errorType: {\n            type: String,\n            default: 'label'\n        },\n        tooltipPosition: {\n            type: String,\n            default: 'right'\n        }\n    },\n    data() {\n        return {\n            fields: [],\n            errors: {}\n        }\n    },\n    computed: {\n        valid() {\n            let count = 0;\n            for (let field in this.errors) {\n                count += this.errors[field].length;\n            }\n            return count == 0;\n        },\n        invalid() {\n            return !this.valid;\n        }\n    },\n    methods: {\n        fieldAdd(f) {\n            this.fields.push(f);\n            if (f.validateOnCreate) {\n                this.validateField(f);\n            }\n        },\n        fieldRemove(f) {\n            let index = this.fields.indexOf(f);\n            if (index >= 0) {\n                this.fields.splice(index, 1);\n            }\n        },\n        fieldFocus() {\n\n        },\n        fieldBlur(f) {\n            if (f.validateOnBlur) {\n                this.validateField(f);\n            }\n        },\n        fieldChange(f) {\n            if (f.validateOnChange) {\n                this.validateField(f);\n            }\n        },\n\n        validate(callback) {\n            let vtotal = this.fields.length;\n            let vcount = 0;\n            this.fields.forEach(field => {\n                this.validateField(field, () => {\n                    vcount++;\n                    if (vcount >= vtotal && callback) {\n                        callback(this.getErrors());\n                    }\n                });\n            });\n        },\n        validateField(field, callback) {\n            // let name = field.name;\n            let name = field.fieldName;\n            let vtotal = 1;\n            let vcount = 0;\n            let validity = () => {\n                let valid = this.errors[name].length == 0;\n                this.fields.filter(f => f.fieldName == name).forEach(f => f.setValid(valid));\n                vcount++;\n                if (vcount >= vtotal) {\n                    this.errors = Object.assign({}, this.errors);\n                    this.$emit('validate', this.errors);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n            let setMessage = (message, param) => {\n                param = param || [];\n                for (var i = 0; i < param.length; i++) {\n                    message = message.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), param[i]);\n                }\n                this.errors[name].push(message);\n            };\n            let doValidate = (vtype, vparam) => {\n                if (!vtype) {\n                    validity();\n                    return;\n                }\n                let value = this.model[name];\n                if (vtype != 'required') {\n                    if (window.ValidateRules['required']['validator'](value) == false) {\n                        validity();\n                        return;\n                    }\n                }\n                if (vparam && vparam.validator) {\n                    let result = vparam.validator(value);\n                    if (result instanceof Promise) {\n                        result.then(valid => {\n                            if (!valid) {\n                                setMessage(vparam.message);\n                            }\n                            validity();\n                        });\n                    } else {\n                        if (!result) {\n                            setMessage(vparam.message);\n                        }\n                        validity();\n                    }\n                    return;\n                }\n\n                let parts = /([a-zA-Z_]+)(.*)/.exec(vtype);\n                vtype = parts[1];\n                let paramStr = parts[2] || '';\n                let rule = window.ValidateRules[vtype];\n                if (rule) {\n                    let message = window.Locale.t('Rules.' + vtype, rule['message']);\n                    if (this.messages && this.messages[name]) {\n                        message = this.messages[name][vtype] || message;\n                    }\n                    let param = vparam || eval(paramStr) || [];\n                    let result = rule['validator'](value, param);\n                    if (result instanceof Promise) {\n                        result.then((valid) => {\n                            if (!valid) {\n                                setMessage(message, param);\n                            }\n                            validity();\n                        });\n                    } else {\n                        if (!result) {\n                            setMessage(message, param);\n                        }\n                        validity();\n                    }\n                } else {\n                    validity();\n                }\n            };\n\n            if (!this.rules) {\n                return;\n            }\n            this.errors[name] = [];\n            let rule = this.rules[name];\n            if (!rule) {\n                doValidate();\n                return;\n            }\n            if (rule instanceof Array) {\n                vtotal = rule.length;\n                for (let i = 0; i < rule.length; i++) {\n                    doValidate(rule[i]);\n                }\n            } else if (typeof rule == 'string') {\n                vtotal = 1;\n                doValidate(rule);\n            } else {\n                vtotal = Object.keys(rule).length;\n                for (let vtype in rule) {\n                    let vparam = rule[vtype];\n                    doValidate(vtype, vparam);\n                }\n            }\n        },\n        hasError(name) {\n            return this.getError(name) != null;\n        },\n        getError(name) {\n            let errors = this.errors[name];\n            return errors ? errors[0] : null;\n        },\n        getErrors(name) {\n            if (name) {\n                let errors = this.errors[name];\n                return errors.length ? errors : null;\n            } else {\n                if (this.valid) {\n                    return null;\n                } else {\n                    let errors = {};\n                    for (let field in this.errors) {\n                        if (this.errors[field].length) {\n                            errors[field] = this.errors[field];\n                        }\n                    }\n                    return errors;\n                }\n            }\n        },\n        getValue(name) {\n            return this.model[name];\n        },\n        isFocused(name) {\n            const ff = this.fields.filter(f => f.fieldName == name);\n            if (ff.length) {\n                return ff[0].focused || false;\n            }\n            return false;\n        }\n    },\n    render() {\n        return (\n            <form>\n                {this.$slots.default()}\n            </form>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'TooltipContent',\n    props: {\n        tooltipIdIndex: Number,\n        target: HTMLElement,\n        content: [String, Object],\n        component: [String, Object, Function],\n        propsData: Object,\n        store: Object,\n        tooltipCls: String,\n        tooltipStyle: Object,\n        zIndex: {\n            type: Number,\n            default: 11000000\n        },\n        position: {\n            type: String,\n            default: 'bottom'\n        },\n        trackMouse: {\n            type: Boolean,\n            default: false\n        },\n        trackMouseX: {\n            type: Number,\n            default: 0\n        },\n        trackMouseY: {\n            type: Number,\n            default: 0\n        },\n        deltaX: {\n            type: Number,\n            default: 0\n        },\n        deltaY: {\n            type: Number,\n            default: 0\n        },\n        valign: {\n            type: String,\n            default: 'middle'\n        },\n        showDelay: {\n            type: Number,\n            default: 200\n        },\n        hideDelay: {\n            type: Number,\n            default: 200\n        },\n        closed: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tooltipShow: Function,\n        tooltipHide: Function\n    },\n    data() {\n        return {\n            closedState: this.closed,\n            contentState: this.content,\n            left: 0,\n            top: 0,\n            targetWidth: 0,\n            targetHeight: 0,\n            tipWidth: 0,\n            tipHeight: 0,\n            showTimer: null,\n            hideTimer: null\n        }\n    },\n    watch: {\n        closed() {\n            this.setClosed(this.closed);\n        },\n        content() {\n            this.contentState = this.content;\n            if (this.$refs.tooltipRef) {\n                this.$nextTick(() => {\n                    this.setClosed(this.closedState)\n                })\n            }\n        }\n    },\n    computed: {\n        tooltipClasses() {\n            return ['tooltip', 'tooltip-' + this.position, this.tooltipCls];\n        },\n        tooltipStyles() {\n            return [this.tooltipStyle, {\n                left: this.left + 'px',\n                top: this.top + 'px',\n                display: 'block',\n                zIndex: this.zIndex\n            }];\n        }\n    },\n    mounted() {\n        window.EventHub.$on('tooltipUpdate', (props) => {\n            if (this.tooltipIdIndex == props.tooltipIdIndex) {\n                this.contentState = props.content;\n                this.setClosed(this.closedState)\n            }\n        })\n        window.EventHub.$on('tooltipShow', (props) => {\n            if (this.tooltipIdIndex == props.tooltipIdIndex) {\n                this.show();\n            }\n        })\n        window.EventHub.$on('tooltipHide', (props) => {\n            if (this.tooltipIdIndex == props.tooltipIdIndex) {\n                this.hide();\n            }\n        })\n    },\n    methods: {\n        onMouseEnter() {\n            this.show();\n        },\n        onMouseLeave() {\n            this.hide();\n        },\n        getPosition(pos = 'bottom') {\n            pos = pos || 'bottom';\n            let left = 0;\n            let top = 0;\n            let offset = domHelper.offset(this.target);\n            let targetWidth = this.targetWidth;\n            let targetHeight = this.targetHeight;\n            let tipWidth = this.tipWidth;\n            let tipHeight = this.tipHeight;\n            if (this.trackMouse) {\n                left = this.trackMouseX + this.deltaX;\n                top = this.trackMouseY + this.deltaY;\n                targetWidth = targetHeight = 0;\n            } else {\n                left = offset.left + this.deltaX;\n                top = offset.top + this.deltaY;\n            }\n            switch (pos) {\n                case 'right':\n                    left += targetWidth + 12 + (this.trackMouse ? 12 : 0);\n                    if (this.valign == 'middle') {\n                        top -= (tipHeight - targetHeight) / 2;\n                    }\n                    break;\n                case 'left':\n                    left -= tipWidth + 12 + (this.trackMouse ? 12 : 0);\n                    if (this.valign == 'middle') {\n                        top -= (tipHeight - targetHeight) / 2;\n                    }\n                    break;\n                case 'top':\n                    left -= (tipWidth - targetWidth) / 2;\n                    top -= tipHeight + 12 + (this.trackMouse ? 12 : 0);\n                    break;\n                case 'bottom':\n                    left -= (tipWidth - targetWidth) / 2;\n                    top += targetHeight + 12 + (this.trackMouse ? 12 : 0);\n                    break;\n            }\n            return {\n                left: left,\n                top: top\n            };\n        },\n        reposition() {\n            if (!this.$refs.tooltipRef) {\n                return;\n            }\n            let view = domHelper.getViewport();\n            let pos = this.getPosition(this.position);\n            if (this.position == 'top' && pos.top < domHelper.getScrollTop()) {\n                pos = this.getPosition('bottom');\n            } else if (this.position == 'bottom') {\n                if (pos.top + this.tipHeight > view.height + domHelper.getScrollTop()) {\n                    pos = this.getPosition('top');\n                }\n            }\n            if (pos.left < domHelper.getScrollLeft()) {\n                if (this.position == 'left') {\n                    pos = this.getPosition('right');\n                } else {\n                    let arrowLeft = this.tipWidth / 2 + pos.left - domHelper.getScrollLeft();\n                    this.$refs.arrowOuterRef.style.left = arrowLeft + 'px';\n                    this.$refs.arrowInnerRef.style.left = arrowLeft + 'px';\n                    pos.left = domHelper.getScrollLeft();\n                }\n            } else if (pos.left + this.tipWidth > view.width + domHelper.getScrollLeft()) {\n                if (this.position == 'right') {\n                    pos = this.getPosition('left');\n                } else {\n                    let arrowLeft = pos.left;\n                    pos.left = view.width + domHelper.getScrollLeft() - this.tipWidth;\n                    arrowLeft = this.tipWidth / 2 - (pos.left - arrowLeft);\n                    this.$refs.arrowOuterRef.style.left = arrowLeft + 'px';\n                    this.$refs.arrowInnerRef.style.left = arrowLeft + 'px';\n                }\n            }\n            this.left = pos.left;\n            this.top = pos.top;\n            let bc = 'border-' + this.position + '-color';\n            let borderColor = this.$refs.tooltipRef.style.borderColor;\n            let backColor = this.$refs.tooltipRef.style.backgroundColor;\n            this.$refs.arrowOuterRef.style[bc] = borderColor;\n            this.$refs.arrowInnerRef.style[bc] = backColor;\n        },\n        setClosed(closed) {\n            this.closedState = closed;\n            if (!this.closedState) {\n                this.$nextTick(() => {\n                    // this.$refs.tooltipRef.style.display = 'block';\n                    this.targetWidth = domHelper.outerWidth(this.target);\n                    this.targetHeight = domHelper.outerHeight(this.target);\n                    this.tipWidth = domHelper.outerWidth(this.$refs.tooltipRef);\n                    this.tipHeight = domHelper.outerHeight(this.$refs.tooltipRef);\n                    this.reposition();\n                    if (this.tooltipShow) {\n                        this.tooltipShow();\n                    }\n                });\n            } else {\n                if (this.tooltipHide) {\n                    this.tooltipHide();\n                }\n            }\n        },\n        show() {\n            if (this.disabled) {\n                return;\n            }\n            if (!this.contentState && !this.component) {\n                return;\n            }\n            this.clearTimeouts();\n            this.showTimer = setTimeout(() => {\n                this.setClosed(false);\n            }, this.showDelay);\n        },\n        hide() {\n            this.clearTimeouts();\n            this.hideTimer = setTimeout(() => {\n                this.setClosed(true);\n            }, this.hideDelay);\n        },\n        clearTimeouts() {\n            clearTimeout(this.showTimer);\n            clearTimeout(this.hideTimer);\n        }\n\n    },\n    render() {\n        if (this.closedState) {\n            return null;\n        }\n        if (!this.contentState) {\n            return null;\n        }\n        return (\n            <div ref=\"tooltipRef\" tabindex=\"-1\"\n                class={this.tooltipClasses}\n                style={this.tooltipStyles}\n                onMouseenter={this.onMouseEnter}\n                onMouseleave={this.onMouseLeave}>\n                <div class=\"tooltip-content\">\n                    {this.contentState}\n                </div>\n                <div ref=\"arrowOuterRef\" class=\"tooltip-arrow-outer\"></div>\n                <div ref=\"arrowInnerRef\" class=\"tooltip-arrow\"></div>\n            </div>\n        )\n    }\n}\n","﻿import { createVNode, render } from 'vue';\nimport domHelper from '../base/DomHelper';\nimport TooltipContent from './TooltipContent';\n\nlet getOptions = (el, value) => {\n    let opts = typeof value == 'object'\n        ? Object.assign({}, value)\n        : { content: String(value) };\n    return Object.assign({\n        showEvent: 'mouseenter',\n        hideEvent: 'mouseleave',\n        target: el\n    }, opts);\n};\n\nlet bindEvents = (el, showEvent = '', hideEvent = '') => {\n    let bind = (key, eventName, handler) => {\n        if (el[key]) {\n            if (el[key] != eventName) {\n                el[key].split(' ').forEach(event => {\n                    domHelper.unbind(el, event, handler);\n                });\n                el[key] = eventName;\n                el[key].split(' ').forEach(event => {\n                    domHelper.bind(el, event, handler);\n                });\n            }\n        } else {\n            el[key] = eventName;\n            el[key].split(' ').forEach(event => {\n                domHelper.bind(el, event, handler);\n            });\n        }\n    }\n    bind('_showEvent', showEvent, el._activeHandler);\n    bind('_hideEvent', hideEvent, el._deactiveHandler);\n};\n\nwindow.TooltipIdIndex = window.TooltipIdIndex || 1;\n\nexport default {\n    name: 'Tooltip',\n    mounted(el, binding) {\n        el._activeHandler = function () {\n            if (!el._tip) {\n                const Tip = createVNode(TooltipContent, {\n                    ...el._opts,\n                    store: el._opts.store,\n                    tooltipIdIndex: window.TooltipIdIndex++\n                });\n                el._tip = Tip;\n                render(Tip, document.querySelector('body'))\n            } else {\n                Object.assign(el._tip.props, el._opts);\n                window.EventHub.$emit('tooltipUpdate', el._tip.props)\n            }\n            window.EventHub.$emit('tooltipShow', el._tip.props)\n        };\n        el._deactiveHandler = function () {\n            if (el._tip) {\n                window.EventHub.$emit('tooltipHide', el._tip.props)\n                el._tip = null;\n            }\n        }\n        el._opts = getOptions(el, binding.value);\n        bindEvents(el, el._opts.showEvent, el._opts.hideEvent);\n    },\n    updated(el, binding) {\n        el._opts = getOptions(el, binding.value);\n        if (el._tip) {\n            Object.assign(el._tip.props, el._opts);\n            window.EventHub.$emit('tooltipUpdate', el._tip.props)\n        }\n        bindEvents(el, el._opts.showEvent, el._opts.hideEvent);\n    },\n    beforeUnmount(el) {\n        if (el._tip) {\n            el._tip = null;\n        }\n        bindEvents(el, '', '');\n    }\n}\n","﻿import domHelper from '../base/DomHelper';\nimport Form from '../form/Form';\nimport Tooltip from '../tooltip/Tooltip';\n\nexport default {\n    name: 'TreeNodeEditor',\n    components: {\n        Form\n    },\n    directives: {\n        Tooltip\n    },\n    props: {\n        tree: Object,\n        node: Object\n    },\n    data() {\n        return {\n            width: 50,\n            error: null\n        }\n    },\n    mounted() {\n        this.autoSizeInput();\n        const input = this.getInput();\n        domHelper.bind(input, 'keydown', this.onKeyDown);\n        this.$refs.form.validate();\n        this.$nextTick(() => input.focus());\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.getInput(), 'keydown', this.onKeyDown);\n    },\n    methods: {\n        onKeyDown(event) {\n            if (event.keyCode == 13) {   // enter\n                this.tree.endEdit();\n            } else if (event.keyCode == 27) {    // esc\n                this.tree.cancelEdit();\n            }\n            setTimeout(() => this.autoSizeInput())\n        },\n        getInput() {\n            return this.$el.querySelector('.textbox-text');\n        },\n        autoSizeInput() {\n            const input = this.getInput();\n            if (!input) {\n                return;\n            }\n            let style = getComputedStyle(input);\n            let tmp = document.createElement('span');\n            Object.assign(tmp.style, {\n                position: 'absolute',\n                top: -9999,\n                left: -9999,\n                width: 'auto',\n                fontFamily: style.fontFamily,\n                fontSize: style.fontSize,\n                fontWeight: style.fontWeight,\n                whiteSpace: 'nowrap'\n            });\n            tmp.innerHTML = input.value;\n            document.body.appendChild(tmp);\n\n            let getWidth = (val) => {\n                val = val || '';\n                var s = val.replace(/&/g, '&amp;').replace(/\\s/g, ' ').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n                tmp.innerHTML = s;\n                return domHelper.outerWidth(tmp);\n            };\n            let width = getWidth(input.value);\n            document.body.removeChild(tmp);\n            this.width = width + 50;\n        }\n    },\n    render() {\n        let editor = null;\n        if (this.tree.$slots.editor) {\n            editor = this.tree.$slots.editor(this.node);\n            editor[0].data.class = 'f-full';\n            // editor[0].data.style = {verticalAlign:'top',height:'auto'};\n        } else {\n            editor = (\n                <TextBox\n                    class=\"f-full\"\n                    name=\"text\"\n                    value={this.node.text}\n                    onValueChange={e => {\n                        this.node.text = e.currentValue;\n                        this.$refs.form.validate();\n                    }} />\n            )\n        }\n        return (\n            <Form\n                ref=\"form\"\n                class=\"tree-title tree-editing f-inline-row\"\n                style={{ width: this.width + 'px' }}\n                model={this.node}\n                rules={{ 'text': this.tree.editRules }}\n                onValidate={errors => {\n                    if (errors && errors['text'].length) {\n                        this.tree.editingItem.invalid = true;\n                        this.error = errors['text'][0];\n                    } else {\n                        this.tree.editingItem.invalid = false;\n                        this.error = null;\n                    }\n                }}\n                onSubmit={e => e.preventDefault()}\n                v-Tooltip={Object.assign({\n                    closed: !this.error,\n                    content: this.error\n                }, this.tree.tipOptions)}\n            >\n                {editor}\n            </Form>\n        )\n\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport { MyEvent } from '../base/DomHelper';\n\nclass DraggableClass {\n    constructor(el, value=null){\n        this.updateOptions(value);\n        this.$el = el;\n\t}\n\tupdateOptions(value){\n        let opts = Object.assign({\n\t\t\tscope: null,\n            handle: null,\n            disabled: false,\n            revert: false,\n            deltaX: null,\n            deltaY: null,\n            edge: 0,\n            delay: 100,\n            axis: null, // v or h\n            cursor: 'move',\n\t\t\tproxy: null,\n\t\t\tdragStart: () => {},\n\t\t\tdrag: () => {},\n\t\t\tdragEnd: () => {}\n        }, this, value||{});\n\t\tObject.assign(this, opts);\n\t}\n    bindEvents(){\n\t\tthis.$el._downHandler = (e) => {\n\t\t\tthis.onMouseDown(e);\n\t\t};\n        this.$el._moveHandler = (e) => {\n            this.onMouseMove(e);\n        };\n        this.$el._leaveHandler = (e) => {\n            this.onMouseLeave(e);\n        };\n        domHelper.bind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.bind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.bind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.bind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.bind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tunbindEvents(){\n        domHelper.unbind(this.$el, 'mousedown', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'touchstart', this.$el._downHandler);\n        domHelper.unbind(this.$el, 'mousemove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'touchmove', this.$el._moveHandler);\n        domHelper.unbind(this.$el, 'mouseleave', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchcancel', this.$el._leaveHandler);\n        domHelper.unbind(this.$el, 'touchend', this.$el._leaveHandler);\n\t}\n\tparseEvent(event) {\n\t\t// let touchEvents = ['touchstart','touchmove','touchend','touchcancel'];\n\t\t// if (touchEvents.indexOf(event.type) >= 0){\n\t\t// \tlet touch = event.touches[0] || event.changedTouches[0];\n\t\t// \tevent.pageX = touch.pageX;\n\t\t// \tevent.pageY = touch.pageY;\n\t\t// }\n\t\t// return event;\n\t\treturn new MyEvent(event);\n\t}\n\tgetHandle() {\n\t\tif (this.handle){\n\t\t\tif (this.handle instanceof Element){\n\t\t\t\treturn this.handle;\n\t\t\t} else {\n\t\t\t\treturn this.$el.querySelector(this.handle);\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.$el;\n\t\t}\n\t}\n\tcheckArea(e) {\n\t\tlet handle = this.getHandle();\n\t\tlet offset = domHelper.offset(handle);\n\t\tlet width = domHelper.outerWidth(handle);\n\t\tlet height = domHelper.outerHeight(handle);\n\t\tlet t = e.pageY - offset.top;\n\t\tlet r = offset.left + width - e.pageX;\n\t\tlet b = offset.top + height - e.pageY;\n\t\tlet l = e.pageX - offset.left;\n\t\t\n\t\treturn Math.min(t,r,b,l) > this.edge;\n\t}\n\tdoMove(event){\n\t\tevent = this.parseEvent(event);\n\t\tthis.state.pageX = event.pageX;\n\t\tthis.state.pageY = event.pageY;\n\t\tlet x1 = event.pageX;\n\t\tlet y1 = event.pageY;\n\t\tlet x2 = this.state.startX;\n\t\tlet y2 = this.state.startY;\n\t\tlet d = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n\t\tif (d > 3 && !this.isDragging){\n\t\t\tthis.isDragging = true;\n\t\t\tif (this.proxy){\n\t\t\t\tthis.proxy.closed = false;\n\t\t\t} else {\n\t\t\t\tthis.$el.style.position = 'absolute';\n\t\t\t}\n\t\t\tthis.doDrag(event);\n\t\t\tthis.applyDrag();\n\t\t\tthis.dragStart(this.state);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.isDragging){\n\t\t\tthis.doDrag(event);\n\t\t\tthis.applyDrag();\n\t\t\tthis.checkDrag(event);\n\t\t\tthis.drag(this.state);\n\t\t}\n\t\treturn false;\n\t}\n\tdoUp(event){\n\t\tif (!this.isDragging){\n\t\t\tthis.clearDragging();\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tthis.doMove(event);\n\t\tif (this.revert){\n\t\t\tif (this.checkDrop(event)){\n\t\t\t\tthis.restorePosition();\n\t\t\t} else {\n\t\t\t\tthis.revertPosition();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.$el.style.position = 'absolute';\n\t\t\tthis.$el.style.left = this.state.left+'px';\n\t\t\tthis.$el.style.top = this.state.top+'px';\n\t\t\tthis.checkDrop(event);\n\t\t}\n\t\tthis.clearDragging();\n\t\tthis.dragEnd(this.state);\n\t\treturn false;\n\t}\n\tdoDrag(e) {\n\t\tlet dragData = this.state;\n\t\tlet left = 0;\n\t\tlet top = 0;\n\t\tif (this.proxy){\n\t\t\tthis.proxy.reverting = false;\n\t\t\tif (this.deltaX != null){\n\t\t\t\tleft = e.pageX + this.deltaX;\n\t\t\t} else {\n\t\t\t\tleft = e.pageX - dragData.offsetWidth;\n\t\t\t}\n\t\t\tif (this.deltaY != null){\n\t\t\t\ttop = e.pageY + this.deltaY;\n\t\t\t} else {\n\t\t\t\ttop = e.pageY - dragData.offsetHeight;\n\t\t\t}\n\t\t} else {\n\t\t\tleft = dragData.startLeft + e.pageX - dragData.startX;\n\t\t\ttop = dragData.startTop + e.pageY - dragData.startY;\n\t\t}\n\t\tif (this.$el.parentNode != document.body){\n\t\t\tleft += this.$el.parentNode.scrollLeft;\n\t\t\ttop += this.$el.parentNode.scrollTop;\n\t\t}\n\t\tif (this.axis == 'h'){\n\t\t\tdragData.left = left;\n\t\t} else if (this.axis == 'v'){\n\t\t\tdragData.top = top;\n\t\t} else {\n\t\t\tdragData.left = left;\n\t\t\tdragData.top = top;\n\t\t}\n\t}\n\tapplyDrag() {\n\t\tif (this.proxy){\n\t\t\tthis.proxy.left = this.state.left;\n\t\t\tthis.proxy.top = this.state.top;\n\t\t} else {\n\t\t\tthis.$el.style.left = this.state.left+'px';\n\t\t\tthis.$el.style.top = this.state.top+'px';\n\t\t}\n\t\tdocument.body.style.cursor = this.cursor;\n\t}\n\tclearDragging() {\n\t\tthis.unbindDocumentEvents();\n\t\tthis.isDragging = false;\n\t\tsetTimeout(() => {\n\t\t\tdocument.body.style.cursor = '';\n\t\t});\n\t}\n\tfindDroppable(e) {\n\t\tfor(let i=DraggableClass.droppables.length-1; i>=0; i--){\n\t\t\tlet dropObj = DraggableClass.droppables[i];\n\t\t\tif (dropObj.disabled){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (dropObj.$el == this.$el){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet p2 = domHelper.offset(dropObj.$el);\n\t\t\tlet width = domHelper.outerWidth(dropObj.$el);\n\t\t\tlet height = domHelper.outerHeight(dropObj.$el);\n\t\t\tif (e.pageX > p2.left && e.pageX < p2.left + width\n\t\t\t\t\t&& e.pageY > p2.top && e.pageY < p2.top + height){\n\t\t\t\tif (dropObj.checkDrop(this.scope)){\n\t\t\t\t\treturn dropObj;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tcheckDrag(e) {\n\t\tlet dropObj = this.findDroppable(e);\n\t\tif (this.currDroppable && this.currDroppable != dropObj){\n\t\t\tif (this.entered){\n\t\t\t\tthis.entered = false;\n\t\t\t\tthis.currDroppable.dragLeave(this.scope);\n\t\t\t\tthis.currDroppable = null;\n\t\t\t}\n\t\t}\n\t\tif (dropObj){\n\t\t\tthis.currDroppable = dropObj;\n\t\t\tif (!this.entered){\n\t\t\t\tthis.entered = true;\n\t\t\t\tdropObj.dragEnter(this.scope);\n\t\t\t}\n\t\t\tdropObj.dragOver(this.scope);\n\t\t}\n\t}\n\tcheckDrop(e) {\n\t\tlet dropObj = this.findDroppable(e);\n\t\tif (dropObj){\n\t\t\tif (this.revert){\n\t\t\t\tthis.restorePosition();\n\t\t\t}\n\t\t\tthis.removeProxy();\n\t\t\tthis.entered = false;\n\t\t\tdropObj.drop(this.scope);\n\t\t\treturn true;\n\t\t}\n\t\tif (!this.revert){\n\t\t\tthis.removeProxy();\n\t\t}\n\t\treturn false;\n\t}\n\tremoveProxy() {\n\t\tif (this.proxy){\n\t\t\tthis.proxy.reverting = false;\n\t\t\tthis.proxy.closed = true;\n\t\t}\n\t}\n\trevertPosition() {\n\t\tif (this.proxy){\n\t\t\tif (this.state.startX != this.state.left || this.state.startY != this.state.top){\n\t\t\t\tthis.proxy.reverting = true;\n\t\t\t\tthis.proxy.left = this.state.startX - this.state.offsetWidth;\n\t\t\t\tthis.proxy.top = this.state.startY - this.state.offsetHeight;\n\t\t\t} else {\n\t\t\t\tthis.proxy.closed = true;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.$el._transitionendHandler = () => {\n\t\t\t\tdomHelper.removeClass(this.$el, 'draggable-reverting');\n\t\t\t\tthis.$el.style.position = this.state.startPosition;\n\t\t\t\tdomHelper.unbind(this.$el, 'transitionend');\n\t\t\t};\n\t\t\tdomHelper.bind(this.$el, 'transitionend', this.$el._transitionendHandler);\n\t\t\tdomHelper.addClass(this.$el, 'draggable-reverting');\n\t\t\tthis.$el.style.left = this.state.startLeft+'px';\n\t\t\tthis.$el.style.top = this.state.startTop+'px';\n\t\t}\n\t}\n\trestorePosition() {\n\t\tthis.$el.position = this.state.startPosition;\n\t\tthis.$el.style.left = this.state.startLeft+'px';\n\t\tthis.$el.style.top = this.state.startTop+'px';\n\t}\n\tonMouseDown(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tif (this.checkArea(event) == false){\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tlet handle = this.getHandle();\n\t\tlet style = getComputedStyle(this.$el);\n\t\tlet position = domHelper.position(this.$el);\n\t\tlet offset = domHelper.offset(this.$el);\n\t\tthis.state = {\n\t\t\ttarget: this,\n\t\t\tstartPosition: style.position,\n\t\t\tstartLeft: position.left,\n\t\t\tstartTop: position.top,\n\t\t\tleft: position.left,\n\t\t\ttop: position.top,\n\t\t\tstartX: event.pageX,\n\t\t\tstartY: event.pageY,\n\t\t\twidth: domHelper.outerWidth(this.$el),\n\t\t\theight: domHelper.outerHeight(this.$el),\n\t\t\toffsetWidth: event.pageX - offset.left,\n\t\t\toffsetHeight: event.pageY - offset.top\n\t\t};\n\t\thandle.style.cursor = '';\n\t\tthis.bindDocumentEvents();\n\t}\n\tonMouseMove(event){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\tif (this.isDragging){\n\t\t\treturn;\n\t\t}\n\t\tevent = this.parseEvent(event);\n\t\tlet handle = this.getHandle();\n\t\tif (this.checkArea(event)){\n            handle.style.cursor = this.cursor;\n\t\t} else {\n\t\t\t// handle.style.cursor = '';\n\t\t\thandle.style.cursor = this.$el.resizeCursor || '';\n\t\t}\n    }\n    onMouseLeave(){\n\t\tif (this.disabled){\n\t\t\treturn;\n\t\t}\n\t\t// event = this.parseEvent(event);\n\t\tlet handle = this.getHandle();\n\t\thandle.style.cursor = '';\n\t}\n\tbindDocumentEvents() {\n\t\tthis.$el._docMoveHandler = (e) => {\n\t\t\treturn this.doMove(e);\n\t\t};\n\t\tthis.$el._docUpHandler = (e) => {\n\t\t\treturn this.doUp(e);\n\t\t};\n\t\tdomHelper.bind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.bind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.bind(document, 'touchend', this.$el._docUpHandler);\n\t}\n\tunbindDocumentEvents() {\n\t\tdomHelper.unbind(document, 'mousemove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'touchmove', this.$el._docMoveHandler);\n\t\tdomHelper.unbind(document, 'mouseup', this.$el._docUpHandler);\n\t\tdomHelper.unbind(document, 'touchend', this.$el._docUpHandler);\n\t}\n}\n\nDraggableClass.droppables = [];\n\nexport default DraggableClass;\n","﻿import DraggableClass from './DraggableClass';\n\nexport default {\n    name: 'Draggable',\n    mounted(el, binding){\n        el._dragInstance = new DraggableClass(el, binding.value);\n        el._dragInstance.bindEvents();\n    },\n    updated(el, binding){\n        el._dragInstance.updateOptions(binding.value);\n    },\n    beforeUnmount(el){\n        el._dragInstance.unbindEvents();\n    }\n}","﻿export default class DroppableClass {\n    constructor(el, value=null){\n        this.updateOptions(value);\n        this.$el = el;\n\t}\n    updateOptions(value){\n        let opts = Object.assign({\n            scope: null,\n            disabled: false,\n            dragEnter: () => {},\n            dragOver: () => {},\n            dragLeave: () => {},\n            drop: () => {}\n        }, this, value||{});\n        Object.assign(this, opts);\n    }\n\tcheckDrop(scope=null) {\n\t\tif (!scope || !this.scope){\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof this.scope == 'string' && this.scope == scope){\n\t\t\treturn true;\n\t\t} else if (this.scope instanceof Array){\n\t\t\tfor(let i=0; i<this.scope.length; i++){\n\t\t\t\tif (this.scope[i] == scope){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}","﻿import DraggableClass from '../draggable/DraggableClass';\nimport DroppableClass from './DroppableClass';\n\nexport default {\n    name: 'Droppable',\n    mounted(el, binding){\n        el._dropInstance = new DroppableClass(el, binding.value);\n        DraggableClass.droppables.push(el._dropInstance);\n    },\n    updated(el, binding){\n        el._dropInstance.updateOptions(binding.value);\n    },\n    beforeUnmount(el){\n        let index = DraggableClass.droppables.indexOf(el._dropInstance);\n\t\tif (index >= 0){\n\t\t\tDraggableClass.droppables.splice(index, 1);\n        }\n        el._dropInstance = null;\n    }\n}","﻿export default {\n    name: 'TreeNodeIcon',\n    props: {\n        tree: Object,\n        node: Object\n    },\n    render(){\n        return this.tree.$slots['icon']({node:this.node})\n    }\n}","﻿import SlideUpDown from '../base/SlideUpDown';\nimport TreeNodeTitle from './TreeNodeTitle';\nimport TreeNodeEditor from './TreeNodeEditor';\nimport domHelper from '../base/DomHelper';\nimport Draggable from '../draggable/Draggable';\nimport Droppable from '../droppable/Droppable';\nimport treeHelper from '../base/TreeHelper';\nimport TreeNodeIcon from './TreeNodeIcon';\n\nexport default {\n    name: 'TreeNode',\n    components: { TreeNodeTitle, TreeNodeEditor, TreeNodeIcon },\n    directives: {\n        SlideUpDown,\n        Draggable,\n        Droppable\n    },\n    props: {\n        tree: Object,\n        node: Object,\n        pnode: Object,\n        depth: {\n            type: Number,\n            default: 0\n        },\n        nodeCls: String\n    },\n    data() {\n        return {\n            loading: false,\n            innerNode: this.node,\n            dndCls: null\n        }\n    },\n    created() {\n        this.node.parent = this.pnode;\n    },\n    computed: {\n        indentWidth() {\n            if (this.isLeaf) {\n                return (this.depth + 1) * 16;\n            } else {\n                return this.depth * 16;\n            }\n        },\n        nodeClasses() {\n            return ['tree-node f-row f-vcenter', this.dndCls, this.node.nodeCls, {\n                'tree-node-hover': this.node == this.tree.highlightNode,\n                'tree-node-selected': this.isSelected,\n                'tree-node-disabled': this.node.disabled\n            }];\n        },\n        hitClasses() {\n            return ['tree-hit', {\n                'tree-expanded': this.isExpanded,\n                'tree-collapsed': this.isCollapsed\n            }];\n        },\n        iconClasses() {\n            return ['tree-icon tree-folder', this.node.iconCls, {\n                'tree-folder-open': this.isExpanded,\n                'tree-file': this.isLeaf,\n                'tree-loading': this.loading\n            }];\n        },\n        checkboxClasses() {\n            let cc = ['unchecked', 'checked', 'indeterminate'];\n            let index = cc.indexOf(this.node.checkState);\n            if (index == -1) {\n                index = 0;\n            }\n            return 'tree-checkbox tree-checkbox' + index;\n        },\n        isExpanded() {\n            if (!this.node.state || this.node.state == 'open') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isCollapsed() {\n            if (this.node.state && this.node.state == 'closed') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isSelected() {\n            return this.node == this.tree.selectionState;\n        },\n        isLeaf() {\n            if (this.node.state == 'closed') {\n                return false;\n            } else {\n                if (this.node.children && this.node.children.length) {\n                    this.loading = false;\n                    return false;\n                } else {\n                    if (this.loading) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        }\n    },\n    methods: {\n        getDraggableOpts() {\n            return {\n                disabled: this.tree.dnd ? this.node.disabled : true,\n                revert: true,\n                deltaX: 0,\n                deltaY: 0,\n                edge: 5,\n                scope: this.tree.dragScope,\n                proxy: this.tree.$refs.proxy,\n                dragStart: (event) => { this.onDragStart(event) },\n                dragEnd: (event) => { this.onDragEnd(event) }\n            }\n        },\n        getDroppableOpts() {\n            return {\n                disabled: this.tree.dnd ? (this.node.disabled || this.node.dropDisabled) : true,\n                node: this.node,\n                dragOver: (scope) => { this.onDragOver(scope) },\n                dragLeave: (scope) => { this.onDragLeave(scope) },\n                drop: (scope) => { this.onDrop(scope) }\n            }\n        },\n        onDragStart(event) {\n            Object.assign(this.tree.dragScope, {\n                node: this.node,\n                event: event,\n                obj: this\n            })\n            this.tree.dragCls = 'tree-dnd-no';\n            treeHelper.forNodes([this.node], (n) => {\n                n.dropDisabled = true;\n            })\n        },\n        onDragEnd() {\n            treeHelper.forNodes(this.tree.innerData, (node) => {\n                node.dropDisabled = false;\n            })\n        },\n        onDragOver(scope) {\n            if (this.node.dropDisabled) {\n                this.tree.dragCls = 'tree-dnd-no';\n                return;\n            }\n            this.tree.dragCls = 'tree-dnd-yes';\n            const event = scope.event;\n            const el = event.target.currDroppable.$el;\n            const top = domHelper.offset(el).top;\n            const bottom = top + domHelper.outerHeight(el);\n            const pageY = event.pageY;\n            if (pageY > top + (bottom - top) / 2) {\n                if (bottom - pageY < 5) {\n                    scope.point = 'bottom';\n                    this.dndCls = 'tree-node-bottom';\n                    // this.$set(this, 'dndCls', 'tree-node-bottom')\n                } else {\n                    scope.point = 'append';\n                    this.dndCls = 'tree-node-append';\n                    // this.$set(this, 'dndCls', 'tree-node-append')\n                }\n            } else {\n                if (pageY - top < 5) {\n                    scope.point = 'top';\n                    this.dndCls = 'tree-node-top';\n                    // this.$set(this, 'dndCls', 'tree-node-top')\n                } else {\n                    scope.point = 'append';\n                    this.dndCls = 'tree-node-append';\n                    // this.$set(this, 'dndCls', 'tree-node-append')\n                }\n            }\n\n        },\n        onDragLeave() {\n            this.dndCls = null;\n            // this.$set(this, 'dndCls', null)\n            this.tree.dragCls = 'tree-dnd-no';\n        },\n        onDrop(scope) {\n            this.dndCls = null;\n            // this.$set(this, 'dndCls', null)\n            this.tree.dragCls = null;\n            if (scope.point) {\n                this.tree.$emit('nodeDrop', { from: scope.node, to: this.node, point: scope.point })\n                this.tree.moveNode(scope.node, this.node, scope.point)\n                this.$nextTick(() => {\n                    const event = scope.event;\n                    const el = event.target.$el;\n                    el.style.left = null;\n                    el.style.top = null;\n                })\n            }\n        },\n        toggle(event) {\n            event.stopPropagation();\n            if (this.isExpanded) {\n                this.node.state = 'closed';\n                // this.$set(this.node, 'state', 'closed');\n                this.tree.$emit('nodeCollapse', this.node);\n            } else {\n                this.loading = true;\n                this.node.state = 'open';\n                // this.$set(this.node, 'state', 'open');\n                this.tree.$emit('nodeExpand', this.node);\n            }\n        },\n        onClickNode(event) {\n            const { clickToEdit, dblclickToEdit, editingItem } = this.tree;\n            event.stopPropagation();\n            this.tree.$emit('nodeClick', this.node);\n            this.tree.selectNode(this.node);\n            if (clickToEdit || (dblclickToEdit && editingItem)) {\n                this.tree.beginEdit(this.node, domHelper.closest(event.target, '.tree-node'));\n            }\n        },\n        onDblClickNode(event) {\n            event.stopPropagation();\n            this.tree.$emit('nodeDblClick', this.node);\n            if (this.tree.dblclickToEdit) {\n                this.tree.beginEdit(this.node, domHelper.closest(event.target, '.tree-node'));\n            }\n        },\n        onCheckNode(event) {\n            event.stopPropagation();\n            if (this.node.checkState == 'checked') {\n                this.tree.uncheckNode(this.node);\n            } else {\n                this.tree.checkNode(this.node);\n            }\n        },\n        onNodeContextMenu(event) {\n            this.tree.$emit('nodeContextMenu', { node: this.node, originalEvent: event });\n        }\n\n    },\n    render() {\n        return (\n            <li>\n                <div class={this.nodeClasses}\n                    onMouseenter={() => this.tree.highlightNode = this.node}\n                    onMouseleave={() => this.tree.highlightNode = null}\n                    onContextmenu={this.onNodeContextMenu}\n                    onClick={this.onClickNode}\n                    onDblclick={this.onDblClickNode}\n                    v-Draggable={this.getDraggableOpts()}\n                    v-Droppable={this.getDroppableOpts()}\n                >\n                    <span class=\"tree-indent\" style={{ width: this.indentWidth + 'px' }}></span>\n                    {!this.isLeaf && <span class={this.hitClasses} onClick={this.toggle}></span>}\n                    {!this.tree.$slots['icon'] && <span class={this.iconClasses}></span>}\n                    {this.tree.$slots['icon'] && <TreeNodeIcon tree={this.tree} node={this.node}></TreeNodeIcon>}\n                    {this.tree.checkboxState && <span class={this.checkboxClasses} onClick={this.onCheckNode}></span>}\n                    {!this.tree.isEditing(this.node) && <TreeNodeTitle tree={this.tree} node={this.node}></TreeNodeTitle>}\n                    {this.tree.isEditing(this.node) && <TreeNodeEditor tree={this.tree} node={this.node}></TreeNodeEditor>}\n                </div>\n                {\n                    this.node.children && this.node.children.length > 0 &&\n                    <ul class=\"f-block\" v-SlideUpDown={{ animate: this.tree.animate, collapsed: this.node.state == 'closed', disabled: false }}>\n                        {\n                            this.node.children.map(cnode => (\n                                <>\n                                    {\n                                        !cnode.hidden &&\n                                        <TreeNode node={cnode} pnode={this.node} depth={this.depth + 1} tree={this.tree}></TreeNode>\n                                    }\n                                </>\n                            ))\n                        }\n                    </ul>\n                }\n            </li>\n        )\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport TreeNode from './TreeNode';\n\nexport default {\n    name: 'Tree',\n    components: {\n        TreeNode\n    },\n    props: {\n        data: Array,\n        selection: Object,\n        animate: {\n            type: Boolean,\n            default: false\n        },\n        selectLeafOnly: {\n            type: Boolean,\n            default: false\n        },\n        checkbox: {\n            type: Boolean,\n            default: false\n        },\n        cascadeCheck: {\n            type: Boolean,\n            default: true\n        },\n        clickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        dblclickToEdit: {\n            type: Boolean,\n            default: false\n        },\n        dnd: {\n            type: Boolean,\n            default: false\n        },\n        dndCls: String,\n        dndStyle: Object,\n        editRules: [Array, Object],\n        tipOptions: Object,\n        filterIncludingChild: {\n            type: Boolean,\n            default: false\n        },\n        filter: {\n            type: Function,\n            default: (q, node) => {\n                if (!q) {\n                    return true;\n                }\n                let qq = (q instanceof Array) ? q : [q];\n                qq = qq.map((q) => q.trim()).filter((q) => q);\n                for (let i = 0; i < qq.length; i++) {\n                    let index = node.text.toLowerCase().indexOf(qq[i].toLowerCase());\n                    if (index >= 0) {\n                        return true;\n                    }\n                }\n                return !qq.length;\n            }\n        }\n    },\n    data() {\n        return {\n            highlightNode: null,\n            editingItem: null,\n            innerData: [],\n            selectionState: this.selection,\n            checkboxState: this.checkbox,\n            dragScope: {},\n            dragCls: null\n        }\n    },\n    computed: {\n        tree() {\n            return this;\n        }\n    },\n    watch: {\n        data(value) {\n            this.setData(value);\n        },\n        selection(value) {\n            this.selectNode(value);\n        },\n        checkbox(value) {\n            this.checkboxState = value;\n        }\n    },\n    created() {\n        treeHelper.$vue = this;\n    },\n    mounted() {\n        this.setData(this.data);\n        if (window.EventHub){\n            window.EventHub.$emit('treeMounted', this);\n        }\n    },\n    methods: {\n        afterSelectionChange(){},\n        afterCheckChange(){},\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            this.innerData = Object.assign([], value);\n        },\n        getCheckedNodes(state = 'checked') {\n            let nodes = [];\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.forNodes(this.innerData, (node) => {\n                if (node.checkState == state) {\n                    nodes.push(node);\n                }\n            });\n            return nodes;\n        },\n\n        selectNode(node) {\n            if (node.children && node.children.length && this.selectLeafOnly) {\n                return;\n            }\n            if (this.selectionState != node) {\n                this.selectionState = node;\n                this.$emit('selectionChange', node);\n                this.afterSelectionChange(node);\n            }\n        },\n        checkNode(node) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.checkNode(node, () => {\n                this.$emit('nodeCheck', node);\n                this.$emit('checkChange', this.getCheckedNodes());\n                this.afterCheckChange(this.getCheckedNodes());\n            });\n        },\n        uncheckNode(node) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.uncheckNode(node, () => {\n                this.$emit('nodeUncheck', node);\n                this.$emit('checkChange', this.getCheckedNodes());\n                this.afterCheckChange(this.getCheckedNodes());\n            });\n        },\n        uncheckAllNodes() {\n            treeHelper.uncheckAllNodes(this.innerData, () => {\n                this.$emit('checkChange', []);\n                this.afterCheckChange([]);\n            });\n        },\n        adjustCheck(node) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.adjustCheck(node);\n        },\n        showNode(node) {\n            node.hidden = false;\n            // this.$set(node, 'hidden', false);\n        },\n        hideNode(node) {\n            node.hidden = true;\n            // this.$set(node, 'hidden', true);\n        },\n        doFilter(q) {\n            let nodes = [];\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.forNodes(this.innerData, (node) => {\n                if (this.filter(q, node)) {\n                    this.showNode(node);\n                    nodes.push(node);\n                } else {\n                    this.hideNode(node);\n                }\n            });\n            for (let node of nodes) {\n                let pnode = node.parent;\n                while (pnode) {\n                    this.showNode(pnode);\n                    pnode = pnode.parent;\n                }\n                if (this.filterIncludingChild && node.children) {\n                    treeHelper.forNodes(node.children, (node) => {\n                        this.showNode(node);\n                    });\n                }\n            }\n        },\n        isEditing(node) {\n            if (this.editingItem) {\n                return this.editingItem.node == node;\n            }\n            return false;\n        },\n        beginEdit(node, el = null) {\n            if (!this.isEditing(node)) {\n                this.endEdit();\n                if (this.editingItem) {\n                    setTimeout(() => {\n                        this.selectNode(this.editingItem.node)\n                    })\n                    return;\n                }\n                this.editingItem = {\n                    node: node,\n                    originalValue: node.text,\n                    element: el\n                }\n                this.$emit('editBegin', this.editingItem);\n            }\n        },\n        endEdit() {\n            if (this.editingItem) {\n                let el = this.editingItem.element;\n                if (el && el.querySelector('.validatebox-invalid')) {\n                    return;\n                }\n                if (this.editingItem.invalid) {\n                    return;\n                }\n                this.$emit('editEnd', this.editingItem);\n                this.editingItem = null;\n            }\n        },\n        cancelEdit() {\n            if (this.editingItem) {\n                this.editingItem.node.text = this.editingItem.originalValue;\n                this.$emit('editCancel', this.editingItem);\n                this.editingItem = null;\n            }\n        },\n        moveNode(from, to, point) {\n            const data = this.innerData;\n            const fchildren = from.parent ? from.parent.children : data\n            const index = fchildren.indexOf(from);\n            if (index >= 0) {\n                fchildren.splice(index, 1);\n                if (point === 'append') {\n                    const children = (to.children || []).slice();\n                    children.push(from);\n                    to.children = children;\n                    // this.$set(to, 'children', children)\n                } else if (point === 'top') {\n                    const pchildren = to.parent ? to.parent.children : data;\n                    const index = pchildren.indexOf(to);\n                    if (index >= 0) {\n                        pchildren.splice(index, 0, from)\n                    }\n                } else if (point === 'bottom') {\n                    const pchildren = to.parent ? to.parent.children : data;\n                    const index = pchildren.indexOf(to);\n                    if (index >= 0) {\n                        pchildren.splice(index + 1, 0, from)\n                    }\n                }\n                this.$emit('nodeMove', {\n                    from, to, point, data\n                })\n            }\n        }\n\n    },\n    render() {\n        return (\n            <ul class=\"tree\">\n                {\n                    this.innerData.map(node => (\n                        <>\n                            {!node.hidden && <TreeNode node={node} tree={this.tree}></TreeNode>}\n                        </>\n                    ))\n                }\n                {\n                    this.dnd &&\n                    <DraggableProxy ref=\"proxy\" proxyCls={this.dndCls} proxyStyle={this.dndStyle}>\n                        <div class=\"tree-node-proxy\">\n                            <span class={['tree-dnd-icon', this.dragCls]}>&nbsp;</span>\n                            <span>{this.dragScope.node ? this.dragScope.node.text : null}</span>\n                        </div>\n                    </DraggableProxy>\n                }\n            </ul>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'TabPanelHeader',\n    props: {\n        panel: Object\n    },\n    render() {\n        let title = null;\n        if (this.panel.$slots['header']) {\n            title = this.panel.$slots['header']();\n        } else {\n            title = (\n                <span class={['tabs-title', {\n                    'tabs-with-icon': this.panel.iconCls,\n                    'tabs-closable': this.panel.closable\n                }]}>{this.panel.title}</span>\n            )\n        }\n        let icon = null;\n        if (this.panel.iconCls) {\n            icon = <span class={['tabs-icon', this.panel.iconCls]}></span>\n        }\n        let closable = null;\n        if (this.panel.closable) {\n            closable = (\n                <a href=\"javascript:;\" tabindex=\"-1\" class=\"tabs-close\"\n                    onClick={event => {\n                        this.$emit('close', event)\n                    }}\n                />\n            )\n        }\n        return (\n            <span\n                class={['tabs-inner f-inline-row f-full', this.panel.headerCls]}\n                style={[this.panel.headerStyle, {\n                    width: !this.$parent.isHorizontal ? domHelper.toStyleValue(this.$parent.tabWidth) : null,\n                    height: this.$parent.isHorizontal ? domHelper.toStyleValue(this.$parent.tabHeight) : null\n                }]}\n                onContextmenu={event => {\n                    this.panel.$emit('contextMenu', event)\n                }}\n            >\n                {title}\n                {icon}\n                {closable}\n            </span>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport TabPanelHeader from './TabPanelHeader';\n\nexport default {\n    name: 'Tabs',\n    components: {\n        TabPanelHeader\n    },\n    props: {\n        headerWidth: {\n            type: [Number, String],\n            default: 150\n        },\n        headerHeight: {\n            type: [Number, String],\n            default: 35\n        },\n        tabWidth: [Number, String],\n        tabHeight: {\n            type: [Number, String],\n            default: 32\n        },\n        tabPosition: {\n            type: String,\n            default: 'top'\n        },\n        plain: {\n            type: Boolean,\n            default: false\n        },\n        narrow: {\n            type: Boolean,\n            default: false\n        },\n        justified: {\n            type: Boolean,\n            default: false\n        },\n        border: {\n            type: Boolean,\n            default: true\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        scrollIncrement: {\n            type: Number,\n            default: 100\n        },\n        selectedIndex: {\n            type: Number,\n            default: 0\n        }\n    },\n    data() {\n        return {\n            panels: [],\n            selectedHis: [],\n            scrollDistance: 0,\n            maxScrollDistance: 0\n        }\n    },\n    computed: {\n        containerClasses() {\n            return 'tabs-container ' + (this.isHorizontal ? 'f-row' : 'f-column');\n        },\n        headerClasses() {\n            return ['tabs-header f-row f-noshrink', {\n                'tabs-header-plain': this.plain,\n                'tabs-header-narrow': this.narrow,\n                'tabs-header-noborder': !this.border,\n                'tabs-header-bottom f-order2': this.tabPosition == 'bottom',\n                'tabs-header-left f-column': this.tabPosition == 'left',\n                'tabs-header-right f-column f-order2': this.tabPosition == 'right'\n            }]\n        },\n        headerStyle() {\n            return {\n                width: this.isHorizontal ? domHelper.toStyleValue(this.headerWidth) : null,\n                height: !this.isHorizontal ? domHelper.toStyleValue(this.headerHeight) : null\n            }\n        },\n        bodyClasses() {\n            return ['tabs-panels f-column f-full', {\n                'tabs-panels-noborder': !this.border,\n                'tabs-panels-top': this.tabPosition == 'bottom',\n                'tabs-panels-right': this.tabPosition == 'left',\n                'tabs-panels-left': this.tabPosition == 'right'\n            }]\n        },\n        tabsClasses() {\n            return ['tabs f-full', {\n                'f-row': !this.isHorizontal,\n                'f-column': this.isHorizontal,\n                'tabs-scrollable': this.isScrollable,\n                'tabs-narrow': this.narrow\n            }]\n        },\n        tabsStyle() {\n            if (this.isScrollable) {\n                return {\n                    left: (-this.scrollDistance) + 'px'\n                };\n            } else {\n                return null;\n            }\n        },\n        isHorizontal() {\n            return this.tabPosition == 'left' || this.tabPosition == 'right';\n        },\n        isScrollable() {\n            if (this.isHorizontal) {\n                return false;\n            } else {\n                return this.scrollable && !this.justified;\n            }\n        },\n        isScrollerVisible() {\n            if (this.isScrollable) {\n                return this.maxScrollDistance > 0;\n            } else {\n                return false;\n            }\n        },\n        usedPanels() {\n            return this.panels.filter((p) => { return p.isUsed });\n        }\n\n\n    },\n    watch: {\n        panels() {\n            this.initPanels();\n        }\n    },\n    methods: {\n        addPanel(panel) {\n            // this.panels.push(panel);\n            const pp = this.panels.slice();\n            pp.push(panel);\n            this.panels = pp;\n        },\n        removePanel(panel) {\n            const pp = this.panels.slice();\n            let index = pp.indexOf(panel);\n            if (index >= 0) {\n                pp.splice(index, 1);\n                this.panels = pp;\n            }\n            this.removeHis(panel);\n        },\n        setMaxScrollDistance() {\n            if (!this.$refs.tabsRef) {\n                this.maxScrollDistance = 0;\n            }\n            let width = this.$refs.tabsRef.scrollWidth;\n            let wrapWidth = this.$refs.tabsWrapRef.offsetWidth;\n            this.maxScrollDistance = width > wrapWidth ? width - wrapWidth : 0;\n        },\n        onClickTab(panel, event) {\n            event.stopPropagation();\n            panel.select();\n        },\n        onCloseTab(panel, event) {\n            event.stopPropagation();\n            if (!panel.disabled) {\n                panel.close();\n            }\n        },\n        initPanels() {\n            if (this.panels.length) {\n                this.panels.forEach((p) => {\n                    p.isFirst = false;\n                    p.isLast = false;\n                });\n                let pp = this.panels.filter((p) => { return p.isUsed });\n                if (pp.length) {\n                    pp[0].isFirst = true;\n                    pp[pp.length - 1].isLast = true;\n                }\n                this.initSelectedPanel();\n            }\n            this.$nextTick(() => this.setScrollers());\n        },\n        initSelectedPanel() {\n            let panel = this.getSelectedPanel();\n            if (!panel) {\n                panel = this.selectedHis.pop();\n            }\n            if (!panel) {\n                panel = this.getPanel(this.selectedIndex);\n            }\n            if (panel) {\n                this.usedPanels.filter(p => p != panel).forEach(p => p.selectedState = false);\n                panel.selectedState = true;\n                this.selectedHis = this.selectedHis.filter(p => this.getPanelIndex(p) != -1);\n                this.removeHis(panel);\n                this.addHis(panel);\n            }\n        },\n        setScrollers() {\n            if (!this.isScrollable) {\n                return;\n            }\n            this.setMaxScrollDistance();\n            let panel = this.getSelectedPanel();\n            if (panel) {\n                let wrapWidth = domHelper.outerWidth(this.$refs.tabsWrapRef);\n                let index = this.getPanelIndex(panel);\n                let li = this.$refs.tabsRef.children[index];\n                let width = domHelper.outerWidth(li, true);\n                let pos = domHelper.position(li);\n                let left = pos.left - this.scrollDistance;\n                let right = left + width;\n                if (left < 0) {\n                    let distance = left - (wrapWidth - width) / 2;\n                    this.scrollBy(distance);\n                } else if (right > wrapWidth) {\n                    let distance = left - (wrapWidth - width) / 2;\n                    this.scrollBy(distance);\n                } else {\n                    this.scrollBy(0);\n                }\n            }\n        },\n        addHis(panel) {\n            this.selectedHis.push(panel);\n        },\n        removeHis(panel) {\n            this.selectedHis = this.selectedHis.filter(p => p != panel);\n        },\n        backHis() {\n            let panel = this.selectedHis.pop();\n            if (panel) {\n                this.removeHis(panel);\n                panel.select();\n            } else {\n                this.select(0);\n            }\n        },\n        select(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.select();\n            }\n        },\n        unselect(index) {\n            let panel = this.getPanel(index);\n            if (panel) {\n                panel.unselect();\n            }\n        },\n        getPanel(index) {\n            return this.usedPanels[index];\n        },\n        getPanelIndex(panel) {\n            let pp = this.usedPanels;\n            for (let i = 0; i < pp.length; i++) {\n                if (pp[i] == panel) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        getSelectedPanel() {\n            let pp = this.usedPanels.filter(p => p.selectedState && !p.disabled);\n            return pp.length ? pp[0] : null;\n        },\n        scrollBy(distance) {\n            this.setMaxScrollDistance();\n            distance += this.scrollDistance;\n            if (distance > this.maxScrollDistance) {\n                distance = this.maxScrollDistance;\n            }\n            if (distance < 0) {\n                distance = 0;\n            }\n            this.scrollDistance = distance;\n        },\n        resize() {\n            this.setMaxScrollDistance();\n        }\n\n\n    },\n    render() {\n        return (\n            <div ref=\"containerRef\" class={this.containerClasses}>\n                <div ref=\"headerRef\" class={this.headerClasses} style={this.headerStyle}>\n                    {this.isScrollerVisible && <div class=\"tabs-scroller-left f-order1\" onClick={() => this.scrollBy(-this.scrollIncrement)}></div>}\n                    {this.isScrollerVisible && <div class=\"tabs-scroller-right f-order3\" onClick={() => this.scrollBy(this.scrollIncrement)}></div>}\n                    <div ref=\"tabsWrapRef\" class=\"tabs-wrap f-column f-full f-order2\">\n                        {this.isScrollable && <ul class=\"tabs tabs-scrollable f-full\" style=\"width:100%\"></ul>}\n                        <ul ref=\"tabsRef\" class={this.tabsClasses} style={this.tabsStyle}>\n                            {\n                                this.usedPanels.map(panel => (\n                                    <li class={[{ 'f-inline-row f-full': this.justified, 'f-noshrink': this.isScrollable, 'tabs-selected': panel.selectedState, 'tabs-disabled': panel.disabled, 'tabs-first': panel.isFirst, 'tabs-last': panel.isLast }]}\n                                        onClick={event => this.onClickTab(panel, event)}>\n                                        <TabPanelHeader panel={panel} onClose={event => this.onCloseTab(panel, event)}></TabPanelHeader>\n                                    </li>\n\n                                ))\n                            }\n                        </ul>\n                    </div>\n                    {\n                        this.$slots['tools'] &&\n                        <div class=\"tabs-tool f-order4 f-noshrink\">\n                            {this.$slots['tools']()}\n                        </div>\n                    }\n                </div>\n                <div class={this.bodyClasses}>\n                    {this.$slots.default()}\n                </div>\n            </div>\n        )\n    }\n}","﻿import Panel from '../panel/Panel';\n\nexport default {\n    name: 'TabPanel',\n    extends: Panel,\n    props: {\n        selected: {\n            type: Boolean,\n            default: false\n        },\n        showHeader: {\n            type: Boolean,\n            default: false\n        },\n        border: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        closable: {\n            type: Boolean,\n            default: false\n        },\n    },\n    data() {\n        return {\n            isFirst: false,\n            isLast: false,\n            isUsed: true,\n            selectedState: this.selected\n        }\n    },\n    computed: {\n        tabs(){\n            return this.$parent;\n        },\n        panelClasses(){\n            return ['panel f-column', this.panelCls, {\n                'f-full': this.selectedState,\n                'f-hide': !this.selectedState\n            }];\n        },\n\n    },\n    watch: {\n        selected(value){\n            this.selectedState = value;\n        }\n    },\n    mounted(){\n        this.$parent.addPanel(this);\n    },\n    beforeUnmount(){\n        this.$parent.removePanel(this);\n    },\n    methods: {\n        select() {\n            if (this.selectedState || this.disabled){\n                return;\n            }\n            this.tabs.panels.filter(p => p != this).forEach(p => p.unselect());\n            this.selectedState = true;\n            this.tabs.$emit('tabSelect', this);\n            this.tabs.addHis(this);\n            this.$nextTick(() => {\n                this.tabs.setScrollers();\n                if (window.EventHub){\n                    window.EventHub.$emit('tabSelect', this);\n                }\n            });\n        },\n        unselect() {\n            if (!this.selectedState || this.disabled){\n                return;\n            }\n            this.selectedState = false;\n            this.tabs.$emit('tabUnselect', this);\n        },\n        close() {\n            if (this.disabled){\n                return;\n            }\n            if (this.selectedState){\n                this.selectedState = false;\n                // this.tabs.selectedIndex = -1;\n            }\n            this.closedState = true;\n            this.isUsed = false;\n            this.tabs.$emit('tabClose', this);\n            this.tabs.removeHis(this);\n            this.tabs.backHis();\n            this.tabs.initPanels();\n            this.$nextTick(() => {\n                this.tabs.setScrollers();\n            });\n        }\n            \n    }\n}","﻿import dateHelper from '../base/DateHelper';\nimport domHelper from '../base/DomHelper';\nimport InputBase from '../base/InputBase';\nimport SpinnerBase from '../base/SpinnerBase';\n\nexport default {\n    name: 'TimeSpinner',\n    extends: SpinnerBase,\n    props: {\n        value: String,\n        modelValue: String,\n        min: String,\n        max: String,\n        increment: {\n            type: Number,\n            default: 1\n        },\n        highlight: {\n            type: Number,\n            default: 0\n        },\n        selections: {\n            type: Array,\n            default: () => [[0,2],[3,5],[6,8]]\n        },\n        formatter: Function,\n        parser: Function,\n        format: {\n            type: String,\n            default: 'HH:mm'\n        }\n    },\n    data() {\n        return {\n            highlightState: this.highlight,\n            highlighting: false\n        }\n    },\n    computed: {\n        text(){\n            let s = this.focused ? this.textState : (this.textFormatter||this.defaultTextFormatter)(this.valueState);\n            if (this.focused && this.highlighting){\n                this.$nextTick(() => {\n                    this.highlightRange(this.highlightState);\n                    this.highlighting = false;\n                });\n            }\n            return s;\n        }\n    },\n    mounted(){\n        const v = this.value !== undefined ? this.value:this.modelValue;\n        this.setValue(v);\n        domHelper.bind(this.$refs.inputRef, 'click', this.onClickMe);\n        domHelper.bind(this.$refs.inputRef, 'keydown', this.onKeyDown);\n        domHelper.bind(this.$refs.inputRef, 'keypress', this.onKeyPress);\n        domHelper.bind(this.$refs.inputRef, 'blur', this.onBlur);\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$refs.inputRef);\n    },\n    methods: {\n        defaultFormatter(date) {\n            return dateHelper.formatDate(date, this.format);\n        },\n        defaultParser(value){\n            let date = this.parseD(value);\n            if (date){\n                var min = this.parseD(this.min);\n                var max = this.parseD(this.max);\n                if (min && min > date){date = min;}\n                if (max && max < date){date = max;}\n            }\n            return date;\n        },\n        parseD(value) {\n            return dateHelper.parseDate(value, this.format);\n        },\n        onClickMe(){\n\t\t\tlet start = this.getSelectionStart();\n\t\t\tfor(let i=0; i<this.selections.length; i++){\n\t\t\t\tlet range = this.selections[i];\n\t\t\t\tif (start >= range[0] && start <= range[1]){\n\t\t\t\t\tthis.highlightRange(i);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n        },\n        onKeyDown(event){\n\t\t\tif (event.keyCode == 13){\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis.value = this.text;\n\t\t\t\tthis.text = this.value;\n\t\t\t\tthis.onClickMe(event);\n\t\t\t\tthis.highlighting = true;\n\t\t\t}\n        },\n        onKeyPress(e){\n            if (!this.focused){\n                return true;\n            }\n            if (e.metaKey || e.ctrlKey){\n                return true;\n            }\n            if (['46','8','13','0'].indexOf(String(e.which)) !== -1){\n                return true;\n            }\n            let c = String.fromCharCode(e.which);\n            if (!c){\n                return true;\n            }\n            if ('0123456789'.indexOf(c) >= 0){\n                return true;\n            } else {\n                return false;\n            }\n        },\n        onBlur(){\n            this.setValue(this.textState);\n        },\n        setValue(value){\n            value = (this.formatter||this.defaultFormatter)((this.parser||this.defaultParser)(value));\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        highlightRange(index) {\n            this.highlightState = index;\n            let range = this.selections[this.highlightState];\n            if (range){\n                this.setSelectionRange(range[0], range[1]);\n                this.focus();\n            }\n        },\n        doSpin(down) {\n            let range = this.selections[this.highlightState];\n            if (range){\n                let s = this.textState || '';\n                if (s){\n                    let s1 = s.substring(0, range[0]);\n                    let s2 = s.substring(range[0], range[1]);\n                    let s3 = s.substring(range[1]);\n                    let v = s1 + ((parseInt(s2,10)||0) + this.increment*(down?-1:1)) + s3;\n                    this.setValue(v);\n                } else {\n                    let v = (this.formatter||this.defaultFormatter)(new Date());\n                    this.setValue(v);\n                }\n                this.focus();\n                this.highlighting = true;\n            }\n        },\n        doSpinUp() {\n            this.doSpin(false);\n        },\n        doSpinDown() {\n            this.doSpin(true);\n        }\n            \n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'TimeClock',\n    props: {\n        value: {\n            type: Number,\n            default: () => 0\n        },\n        type: {\n            type: String,\n            default: () => 'hour'\n        }\n    },\n    computed: {\n        hour24() {\n            return this.$parent.$parent.hour24;\n        },\n        hourDistance() {\n            return this.$parent.$parent.hourDistance;\n        }\n    },\n    data() {\n        return {\n            valueState: 0,\n            data: [],\n            radius: 0,\n            width: 0,\n            height: 0\n        }\n    },\n    watch: {\n        value() {\n            this.valueState = this.value;\n        },\n        type() {\n            this.data = this.getData(this.type);\n        }\n    },\n    mounted() {\n        setTimeout(() => {\n            this.valueState = this.value;\n            this.data = this.getData(this.type);\n            const width = domHelper.outerWidth(this.$refs.elRef);\n            const height = domHelper.outerHeight(this.$refs.elRef);\n            const size = Math.min(width, height) - 20;\n            this.width = size;\n            this.height = size;\n            this.radius = size / 2;\n        })\n    },\n    methods: {\n        getData(type = 'hour') {\n            let data = [];\n            if (type == 'hour') {\n                for (let i = 0; i < 12; i++) {\n                    data.push(String(i))\n                }\n                data[0] = '12'\n            } else {\n                for (let i = 0; i < 60; i += 5) {\n                    data.push(i < 10 ? '0' + i : String(i))\n                }\n                data[0] = '00'\n            }\n            return data;\n        },\n        getHour24(value) {\n            let itemValue = parseInt(value, 10);\n            itemValue += 12;\n            if (itemValue == 24) {\n                itemValue = '00';\n            }\n            return itemValue;\n        },\n        itemClasses(value) {\n            return ['item f-column f-content-center', {\n                'item-selected': value == this.valueState\n            }]\n        },\n        itemStyle(value, is24) {\n            const type = this.type;\n            const distance = this.hourDistance[1] - this.hourDistance[0];\n            const radius = this.radius - (this.hour24 && this.type == 'hour' ? (is24 ? 0 : distance) : 0);\n            const angular = parseInt(value, 10) / (type == 'hour' ? 12 : 60) * 360 * Math.PI / 180;\n            const x = (radius - 20) * Math.sin(angular);\n            const y = -(radius - 20) * Math.cos(angular);\n            return {\n                transform: `translate(${x}px,${y}px)`,\n            }\n        },\n        clockStyle() {\n            return {\n                width: this.width + 'px',\n                height: this.height + 'px',\n                marginLeft: -this.width / 2 + 'px',\n                marginTop: -this.height / 2 + 'px'\n            }\n        },\n        handStyle() {\n            const value = parseInt(this.valueState, 10);\n            const angular = value / (this.type == 'hour' ? 12 : 60) * 360;\n            const style = {\n                transform: `rotate(${angular}deg)`\n            }\n            if (this.hour24 && this.type == 'hour') {\n                if (value == 0) {\n                    style.top = this.hourDistance[0] + 'px';\n                } else if (value <= 12) {\n                    style.top = this.hourDistance[1] + 'px';\n                }\n            }\n            return style;\n        },\n        onItemClick(value, event) {\n            event.stopPropagation();\n            event.preventDefault();\n            value = parseInt(value, 10);\n            this.valueState = value;\n            this.$emit('select', value);\n        }\n    },\n    render() {\n        return (\n            <div ref=\"elRef\" class=\"clock-wrap f-full f-column f-content-center\">\n                <div class=\"clock\" style={this.clockStyle()}>\n                    <div class=\"center\"></div>\n                    <div class=\"hand\" style={this.handStyle()}>\n                        <div className=\"drag\"></div>\n                    </div>\n                    {\n                        this.data.map(value => (\n                            <div class={this.itemClasses(value)} style={this.itemStyle(value)} onClick={event => this.onItemClick(value, event)}>{value}</div>\n                        ))\n                    }\n                    {\n                        this.data.map(value => (\n                            <>\n                                {this.hour24 && this.type == 'hour' &&\n                                    <div>\n                                        <div class={this.itemClasses(this.getHour24(value))} style={this.itemStyle(this.getHour24(value), true)} onClick={event => this.onItemClick(this.getHour24(value), event)}>{this.getHour24(value)}</div>\n                                    </div>\n                                }\n                            </>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}","﻿import TimeClock from './TimeClock';\n\nexport default {\n    name: 'TimePanel',\n    props: {\n        value: String,\n        ampm: {\n            type: Array,\n            default: () => ['am', 'pm']\n        }\n    },\n    components: {\n        TimeClock\n    },\n    data() {\n        return {\n            selectingType: 'hour',\n            selectingAmpm: 'am',\n            hour: 0,\n            minute: 0\n        }\n    },\n    watch: {\n        value() {\n            this.setValue(this.value)\n        }\n    },\n    mounted() {\n        this.selectingAmpm = this.ampm[0];\n        this.setValue(this.value);\n    },\n    methods: {\n        setValue(value) {\n            if (value) {\n                const parts = value.split(' ');\n                const hm = parts[0].split(':');\n                this.hour = parseInt(hm[0], 10);\n                this.minute = parseInt(hm[1], 10);\n                this.selectingAmpm = parts[1];\n            }\n        },\n        getValue() {\n            let value = this.getHourStr() + ':' + this.getMinuteStr();\n            if (!this.$parent.hour24) {\n                value += ' ' + this.selectingAmpm;\n            }\n            return value;\n        },\n        getHourStr() {\n            const hour = this.hour;\n            return hour < 10 ? '0' + hour : hour\n        },\n        getMinuteStr() {\n            const minute = this.minute;\n            return minute < 10 ? '0' + minute : minute\n        },\n        onAmpmClick(ampm) {\n            this.selectingAmpm = ampm;\n            this.$emit('change', this.getValue());\n        },\n        onClockSelect(value) {\n            const selectingType = this.selectingType;\n            if (selectingType === 'hour') {\n                this.hour = value;\n                this.$nextTick(() => {\n                    this.selectingType = 'minute';\n                })\n            } else {\n                this.minute = value;\n            }\n            this.$emit('change', this.getValue());\n        }\n    },\n    render() {\n        return (\n            <div class=\"timepicker-panel f-column f-full\">\n                <div class=\"panel-header f-noshrink f-row f-content-center\">\n                    <div class={['title', { 'title-selected': this.selectingType == 'hour' }]} onClick={() => this.selectingType = 'hour'}>{this.getHourStr()}</div>\n                    <div class=\"sep\">:</div>\n                    <div class={['title', { 'title-selected': this.selectingType == 'minute' }]} onClick={() => this.selectingType = 'minute'}>{this.getMinuteStr()}</div>\n                    {\n                        !this.$parent.hour24 &&\n                        <div class=\"ampm f-column\">\n                            <div class={['title', { 'title-selected': this.selectingAmpm == this.ampm[0] }]} onClick={() => this.onAmpmClick(this.ampm[0])}>{this.ampm[0]}</div>\n                            <div class={['title', { 'title-selected': this.selectingAmpm == this.ampm[1] }]} onClick={() => this.onAmpmClick(this.ampm[1])}>{this.ampm[1]}</div>\n                        </div>\n                    }\n                </div>\n                <TimeClock\n                    value={this.selectingType == 'hour' ? this.hour : this.minute}\n                    type={this.selectingType}\n                    onSelect={this.onClockSelect}\n                />\n            </div>\n        )\n    }\n}","﻿import ComboBase from '../base/ComboBase';\nimport TimePanel from './TimePanel';\nimport InputBase from '../base/InputBase';\n\nexport default {\n    name: 'TimePicker',\n    extends: ComboBase,\n    components: {\n        TimePanel\n    },\n    props: {\n        value: String,\n        modelValue: String,\n        ampm: {\n            type: Array,\n            default: () => ['am', 'pm']\n        },\n        hour24: {\n            type: Boolean,\n            default: () => false\n        },\n        hourDistance: {\n            type: Array,\n            default: () => [20, 50]\n        },\n        closeText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.closeText', 'Close')\n        },\n        okText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.okText', 'Ok')\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            selectingValue: null\n        }\n    },\n    mounted() {\n        const v = this.value !== undefined ? this.value:this.modelValue;\n        this.setValue(v)\n    },\n    methods: {\n        setValue(value) {\n            this.selectingValue = value;\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        onOk() {\n            this.setValue(this.selectingValue);\n            this.closePanel();\n        },\n        onTimeChange(value) {\n            this.selectingValue = value;\n        },\n        renderPanel() {\n            if (this.panelClosed) {\n                return null;\n            }\n            const style = Object.assign({}, this.panelStyle, {\n                left: this.panelLeft + 'px',\n                top: this.panelTop + 'px'\n            })\n            return (\n                <div ref=\"panelRef\"\n                    class=\"panel-body panel-body-noheader combo-panel combo-p f-column\"\n                    style={style}>\n                    {this.renderContent()}\n                </div>\n            )\n        },\n        renderContent() {\n            return (\n                <>\n                    <TimePanel value={this.valueState} ampm={this.ampm} onChange={this.onTimeChange}></TimePanel>\n                    <div class=\"datebox-button f-row\">\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.onOk}>{this.okText}</a>\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.closePanel}>{this.closeText}</a>\n                    </div>\n                </>\n            )\n        }\n    }\n}","﻿import TimeSpinner from '../timespinner/TimeSpinner';\n\nexport default {\n    name: 'DateTimeSpinner',\n    extends: TimeSpinner,\n    props: {\n        selections: {\n            type: Array,\n            default: () => [[0,2],[3,5],[6,10],[11,13],[14,16],[17,19]]\n        },\n        format: {\n            type: String,\n            default: 'MM/dd/yyyy HH:mm'\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Panel from '../panel/Panel';\n\nexport default {\n    name: 'CollapsedPanel',\n    extends: Panel,\n    props: {\n        region: String\n    },\n    computed: {\n        layout(){\n            return this.$parent;\n        },\n        visible(){\n            const panel = this.layout.getPanel(this.region);\n            if (!panel){\n                return false;\n            }\n            if (!panel.collapsedState || !panel.expander){\n                return false;\n            }\n            return true;\n        },\n        panelClasses(){\n            return ['panel f-column layout-expand', this.panelCls, {\n                'layout-expand-east': this.region=='east',\n                'layout-expand-west': this.region=='west',\n                'layout-expand-south': this.region=='south',\n                'layout-expand-north': this.region=='north'\n            }]\n        },\n        panelStyles(){\n            const panel = this.layout.getPanel(this.region);\n            if (!panel){\n                return null;\n            }\n            return [this.panelStyle, {\n                top: this.region==='west'||this.region==='east' ? this.layout.paddingTop+'px' : (this.region==='north' ? 0 : null),\n                bottom: this.region==='west'||this.region==='east' ? this.layout.paddingBottom+'px' : (this.region==='south' ? 0 : null),\n                left: this.region==='west'||this.region==='north'||this.region==='south' ? 0 : null,\n                right: this.region==='east' ? 0 : null,\n                width: this.region==='west'||this.region==='east' ? panel.collapsedSize+'px' : '100%',\n                height: this.region==='north'||this.region==='south' ? panel.collapsedSize+'px' : null,\n                position: 'absolute'\n            }]\n        }\n    },\n    methods: {\n        onPanelClick(e){\n            const ptool = domHelper.closest(e.target, '.panel-tool');\n            if (!ptool){\n                e.preventDefault();\n                e.stopPropagation();\n                this.expand();\n            }\n        },\n        clickCollapsibleTool(){\n            this.expand();\n        },\n        expand(){\n            this.layout.getPanel(this.region).expand();\n        }\n    },\n    render() {\n        if (this.visible) {\n            return (\n                <div onClick={this.onPanelClick} class={this.panelClasses} style={this.panelStyles}>\n                    {this.panelHeader()}\n                    {this.panelBody()}\n                    {this.panelFooter()}\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport CollapsedPanel from './CollapsedPanel';\n\nexport default {\n    name: 'Layout',\n    components: {\n        CollapsedPanel,\n    },\n    props: {\n        layoutCls: String,\n        layoutStyle: Object\n    },\n    data() {\n        return {\n            panels: [],\n            paddings: null,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            paddingBottom: 0\n        }\n    },\n    computed: {\n        layoutClasses() {\n            return ['layout', this.layoutCls];\n        },\n        layoutStyles() {\n            return [this.layoutStyle, { padding: this.paddings }];\n        }\n    },\n    watch: {\n        panels() {\n            this.updatePaddings();\n            this.$nextTick(() => this.updatePaddings());\n        }\n    },\n    created() {\n        if (window.EventHub) {\n            window.EventHub.$on('tabSelect', (tab) => {\n                if (domHelper.isChild(this.$el, tab.$el)) {\n                    this.updatePaddings();\n                }\n            });\n            window.EventHub.$on('panelSelect', (panel) => {\n                if (domHelper.isChild(this.$el, panel.$el)) {\n                    this.updatePaddings();\n                }\n            });\n        }\n    },\n    methods: {\n        addPanel(panel) {\n            // this.panels.push(panel);\n            const pp = this.panels.slice();\n            pp.push(panel);\n            this.panels = pp;\n        },\n        removePanel(panel) {\n            const pp = this.panels.slice();\n            let index = pp.indexOf(panel);\n            if (index >= 0) {\n                pp.splice(index, 1);\n                this.panels = pp;\n            }\n        },\n        getPanel(region) {\n            let pp = this.panels.filter(p => p.region == region);\n            return pp.length ? pp[0] : null;\n        },\n        getPaddingValue(region) {\n            let panel = this.getPanel(region);\n            if (!panel) {\n                return 0;\n            }\n            let val = 0;\n            if (panel.collapsedState) {\n                if (panel.expander) {\n                    val += panel.collapsedSize - 1;\n                }\n            } else {\n                if (panel.float) {\n                    if (panel.expander) {\n                        val += panel.collapsedSize - 1;\n                    }\n                } else {\n                    if (region == 'west' || region == 'east') {\n                        val = domHelper.outerWidth(panel.$el);\n                    } else {\n                        val = domHelper.outerHeight(panel.$el);\n                    }\n                    if (!panel.split && panel.border) {\n                        val -= 1;\n                    }\n                }\n            }\n            return val;\n        },\n        updatePaddings() {\n            this.paddingLeft = this.getPaddingValue('west');\n            this.paddingRight = this.getPaddingValue('east');\n            this.paddingTop = this.getPaddingValue('north');\n            this.paddingBottom = this.getPaddingValue('south');\n            this.paddings = [this.paddingTop, this.paddingRight, this.paddingBottom, this.paddingLeft].map(v => v + 'px').join(' ');\n            this.$emit('resize')\n        },\n        onClick(event) {\n            let cp = domHelper.closest(event.target, '.layout-panel');\n            this.panels.filter(p => p.$el != cp).forEach(p => {\n                if (p.isExpanding) {\n                    return;\n                }\n                if (p.float && !p.collapsedState) {\n                    p.collapse();\n                }\n            });\n        },\n        collapseTitle(region) {\n            if (region == 'west' || region == 'east') {\n                return ' ';\n            }\n            const panel = this.getPanel(region);\n            return panel ? panel.title : null;\n        },\n        collapseIconCls(region) {\n            const iconMap = {\n                'east': 'left',\n                'west': 'right',\n                'north': 'down',\n                'south': 'up'\n            };\n            return 'layout-button-' + iconMap[region];\n        },\n        collapsedSize(region) {\n            const panel = this.getPanel(region);\n            return panel ? panel.collapsedSize : null;\n        }\n\n    },\n    render() {\n        return (\n            <div ref=\"layoutRef\" class={this.layoutClasses} style={this.layoutStyles} onClick={this.onClick}>\n                {this.$slots.default()}\n                {\n                    ['west', 'east', 'north', 'south'].map(region => (\n\n                        <CollapsedPanel\n                            bodyCls=\"f-column f-vcenter\"\n                            key={region}\n                            region={region}\n                            title={this.collapseTitle(region)}\n                            collapsible={true}\n                            collapseIconCls={this.collapseIconCls(region)}\n                        >\n                            {\n                                (region == 'west' || region == 'east') &&\n                                <div class=\"f-vtitle f-full\">{this.getPanel(region) ? this.getPanel(region).title : null}</div>\n                            }\n                        </CollapsedPanel>\n                    ))\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Resizable from '../resizable/Resizable';\nimport Panel from '../panel/Panel';\n\nexport default {\n    name: 'LayoutPanel',\n    extends: Panel,\n    directives: {\n        Resizable\n    },\n    props: {\n        title: String,\n        region: {\n            type: String,\n            default: 'center'\n        },\n        float: {\n            type: Boolean,\n            default: false\n        },\n        split: {\n            type: Boolean,\n            default: false\n        },\n        edge: {\n            type: Number,\n            default: 5\n        },\n        animate: {\n            type: Boolean,\n            default: true\n        },\n        collapsible: {\n            type: Boolean,\n            default: false\n        },\n        collapsedSize: {\n            type: Number,\n            default: 32\n        },\n        expander: {\n            type: Boolean,\n            default: false\n        },\n        expandIconCls: String,\n        collapseIconCls: String\n    },\n    data() {\n        return {\n            isExpanding: false,\n            collapseToShrinkBody: false,\n            resizeOpts: null\n        }\n    },\n    mounted(){\n        this.setResizeOpts();\n        this.$parent.addPanel(this);\n        domHelper.bind(this.$el, 'transitionend', this.onSlideEnd);\n    },\n    beforeUnmount(){\n        this.$parent.removePanel(this);\n        domHelper.unbind(this.$el);\n    },\n    computed: {\n        layout(){\n            return this.$parent;\n        },\n        panelClasses(){\n            return ['panel f-column layout-panel', this.panelCls, {\n                'layout-collapsed':this.collapsedState,\n                'layout-animate':this.animate,\n                'layout-panel-east':this.region=='east',\n                'layout-panel-west':this.region=='west',\n                'layout-panel-south':this.region=='south',\n                'layout-panel-north':this.region=='north',\n                'layout-panel-center':this.region=='center',\n                'layout-split-east':this.split&&this.region=='east',\n                'layout-split-west':this.split&&this.region=='west',\n                'layout-split-south':this.split&&this.region=='south',\n                'layout-split-north':this.split&&this.region=='north',\n                'layout-split-center':this.split&&this.region=='center'\n            }];\n        },\n        panelStyles(){\n            return [this.panelStyle, {\n                top: this.top?(this.top+'px'):null,\n                bottom: this.bottom?(this.bottom+'px'):null,\n                borderWidth: this.split?(this.edge+'px'):null\n            }]\n        },\n        collapsibleClasses(){\n            let icons = {\n                'west': 'left',\n                'east': 'right',\n                'north': 'up',\n                'south': 'down'\n            };\n            if (this.collapsedState){\n                return this.expandIconCls ? this.expandIconCls : 'layout-button-'+icons[this.region];\n            } else {\n                return this.collapseIconCls ? this.collapseIconCls : 'layout-button-'+icons[this.region];\n            }\n        },\n        top(){\n            if (this.region == 'west' || this.region == 'east'){\n                return this.layout.paddingTop;\n            }\n            return null;\n        },\n        bottom(){\n            if (this.region == 'west' || this.region == 'east'){\n                return this.layout.paddingBottom;\n            }\n            return null;\n        }\n    },\n    watch: {\n        collapsed(){\n            this.collapsed ? this.collapse() : this.expand()\n        }\n    },\n    methods: {\n        setResizeOpts(){\n            const handles = {north:'s',south:'n',east:'w',west:'e'}\n            const handler = () => {\n                if (this.region == 'west' || this.region == 'east'){\n                    this.$el.style.left = null;\n                } else {\n                    this.$el.style.top = null;\n                }\n                this.$parent.updatePaddings();\n            }\n            this.resizeOpts = {\n                // edge: 5,\n                edge: this.edge,\n                handles: handles[this.region]||'',\n                disabled: !this.split,\n                resizing: handler,\n                resizeStop: (state)=>{\n                    this.$emit('resizeStop', state);\n                    handler();\n                }\n            }\n        },\n        onSlideEnd(){\n            this.layout.updatePaddings();\n            if (this.collapsedState){\n                this.$emit('collapse')\n            } else {\n                this.$emit('expand')\n            }\n        },\n        clickCollapsibleTool(){\n            this.collapse();\n            this.layout.updatePaddings();\n        },\n        expand(){\n            this.collapsedState = false;\n            this.isExpanding = true;\n            this.$nextTick(() => this.isExpanding = false);\n            if (!this.animate){\n                this.layout.updatePaddings();\n                this.$emit('expand')\n            }\n        },\n        collapse(){\n            this.collapsedState = true;\n            // this.layout.updatePaddings();\n            if (!this.animate){\n                this.layout.updatePaddings();\n                this.$emit('collapse')\n            }\n        }\n    },\n    render() {\n        if (!this.closedState) {\n            return (\n                <div v-Resizable={this.resizeOpts} class={this.panelClasses} style={this.panelStyles}>\n                    {this.panelHeader()}\n                    {this.panelBody()}\n                    {this.panelFooter()}\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nwindow.MenuZIndex = window.MenuZIndex || 110000;\n\nexport default {\n    name: 'Menu',\n    props: {\n        menuCls: String,\n        menuStyle: Object,\n        menuWidth: [Number, String],\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        noline: {\n            type: Boolean,\n            default: false\n        },\n        duration: {\n            type: Number,\n            default: 100\n        }\n    },\n    data() {\n        return {\n            subItems: [],\n            left: 0,\n            top: 0,\n            zIndex: window.MenuZIndex++,\n            timer: null,\n            closed: true,\n            isDisplaying: false\n        }\n    },\n    computed: {\n        menuWidthState() {\n            return domHelper.toStyleValue(this.menuWidth);\n        },\n        containerClasses() {\n            return ['menu-container f-inline-row', {\n                'menu-noline': this.noline\n            }];\n        },\n        containerStyle() {\n            return {\n                width: this.menuWidthState,\n                minWidth: this.menuWidthState,\n                left: this.left + 'px',\n                top: this.top + 'px',\n                zIndex: this.zIndex,\n                display: this.inline ? null : (this.closed ? 'none' : 'block')\n            };\n        },\n        menubutton() {\n            let parent = this.$parent;\n            while (parent && (parent.$options.name != 'MenuButton' && parent.$options.name != 'SplitButton')) {\n                parent = parent.$parent;\n            }\n            return parent;\n        }\n    },\n    mounted() {\n        if (!this.inline) {\n            document.body.appendChild(this.$refs.containerRef);\n            domHelper.bind(document, 'click', this.onDocumentClick);\n        }\n        if (this.menubutton) {\n            this.menubutton.setMenu(this)\n        }\n    },\n    beforeUnmount() {\n        if (!this.inline) {\n            this.$el.appendChild(this.$refs.containerRef);\n            domHelper.unbind(document, 'click', this.onDocumentClick);\n        }\n    },\n    methods: {\n        addItem(item) {\n            this.subItems.push(item);\n        },\n        removeItem(item) {\n            let index = this.subItems.indexOf(item);\n            if (index >= 0) {\n                this.subItems.splice(index, 1);\n            }\n        },\n        afterItemClick(){\n\n        },\n        onMouseOver() {\n            this.closed = false;\n            clearTimeout(this.timer);\n        },\n        onMouseOut() {\n            this.delayHide();\n        },\n        onDocumentClick(event) {\n            if (!this.closed) {\n                if (domHelper.isChild(event.target, this.$refs.containerRef)) {\n                    return;\n                }\n                if (this.isDisplaying) {\n                    return;\n                }\n                this.hide();\n            }\n        },\n        findItem(value) {\n            let finder = (items, field = 'value') => {\n                for (let item of items) {\n                    if (item[field] == value) {\n                        return item;\n                    } else if (item.subMenu) {\n                        item = finder(item.subMenu.subItems, field);\n                        if (item) {\n                            return item;\n                        }\n                    }\n                }\n                return null;\n            }\n            let item = finder(this.subItems, 'value');\n            if (!item) {\n                item = finder(this.subItems, 'text');\n            }\n            return item;\n        },\n        unhighlight() {\n            this.subItems.forEach((item) => {\n                item.unhighlight();\n            });\n        },\n        show(left, top) {\n            this.closed = false;\n            this.left = left;\n            this.top = top;\n            this.zIndex = window.MenuZIndex++;\n            clearTimeout(this.timer);\n            this.isDisplaying = true;\n            this.$nextTick(() => this.isDisplaying = false);\n        },\n        showAt(target, align = 'left') {\n            this.show(0, 0);\n            this.alignTo(target, align);\n            this.$nextTick(() => {\n                this.alignTo(target, align);\n            })\n        },\n        showContextMenu(left, top) {\n            this.show(left, top);\n            this.alignContextMenu();\n            this.$nextTick(() => {\n                this.alignContextMenu();\n            })\n        },\n        hide() {\n            this.closed = true;\n        },\n        delayHide() {\n            this.timer = setTimeout(() => {\n                this.closed = true;\n            }, this.duration);\n        },\n        alignTo(target, align = 'left') {\n            let view = domHelper.getViewport();\n            let pos = domHelper.offset(target);\n            let targetWidth = domHelper.outerWidth(target);\n            let targetHeight = domHelper.outerHeight(target);\n            let menuWidth = domHelper.outerWidth(this.$refs.containerRef);\n            let menuHeight = domHelper.outerHeight(this.$refs.containerRef);\n            let left = align == 'left' ? pos.left : pos.left + targetWidth - menuWidth;\n            let top = pos.top + targetHeight;\n            if (left + menuWidth > view.width + domHelper.getScrollLeft()) {\n                left = pos.left + targetWidth - menuWidth;\n            } else if (left < 0) {\n                left = pos.left;\n            }\n            if (top + menuHeight > view.height + domHelper.getScrollTop()) {\n                top = pos.top - menuHeight - 1;\n            }\n            if (top < domHelper.getScrollTop()) {\n                top = domHelper.getScrollTop() + 1;\n            }\n            this.left = left;\n            this.top = top;\n        },\n        alignContextMenu() {\n            let view = domHelper.getViewport();\n            let width = domHelper.outerWidth(this.$refs.containerRef);\n            let height = domHelper.outerHeight(this.$refs.containerRef);\n            if (this.left + width > view.width + domHelper.getScrollLeft()) {\n                this.left -= width;\n            }\n            if (height > view.height + domHelper.getScrollTop()) {\n                this.top = domHelper.getScrollTop() + 1;\n            } else {\n                if (this.top + height > view.height + domHelper.getScrollTop()) {\n                    this.top = view.height + domHelper.getScrollTop() - height - 1;\n                }\n            }\n        }\n\n    },\n    render() {\n        return (\n            <span class=\"menu-inline\">\n                <div ref=\"containerRef\" class={this.containerClasses} style={this.containerStyle}\n                    onMouseover={this.onMouseOver} onMouseout={this.onMouseOut}\n                >\n                    <div class=\"menu-shadow\"></div>\n                    <div class={'menu f-column f-full ' + (this.menuCls || '')} style={this.menuStyle}>\n                        {this.$slots.default()}\n                    </div>\n                    <div class=\"menu-line\"></div>\n                </div>\n            </span>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'SubMenu',\n    props: {\n        menuCls: String,\n        menuStyle: Object,\n        menuWidth: [Number, String]\n    },\n    data() {\n        return {\n            subItems: [],\n            left: 0,\n            top: 0,\n            zIndex: window.MenuZIndex++\n        }\n    },\n    computed: {\n        menu() {\n            return this.$parent.menu;\n        },\n        menuWidthState() {\n            return domHelper.toStyleValue(this.menuWidth);\n        },\n        menuClasses() {\n            return ['menu-container', {\n                'f-hide': !this.$parent.isActived\n            }];\n        },\n        menuStyles() {\n            return {\n                width: this.menuWidthState,\n                left: this.left + 'px',\n                top: this.top + 'px',\n                zIndex: this.zIndex\n            }\n        }\n    },\n    mounted() {\n        this.$parent.subMenu = this;\n    },\n    beforeUnmount() {\n        this.$parent.subMenu = null;\n    },\n    methods: {\n        addItem(item) {\n            this.subItems.push(item);\n        },\n        removeItem(item) {\n            let index = this.subItems.indexOf(item);\n            if (index >= 0) {\n                this.subItems.splice(index, 1);\n            }\n        },\n        unhighlight() {\n            this.subItems.forEach((item) => {\n                item.unhighlight();\n            });\n        },\n        alignMenu() {\n            this.zIndex = window.MenuZIndex++;\n            let view = domHelper.getViewport();\n            let pos = domHelper.offset(this.$parent.$el);\n            let width = domHelper.outerWidth(this.$el);\n            let height = domHelper.outerHeight(this.$el);\n            let pwidth = domHelper.outerWidth(this.$parent.$el);\n            let left = pwidth - 1;\n            if (left + pos.left + width > view.width + domHelper.getScrollLeft()) {\n                left = -width - 1;\n            }\n            let top = -4;\n            if (height > view.height + domHelper.getScrollTop()) {\n                top = -pos.top + domHelper.getScrollTop();\n            } else {\n                if (top + pos.top + height > view.height + domHelper.getScrollTop()) {\n                    top = view.height + domHelper.getScrollTop() - pos.top - height - 2;\n                }\n            }\n            this.left = left;\n            this.top = top;\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.menuClasses} style={this.menuStyles}>\n                <div class=\"menu-shadow\"></div>\n                <div class=\"menu-line\"></div>\n                <div class={'menu f-column f-full ' + (this.menuCls || this.menu.menuCls)} style={this.menuStyle || this.menu.menuStyle}>\n                    {this.$slots.default()}\n                </div>\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'MenuItem',\n    props: {\n        value: [Number, String],\n        text: String,\n        iconCls: String,\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            isActived: false,\n            subMenu: null\n        }\n    },\n    computed: {\n        menu() {\n            if (this.$parent.$options.name == 'Menu') {\n                return this.$parent;\n            } else {\n                return this.$parent.menu;\n            }\n        },\n        itemClasses() {\n            return ['menu-item', {\n                'menu-active': this.isActived,\n                'menu-item-disabled': this.disabled,\n                'menu-active-disabled': this.disabled && this.isActived\n            }]\n        }\n    },\n    mounted() {\n        this.$parent.addItem(this);\n    },\n    beforeUnmount() {\n        this.$parent.removeItem(this);\n    },\n    methods: {\n        highlight() {\n            this.$parent.subItems.forEach((item) => {\n                item.unhighlight();\n            });\n            this.isActived = true;\n            if (this.subMenu) {\n                this.$nextTick(() => this.subMenu.alignMenu());\n            }\n        },\n        unhighlight() {\n            if (this.subMenu) {\n                this.subMenu.unhighlight();\n            }\n            this.isActived = false;\n        },\n        onClickItem(event) {\n            event.stopPropagation();\n            if (this.disabled) {\n                return;\n            }\n            this.menu.$emit('itemClick', this.value || this.text);\n            this.menu.afterItemClick(this.value || this.text);\n            if (!this.subMenu) {\n                this.menu.unhighlight();\n                this.menu.hide();\n            }\n        }\n\n    },\n    render() {\n        return (\n            <div class={this.itemClasses}\n                onMouseenter={this.highlight}\n                onMouseleave={this.unhighlight}\n                onClick={this.onClickItem}\n            >\n                {!this.$slots['item'] && <div class=\"menu-text\">{this.text}</div>}\n                {this.$slots['item'] && this.$slots['item']()}\n                {this.iconCls && <div class={['menu-icon', this.iconCls]}></div>}\n                {this.subMenu && <div class=\"menu-rightarrow\"></div>}\n                {this.$slots.default && this.$slots.default()}\n            </div>\n        )\n    }\n}","﻿export default {\r\n    name: 'MenuSep',\r\n    render() {\r\n        return (\r\n            <div class=\"menu-sep\"></div>\r\n        )\r\n    }\r\n}","﻿import LinkButton from '../linkbutton/LinkButton';\n\nexport default {\n    name: 'MenuButton',\n    extends: LinkButton,\n    props: {\n        menuAlign: {\n            type: String,\n            default: 'left'\n        },\n        duration: {\n            type: Number,\n            default: 100\n        }\n    },\n    data() {\n        return {\n            menu: null,\n            timer: null\n        }\n    },\n    computed: {\n        isEmpty() {\n            return !this.text && !this.$slots.text;\n        },\n        innerCls() {\n            let cls = LinkButton.computed.innerCls.call(this);\n            cls += ' m-btn m-btn-' + this.size;\n            if (this.menu && !this.menu.closed) {\n                cls += this.plain ? ' m-btn-plain-active' : ' m-btn-active';\n            }\n            return cls;\n        }\n    },\n    mounted() {\n        // this.$children.forEach(c => {\n        //     if (c.$options.name == 'Menu') {\n        //         this.menu = c;\n        //     }\n        // });\n    },\n    methods: {\n        setMenu(menu) {\n            this.menu = menu;\n        },\n        onClick(event) {\n            LinkButton.methods.onClick.call(this, event);\n            this.showMenu();\n        },\n        onMouseEnter() {\n            if (this.disabled) {\n                return;\n            }\n            this.timer = setTimeout(() => {\n                this.showMenu();\n            }, this.duration);\n        },\n        onMouseLeave() {\n            if (this.disabled) {\n                return;\n            }\n            clearTimeout(this.timer);\n            if (this.menu) {\n                this.menu.delayHide();\n            }\n        },\n        showMenu() {\n            if (this.disabled) {\n                return;\n            }\n            if (this.menu) {\n                this.menu.showAt(this.$refs.btnRef, this.menuAlign);\n            }\n        },\n        renderInner() {\n            let content = '';\n            if (this.isEmpty) {\n                content = '';\n            } else if (this.text) {\n                content = this.text;\n            } else if (this.$slots.default) {\n                content = this.$slots.default();\n            }\n            return (\n                <>\n                    <span class={this.isEmpty ? 'l-btn-text l-btn-empty' : 'l-btn-text'}>\n                        {content}\n                    </span>\n                    <span class={this.btnIconCls}></span>\n                    <span class=\"m-btn-downarrow\"></span>\n                    <span class=\"m-btn-line\"></span>\n                    {this.$slots.default && this.$slots.default()}\n                </>\n            )\n        }\n\n    },\n    render() {\n        return (\n            <a ref=\"btnRef\"\n                href={this.href || '#'}\n                class={this.innerCls}\n                style={Object.assign({}, this.$attrs.style, this.btnStyle)}\n                onClick={this.onClick}\n                onMouseenter={this.onMouseEnter}\n                onMouseleave={this.onMouseLeave}\n                onFocus={this.focus}\n                onBlur={this.blur}\n            >\n                <span class={this.btnLeftCls}>\n                    {this.renderInner()}\n                </span >\n                {this.renderOthers()}\n            </a >\n        )\n    }\n}","﻿import LinkButton from '../linkbutton/LinkButton';\nimport MenuButton from '../menubutton/MenuButton';\n\nexport default {\n    name: 'SplitButton',\n    extends: MenuButton,\n    computed: {\n        innerCls() {\n            let cls = MenuButton.computed.innerCls.call(this);\n            cls += ' s-btn s-btn-' + this.size;\n            if (this.menu && !this.menu.closed) {\n                cls += this.plain ? ' s-btn-plain-active' : ' s-btn-active';\n            }\n            return cls;\n        }\n    },\n    methods: {\n        onClick(event) {\n            LinkButton.methods.onClick.call(this, event);\n        },\n        renderInner() {\n            let content = '';\n            if (this.isEmpty) {\n                content = '';\n            } else if (this.text) {\n                content = this.text;\n            } else if (this.$slots.default) {\n                content = this.$slots.default();\n            }\n            return (\n                <>\n                    <span class={this.isEmpty ? 'l-btn-text l-btn-empty' : 'l-btn-text'}>\n                        {content}\n                    </span>\n                    <span class={this.btnIconCls}></span>\n                    <span class=\"m-btn-downarrow\"></span>\n                    <span class=\"m-btn-line\"\n                        onClick={this.showMenu}\n                        onMouseenter={this.onMouseEnter}\n                        onMouseleave={this.onMouseLeave}\n                    />\n                    {this.$slots.default()}\n                </>\n            )\n        }\n    },\n    render() {\n        return (\n            <a ref=\"btnRef\"\n                href={this.href || '#'}\n                class={this.innerCls}\n                style={Object.assign({}, this.$attrs.style, this.btnStyle)}\n                onClick={this.onClick}\n                onFocus={this.focus}\n                onBlur={this.blur}\n            >\n                <span class={this.btnLeftCls}>\n                    {this.renderInner()}\n                </span >\n                {this.renderOthers()}\n            </a >\n        )\n    }\n}","﻿import InputBase from '../base/InputBase';\n\nexport default {\n    name: 'PasswordBox',\n    extends: InputBase,\n    props: {\n        passwordChar: {\n            type: String,\n            default: '●'\n        },\n        checkInterval: {\n            type: Number,\n            default: 200\n        },\n        lastDelay: {\n            type: Number,\n            default: 500\n        },\n        showEye: {\n            type: Boolean,\n            default: true\n        },\n        eyeAlign: {\n            type: String,\n            default: 'right'\n        },\n        revealed: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            revealedState: this.revealed,\n            lastTimer: null,\n            cursorPos: -1\n        }\n    },\n    computed: {\n        eyeClasses() {\n            return ['textbox-addon f-column f-noshrink', {\n                'f-order0': this.eyeAlign == 'left',\n                'f-order6': this.eyeAlign == 'right'\n            }];\n        },\n        eyeIconClasses() {\n            return ['textbox-icon f-full', {\n                'passwordbox-open': this.revealedState,\n                'passwordbox-close': !this.revealedState\n            }];\n        },\n        text() {\n            if (!this.focused) {\n                this.textState = this.revealedState ? this.valueState : (this.valueState || '').replace(/./ig, this.passwordChar)\n            }\n            if (this.focused && this.cursorPos != -1) {\n                this.$nextTick(() => {\n                    this.setSelectionRange(this.cursorPos, this.cursorPos);\n                    this.cursorPos = -1;\n                });\n            }\n            return this.textState;\n        }\n    },\n    methods: {\n        afterFocus(){\n            this.processing()\n        },\n        afterBlur(){\n            clearTimeout(this.lastTimer);\n            this.convert(this.textState, true);\n            this.cursorPos = -1;\n        },\n        processing() {\n            let originalText = this.textState;\n            let proc = () => {\n                if (!this.focused) {\n                    return;\n                }\n                if (originalText != this.textState) {\n                    originalText = this.textState;\n                    clearTimeout(this.lastTimer);\n                    this.convert(this.textState);\n                    this.lastTimer = setTimeout(() => {\n                        this.convert(this.textState, true);\n                    }, this.lastDelay);\n                }\n                setTimeout(() => {\n                    proc();\n                }, this.checkInterval);\n            };\n            proc();\n        },\n        convert(value, all = false) {\n            if (this.revealedState) {\n                this.setValue(value);\n                return;\n            }\n            if (!value) {\n                this.setValue(value);\n                return;\n            }\n            let pchar = this.passwordChar;\n            let cc = value.split('');\n            let vv = this.valueState ? this.valueState.split('') : [];\n            for (let i = 0; i < cc.length; i++) {\n                let c = cc[i];\n                if (c != vv[i]) {\n                    if (c != pchar) {\n                        vv.splice(i, 0, c);\n                    }\n                }\n            }\n            let pos = this.getSelectionStart();\n            if (cc.length < vv.length) {\n                vv.splice(pos, vv.length - cc.length, '');\n            }\n            for (var i = 0; i < cc.length; i++) {\n                if (all || i != pos - 1) {\n                    cc[i] = pchar;\n                }\n            }\n            this.setValue(vv.join(''));\n            this.textState = cc.join('');\n            this.cursorPos = pos;\n        },\n        renderOthers() {\n            return (\n                <>\n                    {\n                        this.showEye &&\n                        <span class={this.eyeClasses} onClick={() => this.revealedState = !this.revealedState}>\n                            <span class={this.eyeIconClasses}></span>\n                        </span>\n                    }\n                </>\n            )\n        }\n\n    }\n}","﻿export default {\n    name: 'Calendar',\n    props: {\n        weeks: {\n            type: Array,\n            default: () => window.Locale.t('Calendar.weeks', ['S', 'M', 'T', 'W', 'T', 'F', 'S'])\n        },\n        months: {\n            type: Array,\n            default: () => window.Locale.t('Calendar.months', ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n        },\n        border: {\n            type: Boolean,\n            default: true\n        },\n        showWeek: {\n            type: Boolean,\n            default: false\n        },\n        weekNumberHeader: {\n            type: String,\n            default: ''\n        },\n        firstDay: {\n            type: Number,\n            default: 0\n        },\n        year: {\n            type: Number,\n            default: new Date().getFullYear()\n        },\n        month: {\n            type: Number,\n            default: new Date().getMonth() + 1\n        },\n        selection: Date,\n        validator: {\n            type: Function,\n            default: () => { return true }\n        }\n    },\n    data() {\n        return {\n            yearState: this.year,\n            monthState: this.month,\n            highlightDay: null,\n            highlightMonth: null,\n            headerData: [],\n            bodyData: [],\n            showMenu: false,\n            selectionState: this.selection\n        }\n    },\n    computed: {\n        saIndex() {\n            let index = 6 - this.firstDay;\n            if (index >= 7) {\n                index -= 7;\n            }\n            return index;\n        },\n        suIndex() {\n            let index = this.saIndex + 1;\n            if (index >= 7) {\n                index -= 7;\n            }\n            return index;\n        }\n    },\n    watch: {\n        year() {\n            this.yearState = this.year;\n            this.bodyData = this.getWeeks();\n        },\n        yearState() {\n            this.bodyData = this.getWeeks();\n        },\n        month() {\n            this.monthState = this.month;\n            this.bodyData = this.getWeeks();\n        },\n        monthState() {\n            this.bodyData = this.getWeeks();\n        },\n        firstDay() {\n            this.headerData = this.getHeaderData();\n            this.bodyData = this.getWeeks();\n        },\n        selection() {\n            this.selectionState = this.selection;\n            this.moveTo(this.selectionState);\n        }\n    },\n    created() {\n        this.moveTo(this.selectionState);\n        this.headerData = this.getHeaderData();\n        this.bodyData = this.getWeeks();\n    },\n    methods: {\n        onDayClick(day) {\n            //event.stopPropagation();\n            if (this.isValid(day)) {\n                this.yearState = day[0];\n                this.monthState = day[1];\n                this.selectDate(new Date(day[0], day[1] - 1, day[2]));\n            }\n        },\n        onMonthClick(monthName, event) {\n            event.stopPropagation();\n            let index = this.months.indexOf(monthName);\n            if (index >= 0) {\n                this.monthState = index + 1;\n                this.showMenu = false;\n                this.highlightMonth = null;\n            }\n        },\n        isToday(day) {\n            let now = new Date();\n            let y = now.getFullYear();\n            let m = now.getMonth() + 1;\n            let d = now.getDate();\n            if (y == day[0] && m == day[1] && d == day[2]) {\n                return true;\n            }\n            return false;\n        },\n        isHighlighted(day) {\n            if (this.highlightDay) {\n                if (this.highlightDay.join(',') == day.join(',')) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isSelected(day) {\n            if (this.selectionState) {\n                let y = this.selectionState.getFullYear();\n                let m = this.selectionState.getMonth() + 1;\n                let d = this.selectionState.getDate();\n                if (y == day[0] && m == day[1] && d == day[2]) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isValid(day) {\n            let date = new Date(day[0], day[1] - 1, day[2]);\n            return this.validator(date);\n        },\n        isDiff(date1, date2) {\n            if (date1 != null && date2 == null) {\n                return true;\n            }\n            if (date1 == null && date2 != null) {\n                return true;\n            }\n            if (date1 != null && date2 != null) {\n                if (this.toArray(date1).join(',') != this.toArray(date2).join(',')) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        toDate(day) {\n            return new Date(day[0], day[1] - 1, day[2]);\n        },\n        toArray(date) {\n            return [date.getFullYear(), date.getMonth() + 1, date.getDate()];\n        },\n        calcWeekNumber(week) {\n            let date = new Date(week[0][0], week[0][1] - 1, week[0][2]);\n            return this.getWeekNumber(date);\n        },\n        nextYear() {\n            this.yearState++;\n        },\n        prevYear() {\n            this.yearState--;\n        },\n        nextMonth() {\n            if (this.monthState == 12) {\n                this.yearState++;\n                this.monthState = 1;\n            } else {\n                this.monthState++;\n            }\n        },\n        prevMonth() {\n            if (this.monthState == 1) {\n                this.yearState--;\n                this.monthState = 12;\n            } else {\n                this.monthState--;\n            }\n        },\n        getWeekNumber(date) {\n            var checkDate = new Date(date.getTime());\n            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n            var time = checkDate.getTime();\n            checkDate.setMonth(0);\n            checkDate.setDate(1);\n            return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\n        },\n        getHeaderData() {\n            let data1 = this.weeks.slice(this.firstDay, this.weeks.length);\n            let data2 = this.weeks.slice(0, this.firstDay);\n            return data1.concat(data2);\n        },\n        getWeeks() {\n            let dates = [];\n            let lastDay = new Date(this.yearState, this.monthState, 0).getDate();\n            for (let i = 1; i <= lastDay; i++) dates.push([this.yearState, this.monthState, i]);\n\n            // group date by week\n            let weeks = [];\n            let week = [];\n            let memoDay = -1;\n            while (dates.length > 0) {\n                let date = dates.shift();\n                week.push(date);\n                let day = new Date(date[0], date[1] - 1, date[2]).getDay();\n                if (memoDay == day) {\n                    day = 0;\n                } else if (day == (this.firstDay == 0 ? 7 : this.firstDay) - 1) {\n                    weeks.push(week);\n                    week = [];\n                }\n                memoDay = day;\n            }\n            if (week.length) {\n                weeks.push(week);\n            }\n\n            let firstWeek = weeks[0];\n            if (firstWeek.length < 7) {\n                while (firstWeek.length < 7) {\n                    let firstDate = firstWeek[0];\n                    let date = new Date(firstDate[0], firstDate[1] - 1, firstDate[2] - 1)\n                    firstWeek.unshift([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n                }\n            } else {\n                let firstDate = firstWeek[0];\n                let week = [];\n                for (let i = 1; i <= 7; i++) {\n                    let date = new Date(firstDate[0], firstDate[1] - 1, firstDate[2] - i);\n                    week.unshift([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n                }\n                weeks.unshift(week);\n            }\n\n            let lastWeek = weeks[weeks.length - 1];\n            while (lastWeek.length < 7) {\n                let lastDate = lastWeek[lastWeek.length - 1];\n                let date = new Date(lastDate[0], lastDate[1] - 1, lastDate[2] + 1);\n                lastWeek.push([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n            }\n            if (weeks.length < 6) {\n                let lastDate = lastWeek[lastWeek.length - 1];\n                let week = [];\n                for (let i = 1; i <= 7; i++) {\n                    let date = new Date(lastDate[0], lastDate[1] - 1, lastDate[2] + i);\n                    week.push([date.getFullYear(), date.getMonth() + 1, date.getDate()]);\n                }\n                weeks.push(week);\n            }\n\n            return weeks;\n        },\n        moveTo(date) {\n            if (date) {\n                this.yearState = date.getFullYear();\n                this.monthState = date.getMonth() + 1;\n            }\n        },\n        highlightDate(date) {\n            this.highlightDay = date ? this.toArray(date) : null;\n        },\n        selectDate(date = null) {\n            if (!date) {\n                if (this.highlightDay) {\n                    date = this.toDate(this.highlightDay);\n                } else {\n                    date = this.selectionState;\n                }\n            }\n            if (this.isDiff(this.selectionState, date)) {\n                this.selectionState = date;\n                this.$emit('selectionChange', this.selectionState);\n            }\n        },\n        navDate(step) {\n            let date = this.highlightDay ? this.toDate(this.highlightDay) : this.selectionState;\n            if (date) {\n                date = new Date(date.getFullYear(), date.getMonth(), date.getDate() + step);\n            } else {\n                date = new Date();\n            }\n            this.moveTo(date);\n            this.highlightDate(date);\n        },\n        renderDays() {\n            return (\n                <table class=\"calendar-dtable\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n                    <thead>\n                        <tr>\n                            {this.showWeek && <th>{this.weekNumberHeader}</th>}\n                            {\n                                this.headerData.map(week => (\n                                    <th>{week}</th>\n                                ))\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.bodyData.map(week => (\n                                <tr>\n                                    {this.showWeek && <td class=\"calendar-week\">{this.calcWeekNumber(week)}</td>}\n                                    {\n                                        week.map((day, dayIndex) => (\n                                            <td\n                                                class={['calendar-day', {\n                                                    'calendar-other-month': day[0] != this.yearState || day[1] != this.monthState,\n                                                    'calendar-saturday': dayIndex == this.saIndex,\n                                                    'calendar-sunday': dayIndex == this.suIndex,\n                                                    'calendar-today': this.isToday(day),\n                                                    'calendar-selected': this.isSelected(day),\n                                                    'calendar-disabled': !this.isValid(day),\n                                                    'calendar-nav-hover': this.isHighlighted(day)\n                                                }]}\n                                                onMouseenter={() => this.highlightDay = this.isValid(day) ? day : null}\n                                                onMouseleave={() => this.highlightDay = null}\n                                                onClick={(event) => this.onDayClick(day, event)}>\n                                                {this.$slots.default && this.$slots.default({ date: this.toDate(day) })}\n                                                {!this.$slots.default && day[2]}\n                                            </td>\n\n                                        ))\n                                    }\n                                </tr>\n\n                            ))\n                        }\n                    </tbody>\n                </table>\n            )\n        },\n        renderMenu() {\n            if (!this.showMenu) {\n                return null;\n            }\n            return (\n                <div class=\"calendar-menu f-column\">\n                    <div class=\"calendar-menu-year-inner\">\n                        <span class=\"calendar-nav calendar-menu-prev\" onClick={this.prevYear}></span>\n                        <span><input class=\"calendar-menu-year\" type=\"text\" v-model={this.yearState} /></span>\n                        <span class=\"calendar-nav calendar-menu-next\" onClick={this.nextYear}></span>\n                    </div>\n                    <div class=\"calendar-menu-month-inner f-full\">\n                        <div class=\"calendar-content\">\n                            <table class=\"calendar-mtable\">\n                                <tbody>\n                                    {\n                                        [0, 1, 2].map(rowIndex => (\n                                            <tr>\n                                                {\n                                                    [0, 1, 2, 3].map(colIndex => (\n                                                        <td\n                                                            class={['calendar-nav calendar-menu-month', {\n                                                                'calendar-nav-hover': this.highlightMonth == this.months[rowIndex * 4 + colIndex],\n                                                                'calendar-selected': this.months[this.monthState - 1] == this.months[rowIndex * 4 + colIndex]\n                                                            }]}\n                                                            onMouseenter={() => this.highlightMonth = this.months[rowIndex * 4 + colIndex]}\n                                                            onMouseleave={() => this.highlightMonth = null}\n                                                            onClick={event => this.onMonthClick(this.months[rowIndex * 4 + colIndex], event)}\n                                                        >\n                                                            {this.months[rowIndex * 4 + colIndex]}\n                                                        </td>\n                                                    ))\n                                                }\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div >\n            )\n        }\n    },\n    render() {\n        return (\n            <div class={'calendar f-column' + (!this.border ? ' calendar-noborder' : '')}>\n                <div class=\"calendar-header f-row f-noshrink\">\n                    <div class=\"calendar-title f-row f-full f-content-center\">\n                        <span class=\"calendar-text\" onClick={() => this.showMenu = !this.showMenu}>{this.months[this.monthState - 1]} {this.yearState}</span>\n                    </div>\n                    <div class=\"calendar-nav calendar-prevmonth\" onClick={this.prevMonth}></div>\n                    <div class=\"calendar-nav calendar-nextmonth\" onClick={this.nextMonth}></div>\n                    <div class=\"calendar-nav calendar-prevyear\" onClick={this.prevYear} ></div >\n                    <div class=\"calendar-nav calendar-nextyear\" onClick={this.nextYear} ></div >\n                </div >\n                <div class=\"calendar-body f-full\">\n                    <div class=\"calendar-content\">\n                        {this.renderDays()}\n                        {this.renderMenu()}\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport dateHelper from '../base/DateHelper';\nimport ComboBase from '../base/ComboBase';\nimport Calendar from '../calendar/Calendar';\nimport { FieldBase } from '../base';\n\nexport default {\n    name: 'DateBox',\n    extends: ComboBase,\n    components: {\n        Calendar\n    },\n    props: {\n        value: Date,\n        modelValue: Date,\n        format: {\n            type: String,\n            default: 'MM/dd/yyyy'\n        },\n        currentText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.currentText', 'Today')\n        },\n        closeText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.closeText', 'Close')\n        },\n        okText: {\n            type: String,\n            default: () => window.Locale.t('DateBox.okText', 'Ok')\n        },\n        showWeek: {\n            type: Boolean,\n            default: false\n        },\n        weekNumberHeader: {\n            type: String,\n            default: ''\n        },\n        firstDay: {\n            type: Number,\n            default: 0\n        },\n        formatter: Function,\n        parser: Function,\n        validator: {\n            type: Function,\n            default: () => { return true }\n        },\n        reversed: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            timer: null\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused && this.panelClosed) {\n                this.textState = (this.formatter || this.defaultFormatter)(this.valueState);\n            }\n            return this.textState;\n        }\n    },\n    mounted() {\n        // this.$on('blur', () => {\n        //     if (this.panelClosed) {\n        //         return;\n        //     }\n        //     if (!this.textState.trim()) {\n        //         this.setValue(null);\n        //     }\n        // });\n        domHelper.bind(this.$refs.inputRef, 'keydown', this.onKeyDown);\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$refs.inputRef, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            if (this.panelClosed) {\n                return;\n            }\n            if (!this.textState.trim()) {\n                this.setValue(null);\n            } else if (!this.reversed) {\n                const val = (this.parser || this.defaultParser)(this.textState.trim());\n                const y = val.getFullYear();\n                if (!y) {\n                    val.setFullYear(1900);\n                }\n                this.setValue(val);\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n        },\n        onSelectionChange(event) {\n            this.setValue(event);\n            this.closePanel();\n            this.$emit('selectionChange', event);\n        },\n        onKeyDown(event) {\n            if (this.panelClosed && event.which == 40) {\n                this.openPanel();\n                event.preventDefault();\n                return;\n            }\n            if (this.panelClosed) {\n                return;\n            }\n            switch (event.which) {\n                case 40:\t// down\n                    this.$refs.calendar.navDate(7);\n                    event.preventDefault();\n                    break;\n                case 38:\t// up\n                    this.$refs.calendar.navDate(-7);\n                    event.preventDefault();\n                    break;\n                case 37:\t// left\n                    this.$refs.calendar.navDate(-1);\n                    event.preventDefault();\n                    break;\n                case 39:\t// right\n                    this.$refs.calendar.navDate(1);\n                    event.preventDefault();\n                    break;\n                case 13:\t// enter\n                    this.$refs.calendar.selectDate();\n                    this.closePanel();\n                    this.textState = (this.formatter || this.defaultFormatter)(this.valueState);\n                    event.preventDefault();\n                    break;\n            }\n        },\n        defaultFormatter(date) {\n            return dateHelper.formatDate(date, this.format);\n        },\n        defaultParser(value) {\n            return dateHelper.parseDate(value, this.format);\n        },\n        doFilter(value) {\n            let date = (this.parser || this.defaultParser)(value);\n            if (!date) {\n                date = this.valueState;\n            }\n            this.$refs.calendar.moveTo(date);\n            this.$refs.calendar.highlightDate(date);\n        },\n        selectToday() {\n            this.setValue(new Date());\n            this.closePanel();\n        },\n        renderPanel() {\n            if (this.panelClosed) {\n                return null;\n            }\n            const style = Object.assign({}, this.panelStyle, {\n                left: this.panelLeft + 'px',\n                top: this.panelTop + 'px'\n            })\n            return (\n                <div ref=\"panelRef\"\n                    class=\"panel-body panel-body-noheader combo-panel combo-p f-column\"\n                    style={style}>\n                    {this.renderContent()}\n                </div>\n            )\n        },\n        renderContent() {\n            return (\n                <>\n                    <Calendar ref=\"calendar\" class=\"f-full\"\n                        border={false}\n                        showWeek={this.showWeek}\n                        weekNumberHeader={this.weekNumberHeader}\n                        firstDay={this.firstDay}\n                        validator={this.validator}\n                        selection={this.valueState}\n                        onSelectionChange={this.onSelectionChange}>\n                    </Calendar>\n                    <div class=\"datebox-button f-row\">\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.selectToday}>{this.currentText}</a>\n                        <a href=\"javascript:;\" class=\"datebox-button-a f-full\" onClick={this.closePanel}>{this.closeText}</a>\n                    </div>\n                </>\n            )\n        }\n    }\n}","﻿export default {\n    name: 'DraggableProxy',\n    props: {\n        proxyCls: String,\n        proxyStyle: Object\n    },\n    data() {\n        return {\n            left: 0,\n            top: 0,\n            width: 0,\n            height: 0,\n            reverting: false,\n            closed: true\n        }\n    },\n    computed: {\n        proxyClasses() {\n            return [this.proxyCls, {\n                'draggable-reverting': this.reverting\n            }]\n        },\n        proxyStyles() {\n            return [this.proxyStyle, {\n                position: 'absolute',\n                left: this.left + 'px',\n                top: this.top + 'px',\n                // width: this.width+'px',\n                // height: this.height+'px',\n                display: this.closed ? 'none' : 'block'\n            }];\n        }\n    },\n    mounted() {\n        document.body.appendChild(this.$refs.proxyRef);\n    },\n    beforeUnmount() {\n        if (this.$refs.proxyRef) {\n            this.$el.appendChild(this.$refs.proxyRef);\n        }\n    },\n    methods: {\n        onTransitionEnd() {\n            this.reverting = false;\n            this.closed = true;\n        }\n    },\n    render() {\n        return (\n            <div style=\"display:none\">\n                <div ref=\"proxyRef\"\n                    class={this.proxyClasses}\n                    style={this.proxyStyles}\n                    onTransitionend={this.onTransitionEnd}>\n                    {this.$slots.default()}\n                </div>\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport Panel from '../panel/Panel';\nimport Draggable from '../draggable/Draggable';\nimport Resizable from '../resizable/Resizable';\n\nwindow.DialogZIndex = window.DialogZIndex || 9000;\n\nexport default {\n    name: 'Dialog',\n    extends: Panel,\n    directives: {\n        Draggable,\n        Resizable\n    },\n    props: {\n        title: String,\n        border: {\n            type: Boolean,\n            default: false\n        },\n        borderType: {\n            type: String,\n            default: 'thick'    // thin,thick,none\n        },\n        closable: {\n            type: Boolean,\n            default: true\n        },\n        dialogCls: String,\n        dialogStyle: Object,\n        modal: {\n            type: Boolean,\n            default: false\n        },\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        draggable: {\n            type: Boolean,\n            default: false\n        },\n        resizable: {\n            type: Boolean,\n            default: false\n        },\n        draggableOptions: Object,\n        resizableOptions: Object\n    },\n    data() {\n        return {\n            dragOpts: null,\n            resizeOpts: null,\n            maskEl: null,\n            left: null,\n            top: null,\n            width: null,\n            height: null\n        }\n    },\n    computed: {\n        panelStyles() {\n            return [this.panelStyle, this.dialogStyle, {\n                left: this.left ? this.left + 'px' : (this.dialogStyle ? this.dialogStyle.left : null),\n                top: this.left ? this.top + 'px' : (this.dialogStyle ? this.dialogStyle.top : null),\n                width: this.width ? this.width + 'px' : (this.dialogStyle ? this.dialogStyle.width : null),\n                height: this.height ? this.height + 'px' : (this.dialogStyle ? this.dialogStyle.height : null)\n            }];\n        },\n        panelClasses() {\n            let cls = 'window window-shadow';\n            if (this.borderType == 'none') {\n                cls += ' window-thinborder window-noborder';\n            } else if (this.borderType == 'thin') {\n                cls += ' window-thinborder';\n            }\n            if (this.inline) {\n                cls += ' inline';\n            }\n            return ['panel f-column', cls, this.panelCls, this.dialogCls];\n        },\n        headerClasses() {\n            return Panel.computed.headerClasses.call(this).concat('window-header');\n        },\n        bodyClasses() {\n            let cls = 'window-body';\n            if (!this.hasHeader) {\n                cls += ' window-body-noheader';\n            }\n            return Panel.computed.bodyClasses.call(this).concat(cls);\n        },\n        footerClasses() {\n            return Panel.computed.footerClasses.call(this).concat('window-footer');\n        }\n    },\n    watch: {\n        draggable() {\n            this.setDragOpts();\n        },\n        resizable() {\n            this.setResizeOpts();\n        },\n        draggableOptions() {\n            this.setDragOpts();\n        },\n        resizableOptions() {\n            this.setResizeOpts();\n        },\n        closedState() {\n            this.$nextTick(() => {\n                this.initDialog();\n                this.setDragOpts();\n                this.setResizeOpts();\n            });\n            if (this.closedState) {\n                this.$emit('close');\n            } else {\n                this.$emit('open');\n            }\n        }\n    },\n    mounted() {\n        this.setDragOpts();\n        this.setResizeOpts();\n        this.initDialog();\n    },\n    methods: {\n        setDragOpts() {\n            this.dragOpts = Object.assign({\n                edge: 5,\n                disabled: !this.draggable,\n                handle: this.$refs.headerRef\n            }, this.draggableOptions, {\n                dragEnd: (state) => {\n                    this.left = state.left;\n                    this.top = state.top;\n                    if (this.draggableOptions && this.draggableOptions.dragEnd) {\n                        this.draggableOptions.dragEnd(state);\n                    }\n                }\n            });\n        },\n        setResizeOpts() {\n            this.resizeOpts = Object.assign({\n                edge: 5,\n                disabled: !this.resizable\n            }, this.resizableOptions, {\n                resizeStop: (state) => {\n                    this.width = state.width;\n                    this.height = state.height;\n                    if (this.resizableOptions && this.resizableOptions.resizeStop) {\n                        this.resizableOptions.resizeStop(state);\n                    }\n                }\n            });\n        },\n        initDialog() {\n            if (!this.closedState) {\n                if (this.$refs.panelRef) {\n                    if (!this.inline) {\n                        document.body.appendChild(this.$refs.panelRef);\n                    }\n                    this.openMask();\n                    this.displaying();\n                }\n            } else {\n                this.closeMask();\n            }\n        },\n        openMask() {\n            if (this.modal && !this.maskEl) {\n                this.maskEl = document.createElement('div');\n                domHelper.addClass(this.maskEl, 'window-mask');\n                if (!this.inline) {\n                    document.body.appendChild(this.maskEl);\n                } else {\n                    domHelper.addClass(this.maskEl, 'inline');\n                    this.$el.appendChild(this.maskEl);\n                }\n            }\n        },\n        closeMask() {\n            if (this.maskEl) {\n                if (!this.inline) {\n                    document.body.removeChild(this.maskEl);\n                } else {\n                    this.$el.removeChild(this.maskEl);\n                }\n                this.maskEl = null;\n            }\n        },\n        open() {\n            this.closedState = false;\n        },\n        close() {\n            this.closedState = true;\n        },\n        displaying() {\n            this.moveToTop();\n            this.left = parseInt(this.$refs.panelRef.style.left) || null;\n            this.top = parseInt(this.$refs.panelRef.style.top) || null;\n            if (this.left == null) {\n                this.hcenter();\n            }\n            if (this.top == null) {\n                this.vcenter();\n            }\n        },\n        moveToTop() {\n            if (this.maskEl) {\n                this.maskEl.style.zIndex = String(window.DialogZIndex++);\n            }\n            if (this.$refs.panelRef) {\n                this.$refs.panelRef.style.zIndex = String(window.DialogZIndex++);\n            }\n        },\n        hcenter() {\n            if (this.$refs.panelRef) {\n                let view = domHelper.getViewport();\n                let vwidth = view.width;\n                if (this.inline) {\n                    let parent = domHelper.closest(this.$refs.panelRef, '.dialog-inline');\n                    vwidth = domHelper.outerWidth(parent);\n                }\n                let width = domHelper.outerWidth(this.$refs.panelRef);\n                this.left = (vwidth - width) / 2;\n            }\n        },\n        vcenter() {\n            if (this.$refs.panelRef) {\n                let view = domHelper.getViewport();\n                let vheight = view.height;\n                let scrollTop = domHelper.getScrollTop();\n                if (this.inline) {\n                    let parent = domHelper.closest(this.$refs.panelRef, '.dialog-inline');\n                    vheight = domHelper.outerHeight(parent);\n                    scrollTop = 0;\n                }\n                let height = domHelper.outerHeight(this.$refs.panelRef);\n                this.top = (vheight - height) / 2 + scrollTop;\n            }\n        },\n        center() {\n            this.hcenter();\n            this.vcenter();\n        }\n    },\n    render() {\n        return (\n            <div class=\"dialog-inline\">\n                {\n                    !this.closedState &&\n                    <div ref=\"panelRef\" v-Draggable={this.dragOpts} v-Resizable={this.resizeOpts} class={this.panelClasses} style={this.panelStyles}>\n                        {this.panelHeader()}\n                        {this.panelBody()}\n                        {this.panelFooter()}\n                    </div>\n                }\n            </div>\n        )\n    }\n}","﻿import Dialog from \"../dialog/Dialog\";\nimport domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'Drawer',\n    extends: Dialog,\n    props: {\n        borderType: {\n            type: String,\n            default: 'none'    // thin,thick,none\n        },\n        collapsed: {\n            type: Boolean,\n            default: true\n        },\n        collapsible: {\n            type: Boolean,\n            default: false\n        },\n        closable: {\n            type: Boolean,\n            default: false\n        },\n        modal: {\n            type: Boolean,\n            default: true\n        },\n        drawerCls: String,\n        drawerStyle: Object,\n        maskClosable: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: true\n        },\n        region: {\n            type: String,\n            default: 'west'\n        },\n        expandIconCls: String,\n        collapseIconCls: String\n    },\n    data() {\n        return {\n            isExpanding: false,\n            isChanging: false,\n            collapseToShrinkBody: false\n        }\n    },\n    computed: {\n        panelStyles() {\n            return [this.panelStyle, this.drawerStyle, {\n                left: this.left ? this.left + 'px' : (this.drawerStyle ? this.drawerStyle.left : null),\n                top: this.left ? this.top + 'px' : (this.drawerStyle ? this.drawerStyle.top : null),\n                width: this.width ? this.width + 'px' : (this.drawerStyle ? this.drawerStyle.width : null),\n                height: this.height ? this.height + 'px' : (this.drawerStyle ? this.drawerStyle.height : null)\n            }];\n        },\n        panelClasses() {\n            let cls = 'drawer window window-shadow';\n            if (this.borderType == 'none') {\n                cls += ' window-thinborder window-noborder';\n            } else if (this.borderType == 'thin') {\n                cls += ' window-thinborder';\n            }\n            if (this.inline){\n                cls += ' inline';\n            }\n            return ['panel f-column', cls, this.panelCls, this.drawerCls, {\n                'layout-collapsed': this.collapsedState,\n                'layout-animate': this.animate && !this.isChanging,\n                'layout-panel-east': this.region == 'east',\n                'layout-panel-west': this.region == 'west',\n                'layout-panel-south': this.region == 'south',\n                'layout-panel-north': this.region == 'north',\n            }];\n        },\n        collapsibleClasses() {\n            let icons = {\n                'west': 'left',\n                'east': 'right',\n                'north': 'up',\n                'south': 'down'\n            };\n            if (this.collapsedState) {\n                return this.expandIconCls ? this.expandIconCls : 'layout-button-' + icons[this.region];\n            } else {\n                return this.collapseIconCls ? this.collapseIconCls : 'layout-button-' + icons[this.region];\n            }\n        },\n    },\n    watch: {\n        region() {\n            this.isChanging = true;\n            setTimeout(() => this.isChanging = false)\n        },\n        collapsed() {\n            this.collapsed ? this.collapse() : this.expand()\n        }\n    },\n    mounted() {\n        if (this.$refs.panelRef) {\n            domHelper.bind(this.$refs.panelRef, 'transitionend', this.onSlideEnd);\n        }\n    },\n    beforeUnmount() {\n        if (this.$refs.panelRef) {\n            domHelper.unbind(this.$refs.panelRef, 'transitionend');\n            // domHelper.unbind(this.$refs.panelRef);\n        }\n        this.$el.appendChild(this.$refs.panelRef)\n        this.close();\n    },\n    // destroyed() {\n    // },\n    methods: {\n        onSlideEnd() {\n            if (this.collapsedState) {\n                this.$emit('collapse')\n            } else {\n                this.$emit('expand')\n            }\n        },\n        initDialog() {\n            if (!this.closedState) {\n                if (this.$refs.panelRef) {\n                    if (!this.inline){\n                        document.body.appendChild(this.$refs.panelRef);\n                    }\n                    this.displaying();\n                }\n            } else {\n                this.closeMask();\n            }\n        },\n        displaying() {\n            this.moveToTop();\n        },\n        clickCollapsibleTool() {\n            this.collapse();\n        },\n        onClickMask() {\n            if (this.maskClosable) {\n                this.collapse();\n            }\n        },\n        expand() {\n            this.collapsedState = false;\n            this.isExpanding = true;\n            this.openMask();\n            this.$nextTick(() => this.isExpanding = false);\n            if (!this.animate) {\n                this.$emit('expand')\n            }\n            if (this.maskEl) {\n                domHelper.addClass(this.maskEl, 'drawer-mask')\n                domHelper.bind(this.maskEl, 'click', this.onClickMask)\n            }\n        },\n        collapse() {\n            if (this.maskEl) {\n                domHelper.unbind(this.maskEl, 'click');\n            }\n            this.collapsedState = true;\n            this.closeMask();\n            if (!this.animate) {\n                this.$emit('collapse')\n            }\n        }\n    }\n\n}","﻿export default {\n    name: 'ProgressBar',\n    props: {\n        value: {\n            type: Number,\n            default: 0\n        },\n        showValue: {\n            type: Boolean,\n            default: false\n        },\n        barCls: String,\n        barStyle: Object\n    },\n    computed: {\n        barClasses() {\n            return ['progressbar-value f-row f-content-center', this.barCls];\n        },\n        barStyles() {\n            return [this.barStyle, {\n                width: this.value + '%'\n            }];\n        }\n    },\n    render() {\n        return (\n            <div class=\"progressbar f-row\">\n                <div class={this.barClasses} style={this.barStyles}>\n                    {this.showValue && <span>{this.value}%</span>}\n                    <slot></slot>\n                </div>\n            </div>\n        )\n    }\n}","﻿export default {\n    name: 'TreeGridTitle',\n    props: {\n        row: Object,\n        column: Object,\n        rowIndex: Number\n    },\n    render() {\n        let cell = '';\n        if (this.column.$slots['body']) {\n            cell = this.column.$slots['body']({\n                row: this.row,\n                column: this.column,\n                rowIndex: this.rowIndex\n            });\n        } else if (this.column.$slots['cell']) {\n            cell = this.column.$slots['cell']({\n                row: this.row,\n                column: this.column,\n                rowIndex: this.rowIndex\n            });\n        } else {\n            cell = this.row[this.column.field];\n        }\n        return (\n            <span class=\"tree-title\">{cell}</span>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport GridBodyCell from '../gridbase/GridBodyCell';\nimport TreeGridTitle from './TreeGridTitle';\n\nexport default {\n    name: 'TreeGridRow',\n    components: {\n        GridBodyCell,\n        TreeGridTitle\n    },\n    props: {\n        gridBody: Object,\n        row: Object,\n        prow: Object,\n        columns: Array,\n        depth: Number,\n        rowIndex: Number\n    },\n    data() {\n        return {\n            loading: false\n        }\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        },\n        indentWidth() {\n            if (this.isLeaf) {\n                return (this.depth + 1) * 16;\n            } else {\n                return this.depth * 16;\n            }\n        },\n        isExpanded() {\n            if (!this.row.state || this.row.state == 'open') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isCollapsed() {\n            if (this.row.state && this.row.state == 'closed') {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isLeaf() {\n            if (this.row.state == 'closed') {\n                return false;\n            } else {\n                if (this.row.children && this.row.children.length) {\n                    this.loading = false;\n                    return false;\n                } else {\n                    if (this.loading) {\n                        return false;\n                    }\n                    return true;\n                }\n            }\n        },\n        hitClasses() {\n            return ['tree-hit', {\n                'tree-expanded': this.isExpanded,\n                'tree-collapsed': this.isCollapsed\n            }];\n        },\n        iconClasses() {\n            return ['tree-icon tree-folder', this.row.iconCls, {\n                'tree-folder-open': this.isExpanded,\n                'tree-file': this.isLeaf,\n                'tree-loading': this.loading\n            }];\n        },\n        checkboxClasses() {\n            let cc = ['unchecked', 'checked', 'indeterminate'];\n            let index = cc.indexOf(this.row.checkState);\n            if (index == -1) {\n                index = 0;\n            }\n            return 'tree-checkbox tree-checkbox' + index;\n        }\n    },\n    mounted() {\n        this.row.parent = this.prow;\n    },\n    methods: {\n        isTreeField(field) {\n            return field == this.gridBody.view.grid.treeField;\n        },\n        isEditable(row, col) {\n            if (this.grid.isEditing(row, col)) {\n                if (col.editable) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        doEdit(col, target) {\n            target = domHelper.closest(target, 'td');\n            this.grid.beginEdit(this.row, col);\n            setTimeout(() => {\n                let input = target.querySelector('.textbox-text');\n                if (input) {\n                    input.focus();\n                }\n            });\n        },\n        toggle(event) {\n            event.stopPropagation();\n            if (this.isExpanded) {\n                this.row.state = 'closed';\n                // this.$set(this.row, 'state', 'closed');\n                this.grid.$emit('rowCollapse', this.row);\n            } else {\n                this.loading = true;\n                this.row.state = 'open';\n                // this.$set(this.row, 'state', 'open');\n                this.grid.$emit('rowExpand', this.row);\n            }\n        },\n        onCheckRow(event) {\n            event.stopPropagation();\n            if (this.row.checkState == 'checked') {\n                this.grid.uncheckRow(this.row);\n            } else {\n                this.grid.checkRow(this.row);\n            }\n        },\n        onRowClick(row, event) {\n            event.stopPropagation();\n            this.grid.onRowClick(row);\n        },\n        onRowDblClick(row) {\n            this.grid.$emit('rowDblClick', row);\n        },\n        onRowContextMenu(row, event) {\n            this.grid.$emit('rowContextMenu', { row: row, originalEvent: event });\n        },\n        onCellClick(col, event) {\n            this.grid.onCellClick(this.row, col, event);\n            if (this.grid.clickToEdit || (this.grid.dblclickToEdit && this.grid.editingItem)) {\n                this.doEdit(col, event.target);\n            }\n        },\n        onCellDblClick(col, event) {\n            this.grid.$emit('cellDblClick', { row: this.row, column: col });\n            if (this.grid.dblclickToEdit) {\n                this.doEdit(col, event.target);\n            }\n        },\n        onCellContextMenu(col, event) {\n            this.grid.$emit('cellContextMenu', { row: this.row, column: col, originalEvent: event });\n        },\n        onCellKeyDown(col, event) {\n            if (this.grid.editMode == 'cell') {\n                if (event.which == 13) {\n                    event.stopPropagation();\n                    this.grid.endEdit();\n                } else if (event.which == 27) {\n                    event.stopPropagation();\n                    this.grid.cancelEdit();\n                }\n            }\n        }\n    },\n    render() {\n        return (\n            <tr class={['datagrid-row', { 'datagrid-row-over': this.grid.isHighlighted(this.row), 'datagrid-row-selected': this.grid.isSelected(this.row) }]}\n                onMouseenter={() => this.grid.highlightRow = this.row}\n                onMouseleave={() => this.grid.highlightRow = null}\n                onClick={event => this.onRowClick(this.row, event)}\n                onDblclick={event => this.onRowDblClick(this.row, event)}\n                onContextmenu={event => this.onRowContextMenu(this.row, event)}\n            >\n                {\n                    this.columns.map(col => (\n                        <td\n                            class={[{ 'datagrid-row-selected': this.grid.isSelected(this.row, col), 'datagrid-row-over': this.grid.isHighlighted(this.row, col) }]}\n                            onMouseenter={() => this.grid.highlightCell = { row: this.row, column: col }}\n                            onMouseleave={() => this.grid.highlightCell = null}\n                            onClick={event => this.onCellClick(col, event)}\n                            onDblclick={event => this.onCellDblClick(col, event)}\n                            onContextmenu={event => this.onCellContextMenu(col, event)}\n                            onKeydown={event => this.onCellKeyDown(col, event)}\n                        >\n                            {\n                                (!this.isTreeField(col.field) || this.isEditable(this.row, col)) &&\n                                <GridBodyCell row={this.row} column={col}></GridBodyCell>\n                            }\n                            {\n                                (this.isTreeField(col.field) && !this.isEditable(this.row, col)) &&\n                                <div\n                                    class={['datagrid-cell', { 'datagrid-editable': this.isEditable(this.row, col) }]}\n                                    style={{ textAlign: col.align || null }}>\n                                    {\n                                        !this.isEditable(this.row, col) &&\n                                        <>\n                                            <span class=\"tree-indent\" style={{ width: this.indentWidth + 'px' }}></span>\n                                            {!this.isLeaf && <span class={this.hitClasses} onClick={this.toggle}></span>}\n                                            <span class={this.iconClasses}></span>\n                                            {this.grid.checkbox && <span class={this.checkboxClasses} onClick={this.onCheckRow}></span>}\n                                            <TreeGridTitle row={this.row} column={col}></TreeGridTitle>\n                                        </>\n                                    }\n                                </div>\n                            }\n                        </td>\n\n                    ))\n                }\n            </tr>\n        )\n    }\n}","﻿import SlideUpDown from '../base/SlideUpDown';\nimport TreeGridRow from './TreeGridRow';\n\nexport default {\n    name: 'TreeGridChildren',\n    components: {\n        TreeGridRow\n    },\n    directives: { SlideUpDown },\n    props: {\n        gridBody: Object,\n        rows: {\n            type: Array,\n            default: () => []\n        },\n        prow: Object,\n        columns: Array,\n        depth: {\n            type: Number,\n            default: 0\n        }\n    },\n    computed: {\n        grid() {\n            return this.gridBody.view.grid;\n        }\n    },\n    render() {\n        return (\n            <table class=\"datagrid-btable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                <colgroup>\n                    {\n                        this.columns.map(col => (\n                            <col style={{ width: col.widthState }}></col>\n                        ))\n                    }\n                </colgroup>\n                <tbody>\n                    {\n                        (this.rows||[]).map((row) => (\n                            <>\n                                <TreeGridRow gridBody={this.gridBody} row={row} prow={this.prow} columns={this.columns} depth={this.depth}></TreeGridRow>\n                                {\n                                    row.children && row.children.length > 0 &&\n                                    <tr class=\"treegrid-tr-tree\">\n                                        <td colspan={this.columns.length} style=\"border:0\">\n                                            <div v-SlideUpDown={{animate:this.grid.animate,collapsed:row.state=='closed',disabled:false}}>\n                                                <TreeGridChildren gridBody={this.gridBody} rows={row.children} prow={row} columns={this.columns} depth={this.depth + 1}></TreeGridChildren>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                }\n                            </>\n                        ))\n                    }\n                </tbody>\n            </table>\n        )\n    }\n}","﻿import GridBody from '../gridbase/GridBody';\nimport TreeGridChildren from './TreeGridChildren';\n\nexport default {\n    name: 'TreeGridBody',\n    extends: GridBody,\n    components: {\n        TreeGridChildren\n    },\n    computed: {\n        view() {\n            return this.$parent;\n        }\n    },\n    render() {\n        return (\n            <div ref=\"bodyRef\" class=\"datagrid-body f-full\" onScroll={this.onScroll}>\n                <div ref=\"innerRef\" class=\"datagrid-body-inner\">\n                    <TreeGridChildren gridBody={this} rows={this.rows} columns={this.columns}></TreeGridChildren>\n                </div>\n            </div>\n        )\n    }\n}","﻿import GridView from '../gridbase/GridView';\nimport TreeGridBody from './TreeGridBody'\n\nexport default {\n    name: 'TreeGridView',\n    extends: GridView,\n    components: {\n        TreeGridBody\n    },\n    computed: {\n        grid() {\n            return this.$parent;\n        }\n    },\n    methods: {\n        onHeaderCellClick(event) {\n            let col = event.column;\n            if (col.sortable) {\n                this.grid.addSort(event.column);\n                // this.grid.data = this.grid.data;\n                this.grid.setData(this.grid.innerData);\n                this.grid.$emit('sortChange', this.grid.sortsState);\n            }\n        }\n    },\n    render() {\n        return (\n            <div class={this.viewCls}>\n                {\n                    this.grid.showHeader &&\n                    <GridHeader ref=\"header\"\n                        columnGroup={this.columnGroup}\n                        columns={this.columns}\n                        paddingWidth={this.headerPaddingWidth}\n                        grid={this.grid}\n                        onCellClick={this.onHeaderCellClick}>\n                    </GridHeader>\n                }\n                <TreeGridBody ref=\"body\" align=\"center\"\n                    columns={this.columns}\n                    rows={this.rows}\n                    onBodyScroll={this.onBodyScroll}>\n                </TreeGridBody>\n                {\n                    this.grid.showFooter &&\n                    <GridFooter ref=\"footer\"\n                        columns={this.columns}\n                        rows={this.footerRows}\n                        paddingWidth={this.headerPaddingWidth}>\n                    </GridFooter>\n                }\n            </div>\n        )\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport Pagination from '../pagination/Pagination';\nimport GridBase from '../gridbase/GridBase';\nimport GridEmpty from '../gridbase/GridEmpty';\nimport TreeGridView from './TreeGridView';\n\nexport default {\n    name: 'TreeGrid',\n    extends: GridBase,\n    components: {\n        Pagination,\n        TreeGridView,\n        GridEmpty\n    },\n    props: {\n        idField: String,\n        treeField: String,\n        selectionMode: {\n            type: String,\n            default: 'single'\n        },\n        checkbox: {\n            type: Boolean,\n            default: false\n        },\n        cascadeCheck: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: false\n        }\n    },\n    mounted() {\n        treeHelper.$vue = this;\n    },\n    methods: {\n        getCheckedRows(state = 'checked') {\n            let rows = [];\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.forNodes(this.innerData, (row) => {\n                if (row.checkState == state) {\n                    rows.push(row);\n                }\n            });\n            return rows;\n        },\n        checkRow(row) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.checkNode(row, () => {\n                this.$emit('rowCheck', row);\n            });\n        },\n        uncheckRow(row) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.uncheckNode(row, () => {\n                this.$emit('rowUncheck', row);\n            });\n        },\n        uncheckAllRows() {\n            treeHelper.uncheckAllNodes(this.innerData, () => {\n\n            });\n        },\n        adjustCheck(row) {\n            treeHelper.cascadeCheck = this.cascadeCheck;\n            treeHelper.adjustCheck(row);\n        },\n        sortData() {\n            if (!this.sortsState || !this.sortsState.length) {\n                return;\n            }\n            let cc = [];\n            for (let i = 0; i < this.sortsState.length; i++) {\n                cc.push(this.findColumn(this.sortsState[i].field));\n            }\n            let sortFunc = (a, b) => {\n                return a == b ? 0 : (a > b ? 1 : -1);\n            };\n            let _sort = (rows) => {\n                rows.sort((r1, r2) => {\n                    let r = 0;\n                    for (let i = 0; i < this.sortsState.length; i++) {\n                        let sort = this.sortsState[i];\n                        if (cc[i] && cc[i].sorter) {\n                            r = cc[i].sorter(r1, r2);\n                        } else {\n                            r = sortFunc(r1[sort.field], r2[sort.field]);\n                        }\n                        r = r * (sort.order == 'asc' ? 1 : -1);\n                        if (r != 0) {\n                            return r;\n                        }\n                    }\n                    return r;\n                });\n                rows.forEach(row => {\n                    if (row.children && row.children.length) {\n                        _sort(row.children);\n                    }\n                });\n            };\n            _sort(this.innerData);\n        }\n    },\n    render() {\n        return (\n            <div class=\"f-column panel-noscroll\">\n                <div style=\"display:none\">{this.$slots.default()}</div>\n                <div class={['panel-body panel-body-noheader datagrid datagrid-wrap f-full f-column', { 'panel-body-noborder': !this.border }]}>\n                    {\n                        this.pagination && (this.pagePosition == 'both' || this.pagePosition == 'top') &&\n                        <Pagination class=\"datagrid-pager datagrid-pager-top f-noshrink\"\n                            total={this.totalState}\n                            pageSize={this.pageSizeState}\n                            pageNumber={this.pageNumberState}\n                            loading={this.loading}\n                            onPageChange={this.onPageChange}\n                        />\n                    }\n                    <div ref=\"viewRef\" class=\"datagrid-view f-row f-full\">\n                        {\n                            (this.leftGroup || this.leftColumns) &&\n                            <TreeGridView ref=\"view1\"\n                                key=\"view1\"\n                                viewIndex={1}\n                                columnGroup={this.leftGroup}\n                                columns={this.leftColumns}\n                                rows={this.rows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.leftFrozenWidth }}\n                            />\n                        }\n                        <TreeGridView ref=\"view2\"\n                            key=\"view2\"\n                            viewIndex={2}\n                            columnGroup={this.centerGroup}\n                            columns={this.centerColumns}\n                            rows={this.rows}\n                            footerRows={this.footerRows}\n                            onBodyScroll={this.onBodyScroll}\n                        />\n                        {\n                            (this.rightGroup || this.rightColumns) &&\n                            <TreeGridView ref=\"view3\"\n                                key=\"view3\"\n                                viewIndex={3}\n                                columnGroup={this.rightGroup}\n                                columns={this.rightColumns}\n                                rows={this.rows}\n                                footerRows={this.footerRows}\n                                style={{ width: this.rightFrozenWidth }}\n                            />\n                        }\n                        {this.splitStyle && <div class=\"datagrid-split-proxy\" style={this.splitStyle}></div>}\n                    </div>\n                    {\n                        this.pagination && (this.pagePosition == 'both' || this.pagePosition == 'bottom') &&\n                        <Pagination class=\"datagrid-pager f-noshrink\"\n                            total={this.totalState}\n                            pageSize={this.pageSizeState}\n                            pageNumber={this.pageNumberState}\n                            loading={this.loading}\n                            pageChange={this.onPageChange}\n                        />\n                    }\n                </div>\n                {\n                    this.loading &&\n                    <div class=\"datagrid-loading f-row\">\n                        <div class=\"datagrid-mask\"></div>\n                        <div class=\"datagrid-mask-msg\">{this.loadMsg}</div>\n                    </div>\n                }\n                {\n                    !this.rows.length && !this.loading &&\n                    <GridEmpty grid={this}></GridEmpty>\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport { MyEvent } from '../base/DomHelper';\nimport Draggable from '../draggable/Draggable';\n\nexport default {\n    name: 'Slider',\n    directives: { Draggable },\n    props: {\n        value: [Number, Array],\n        modelValue: [Number, Array],\n        mode: {\n            type: String,\n            default: 'h'\n        },\n        reversed: {\n            type: Boolean,\n            default: false\n        },\n        showTip: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        range: {\n            type: Boolean,\n            default: false\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: 100\n        },\n        step: {\n            type: Number,\n            default: 1\n        },\n        rule: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        const v = this.value !== undefined ? this.value:this.modelValue;\n        return {\n            valueState: v\n        }\n    },\n    computed: {\n        sliderClasses() {\n            return ['slider', {\n                'slider-disabled': this.disabled,\n                'f-row slider-v': this.mode == 'v',\n                'f-column slider-h': this.mode == 'h'\n            }];\n        },\n        value1() {\n            return this.valueState instanceof Array ? this.valueState[0] : this.valueState;\n        },\n        value2() {\n            return this.range ? (this.valueState ? this.valueState[1] : null) : null;\n        },\n        displayingRule() {\n            let rule = this.mode == 'h' ? this.rule : this.rule.slice(0).reverse();\n            if (this.reversed) {\n                rule = rule.slice(0).reverse();\n            }\n            return rule;\n        },\n        dragOpts1() {\n            return {\n                disabled: this.disabled,\n                axis: this.mode,\n                cursor: 'pointer',\n                drag: this.onDragHandle\n            };\n        },\n        dragOpts2() {\n            return {\n                disabled: this.disabled,\n                axis: this.mode,\n                cursor: 'pointer',\n                drag: (event) => {\n                    this.onDragHandle(event, true);\n                }\n            };\n        }\n    },\n    methods: {\n        setValue(value) {\n            this.valueState = value;\n            // this.$emit('input', this.valueState);\n            this.$emit('update:modelValue',this.valueState);\n        },\n        getPosStyle(value) {\n            let pos = this.value2pos(value);\n            return this.mode == 'h' ? { left: pos + '%' } : { top: pos + '%' };\n        },\n        getRuleValueStyle(index) {\n            let distance = index * 100 / (this.displayingRule.length - 1) + '%';\n            return this.mode == 'h' ? { left: distance } : { top: distance };\n        },\n        value2pos(value) {\n            let pos = (value - this.min) * 100.0 / (this.max - this.min);\n            if (this.mode == 'v') {\n                pos = 100 - pos;\n            }\n            if (this.reversed) {\n                pos = 100 - pos;\n            }\n            return pos;\n        },\n        pos2value(pos) {\n            let size = this.mode == 'h' ? domHelper.outerWidth(this.$refs.sliderRef) : domHelper.outerHeight(this.$refs.sliderRef);\n            pos = this.mode == 'h' ? (this.reversed ? (size - pos) : pos) : (this.reversed ? pos : (size - pos));\n            let value = this.min + (this.max - this.min) * (pos / size);\n            return +value.toFixed(0);\n        },\n        setPos(pos, second = false) {\n            let value = this.pos2value(pos);\n            let s = Math.abs(value % this.step);\n            if (s < this.step / 2) {\n                value -= s;\n            } else {\n                value = value - s + this.step;\n            }\n            if (this.range) {\n                let v1 = this.value1;\n                let v2 = this.value2;\n                if (second) {\n                    if (value < v1) {\n                        value = v1;\n                    }\n                    v2 = value;\n                } else {\n                    if (value > v2) {\n                        value = v2;\n                    }\n                    v1 = value;\n                }\n                this.setValue([v1, v2]);\n            } else {\n                this.setValue(value);\n            }\n            return value;\n        },\n\n        onDragHandle(event, second = false) {\n            if (this.disabled) {\n                return;\n            }\n            if (this.mode == 'h') {\n                let width = domHelper.outerWidth(this.$refs.sliderRef);\n                if (event.left < 0) {\n                    event.left = 0;\n                }\n                if (event.left > width) {\n                    event.left = width;\n                }\n            } else {\n                let height = domHelper.outerHeight(this.$refs.sliderRef);\n                if (event.top < 0) {\n                    event.top = 0;\n                }\n                if (event.top > height) {\n                    event.top = height;\n                }\n            }\n            if (this.mode == 'h') {\n                let width = domHelper.outerWidth(this.$refs.sliderRef);\n                let value = this.setPos(event.left, second);\n                event.left = this.value2pos(value) * width / 100;\n            } else {\n                let height = domHelper.outerHeight(this.$refs.sliderRef);\n                let value = this.setPos(event.top, second);\n                event.top = this.value2pos(value) * height / 100;\n            }\n            event.target.applyDrag();\n        },\n        doDown(event) {\n            if (this.disabled) {\n                return;\n            }\n            event = new MyEvent(event);\n            let offset = domHelper.offset(this.$refs.sinnerRef);\n            let pos = this.mode == 'h' ? event.pageX - offset.left : event.pageY - offset.top;\n            let value = this.pos2value(pos);\n            let s = Math.abs(value % this.step);\n            if (s < this.step / 2) {\n                value -= s;\n            } else {\n                value = value - s + this.step;\n            }\n            if (this.range) {\n                let v1 = this.value1;\n                let v2 = this.value2;\n                let m = (v1 + v2) / 2.0;\n                if (value < v1) {\n                    v1 = value;\n                } else if (value > v2) {\n                    v2 = value;\n                } else {\n                    value < m ? v1 = value : v2 = value;\n                }\n                this.setValue([v1, v2]);\n            } else {\n                this.setValue(value);\n            }\n        }\n\n\n    },\n    render() {\n        return (\n            <div ref=\"sliderRef\" class={this.sliderClasses}>\n                <div ref=\"sinnerRef\" class=\"slider-inner\" onTouchstart={this.doDown} onMousedown={this.doDown}>\n                    <a href=\"javascript:;\" class=\"slider-handle\" style={this.getPosStyle(this.value1)} v-Draggable={this.dragOpts1}></a>\n                    {this.showTip && <span class=\"slider-tip\" style={this.getPosStyle(this.value1)}>{this.value1}</span>}\n                    {\n                        this.range &&\n                        <>\n                            <a href=\"javascript:;\" class=\"slider-handle\" style={this.getPosStyle(this.value2)} v-Draggable={this.dragOpts2}></a>\n                            {this.showTip && <span class=\"slider-tip\" style={this.getPosStyle(this.value2)}>{this.value2}</span>}\n                        </>\n                    }\n                </div>\n                {\n                    this.rule.length > 0 &&\n                    <>\n                        <div class=\"slider-rule\">\n                            {\n                                this.displayingRule.map((v, index) => (\n                                    <span style={this.getRuleValueStyle(index)}></span>\n                                ))\n                            }\n                        </div>\n                        <div class=\"slider-rulelabel\">\n                            {\n                                this.displayingRule.map((v, index) => (\n                                    <>\n                                        {v != '|' && <span style={this.getRuleValueStyle(index)}>{v}</span>}\n                                    </>\n                                ))\n                            }\n                        </div>\n                    </>\n                }\n            </div>\n        )\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport ComboBox from '../combobox/ComboBox';\n\nexport default {\n    name: 'TagBox',\n    extends: ComboBox,\n    props: {\n        hasDownArrow: {\n            type: Boolean,\n            default: false\n        },\n        multiple: {\n            type: Boolean,\n            default: true\n        },\n        limitToList: {\n            type: Boolean,\n            default: false\n        },\n        tagCss: [Function, String, Object]\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n            }\n            return this.textState;\n        }\n    },\n    mounted() {\n        this.textState = '';\n        this.$nextTick(() => {\n            this.autoSizeInput();\n        });\n        // this.$on('blur', () => {\n        //     this.textState = '';\n        //     this.$nextTick(() => {\n        //         this.autoSizeInput();\n        //     });\n        // });\n        // this.$on('valueChange', () => {\n        //     this.closePanel();\n        // });\n    },\n    methods: {\n        afterValueChange() {\n            ComboBox.methods.afterValueChange.call(this)\n            this.closePanel();\n        },\n        afterBlur() {\n            ComboBox.methods.afterBlur.call(this)\n            this.textState = '';\n            this.$nextTick(() => {\n                this.autoSizeInput();\n            });\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.limitToList) {\n                    this.openPanel();\n                    clearTimeout(this.timer);\n                    this.timer = setTimeout(() => {\n                        this.doFilter(this.textState);\n                    }, this.delay);\n                }\n                this.autoSizeInput();\n            }\n        },\n        onKeyDown(event) {\n            ComboBox.methods.onKeyDown.call(this, event);\n            if (event.which == 13) {\n                this.doEnter();\n            } else if (event.which == 27) {\n                this.textState = '';\n                this.autoSizeInput();\n            }\n        },\n        doEnter() {\n            this.autoSizeInput();\n            if (this.limitToList) {\n                this.doFilter('');\n            } else {\n                const text = this.textState.trim();\n                if (text) {\n                    let value = [].concat(this.valueState);\n                    value.push(text);\n                    this.setValue(value);\n                }\n            }\n            this.textState = '';\n            this.autoSizeInput();\n        },\n        getCss(css, row, type) {\n            if (css) {\n                let cssValue = typeof css == 'function' ? css(row) : css;\n                if (type == 'class') {\n                    return typeof cssValue == 'string' ? cssValue : null;\n                } else {\n                    return typeof cssValue == 'object' ? cssValue : null;\n                }\n            }\n            return null;\n        },\n        getTagClass(row) {\n            return this.getCss(this.tagCss, row, 'class');\n        },\n        getTagStyle(row) {\n            return this.getCss(this.tagCss, row, 'style');\n        },\n        fixValue() {\n            // do nothing\n            this.autoSizeInput();\n        },\n        removeTag(index) {\n            let value = this.valueState.filter((v, i) => i != index);\n            this.setValue(value);\n        },\n        autoSizeInput() {\n            if (!this.$refs.inputRef) {\n                return;\n            }\n            let el = this.$refs.inputRef;\n            let style = getComputedStyle(el);\n            let tmp = document.createElement('span');\n            Object.assign(tmp.style, {\n                position: 'absolute',\n                top: -9999,\n                left: -9999,\n                width: 'auto',\n                fontFamily: style.fontFamily,\n                fontSize: style.fontSize,\n                fontWeight: style.fontWeight,\n                whiteSpace: 'nowrap'\n            });\n            tmp.innerHTML = this.text;\n            document.body.appendChild(tmp);\n\n            let getWidth = (val) => {\n                val = val || '';\n                var s = val.replace(/&/g, '&amp;').replace(/\\s/g, ' ').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n                tmp.innerHTML = s;\n                return domHelper.outerWidth(tmp);\n            };\n            let width = this.text ? getWidth(this.text) : getWidth(this.placeholder);\n            document.body.removeChild(tmp);\n            this.$refs.inputRef.style.width = (width + 20) + 'px';\n            if (!this.panelClosed) {\n                this.$nextTick(() => this.alignPanel());\n            }\n        },\n        renderLabels() {\n            return (\n                <span class=\"tagbox-labels f-full f-order3\">\n                    {\n                        (this.selection || []).map((row, rowIndex) => (\n                            <span\n                                class={['tagbox-label f-order3 f-noshrink', this.getTagClass(row)]}\n                                style={this.getTagStyle(row)}\n                            >\n                                {row[this.textField]}\n                                <a href=\"javascript:;\" class=\"tagbox-remove\" onClick={() => this.removeTag(rowIndex)}></a>\n                            </span>\n                        ))\n                    }\n                    {\n                        this.renderInput()\n                    }\n                </span>\n            )\n        },\n        renderField() {\n            return (\n                <span class={['combo tagbox f-field', this.baseClasses]} onClick={() => this.$refs.inputRef.focus()}>\n                    {this.renderLabels()}\n                    {/* {this.renderInput()} */}\n                    {this.renderAddon()}\n                    {this.renderOthers()}\n                </span>\n            )\n        }\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport InputBase from '../base/InputBase';\n\nexport default {\n    name: 'SearchBox',\n    extends: InputBase,\n    props: {\n        menuAlign: {\n            type: String,\n            default: 'left'\n        },\n        category: String,\n        buttonAlign: {\n            type: String,\n            default: 'right'\n        },\n        buttonIconCls: {\n            type: String,\n            default: 'icon-search'\n        }\n    },\n    data() {\n        return {\n            hasMenu: true,\n            menu: null,\n            menuBtnText: null,\n            menuBtnIcon: null,\n            categoryState: this.category\n        }\n    },\n    watch: {\n        category(value) {\n            this.categoryState = value;\n        }\n    },\n    computed: {\n        text() {\n            return this.focused ? this.textState : (this.textFormatter || this.defaultTextFormatter)(this.textState);\n        },\n        baseClasses() {\n            const cls = InputBase.computed.baseClasses();\n            return ['searchbox'].concat(cls);\n        },\n        mbClasses() {\n            return ['f-noshrink textbox-button textbox-button-' + this.menuAlign, {\n                'f-order0': this.menuAlign == 'left',\n                'f-order7': this.menuAlign == 'right'\n            }];\n        },\n        buttonClasses() {\n            return ['textbox-addon f-column f-noshrink', {\n                'f-order0': this.buttonAlign == 'left',\n                'f-order6': this.buttonAlign == 'right'\n            }];\n        }\n    },\n    mounted() {\n        domHelper.bind(this.$el, 'keydown', this.onKeyDown);\n        if (this.$refs.mb) {\n            this.menu = this.$refs.mb.menu;\n        } else {\n            this.hasMenu = false;\n        }\n        this.initMenu();\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$el, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        onInput(event) {\n            this.textState = event.target.value;\n            this.setValue(this.textState);\n        },\n        onKeyDown(event) {\n            if (event.which == 13) {\n                event.stopPropagation();\n                event.preventDefault();\n                this.doSearch();\n            }\n        },\n        setValue(value) {\n            this.textState = value;\n            InputBase.methods.setValue.call(this, value);\n        },\n        doSearch() {\n            if (this.disabled || this.readonly) {\n                return;\n            }\n            this.$emit('search', {\n                value: this.valueState,\n                category: this.categoryState\n            });\n        },\n        initMenu() {\n            if (this.menu) {\n                this.setCategory(this.categoryState);\n                this.menu.afterItemClick = (value) => {\n                    if (!this.disabled && !this.readonly) {\n                        this.setCategory(value);\n                    }\n                }\n            }\n        },\n        setCategory(value) {\n            let item = this.menu.findItem(value);\n            if (!item) {\n                item = this.menu.subItems[0];\n            }\n            this.categoryState = item.value || item.text;\n            this.menuBtnText = item.text;\n            this.menuBtnIcon = item.iconCls;\n        },\n        renderOthers() {\n            let menu = null;\n            if (this.$slots.default) {\n                this.$slots.default().forEach(m => {\n                    if (m.type.name == 'Menu') {\n                        menu = m;\n                    }\n                })\n            }\n            return (\n                <>\n                    {\n                        menu &&\n                        <MenuButton ref=\"mb\"\n                            class={this.mbClasses}\n                            text={this.menuBtnText}\n                            iconCls={this.menuBtnIcon}\n                            disabled={this.disabled}\n                        >\n                            {menu}\n                        </MenuButton>\n                    }\n                    <span class={this.buttonClasses}>\n                        <span class={'textbox-icon f-full ' + this.buttonIconCls} onClick={this.doSearch}></span>\n                    </span>\n                </>\n            )\n        }\n    }\n}","﻿import { h } from 'vue';\nimport domHelper from '../base/DomHelper';\n\nwindow.FormFieldIdIndex = window.FormFieldIdIndex || 1;\n\nexport default {\n    name: 'FormField',\n    props: {\n        name: String,\n        label: String,\n        labelPosition: String,\n        labelAlign: String,\n        labelFor: String,\n        labelWidth: [Number, String]\n    },\n    computed: {\n        form() {\n            let parent = this.$parent;\n            while (parent && parent.$options.name != 'Form') {\n                parent = parent.$parent;\n            }\n            return parent;\n        },\n        fieldClasses() {\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            const floatingLabel = this.form.floatingLabel;\n            const error = this.form.getError(this.name);\n            const value = this.form.getValue(this.name);\n            const focused = this.form.isFocused(this.name);\n            return ['form-field f-column', {\n                'form-field-haserror': error && this.form.errorType === 'label',\n                'form-field-empty': value == null || String(value).trim().length === 0,\n                'form-field-focused': focused,\n                'form-floating-label': floatingLabel && labelPosition === 'top'\n            }]\n        },\n        innerClasses() {\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            return ['f-full', {\n                'f-row f-vcenter': labelPosition !== 'top',\n                'f-column': labelPosition === 'top'\n            }]\n        }\n    },\n    created() {\n        this.inputId = 'form-field-inputid-' + window.FormFieldIdIndex++;\n    },\n    render() {\n        const renderLabel = (position) => {\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            if (labelPosition != position) {\n                return null;\n            }\n            const labelAlign = this.labelAlign || this.form.labelAlign;\n            const labelWidth = this.labelWidth || this.form.labelWidth;\n            const labelCls = ['f-noshrink', {\n                'textbox-label-after': labelPosition === 'after',\n                'textbox-label-top': labelPosition === 'top'\n            }];\n            const labelStyle = 'width:' + domHelper.toStyleValue(labelWidth);\n            const label = this.$slots['label'] ? this.$slots['label']() : this.label;\n            return (\n                <Label for={this.labelFor || this.inputId} align={labelAlign} class={labelCls} style={labelStyle}>{label}</Label>\n            )\n        }\n        const renderError = () => {\n            const error = this.form.getError(this.name);\n            if (this.form.errorType != 'label' || !error) {\n                return null;\n            }\n            const labelPosition = this.labelPosition || this.form.labelPosition;\n            const labelWidth = this.labelWidth || this.form.labelWidth;\n            let errorStyle = null;\n            if (this.label && labelPosition === 'before') {\n                errorStyle = 'margin-left:' + domHelper.toStyleValue(labelWidth);\n            }\n            return (\n                <div class=\"form-field-error\" style={errorStyle}>{error}</div>\n            )\n        }\n        let input = this.$slots.default();\n        let inputDisabled = false;\n        input.forEach(c => {\n            if (c.props){\n                c.props.inputId = this.inputId;\n                if (c.props.disabled) {\n                    inputDisabled = true;\n                }\n            }\n        });\n        if (this.form.errorType != 'label') {\n            const error = this.form.getError(this.name);\n            const tip = {\n                closed: false,\n                disabled: inputDisabled,\n                content: error,\n                position: this.form.tooltipPosition\n            }\n            input = (\n                <span class=\"f-full f-column\" v-Tooltip={tip}>{input}</span>\n            )\n        }\n        return h('div', {\n            'class': this.fieldClasses\n        }, [\n            h('div', {\n                'class': this.innerClasses\n            }, [\n                renderLabel('top'),\n                renderLabel('before'),\n                input,\n                renderLabel('after')\n            ]),\n            renderError()\n        ])\n    }\n}","﻿export default {\n    name: 'SideMenuIcon',\n    props: {\n        sidemenu: Object,\n        menu: Object,\n        header: {\n            type: Boolean,\n            default: true\n        }\n    },\n    render(){\n        return this.sidemenu.$slots['icon']({\n            menu: this.menu,\n            header: this.header,\n            collapsed: this.sidemenu.collapsed\n        })\n    }\n}","﻿import { Accordion, AccordionPanel } from '../accordion';\nimport Tree from '../tree/Tree';\nimport SideMenuIcon from './SideMenuIcon';\n\nexport default {\n    name: 'SideMenuItems',\n    components: {\n        Accordion,\n        AccordionPanel,\n        Tree,\n        SideMenuIcon\n    },\n    props: {\n        sidemenu: Object,\n        tip: Boolean,\n        data: [Array, Object],\n        width: null\n    },\n    data() {\n        return {\n            innerData: this.data\n        }\n    },\n    computed: {\n        border() {\n            return this.tip ? true : this.sidemenu.border;\n        },\n        multiple() {\n            return this.tip ? false : this.sidemenu.multiple;\n        }\n    },\n    watch: {\n        data() {\n            this.setData(this.data);\n        }\n    },\n    created() {\n        this.setData(this.data);\n    },\n    methods: {\n        setData(value) {\n            if (this.tip) {\n                let v = Object.assign({}, value);\n                v.state = 'open';\n                this.innerData = [v];\n            } else {\n                this.innerData = value;\n            }\n        },\n        onPanelSelect(panel) {\n            let index = this.$refs.accordion.getPanelIndex(panel);\n            if (index >= 0) {\n                this.data[index].state = 'open';\n                // this.$set(this.data[index], 'state', 'open');\n            }\n        },\n        onPanelUnselect(panel) {\n            let index = this.$refs.accordion.getPanelIndex(panel);\n            if (index >= 0) {\n                this.data[index].state = 'closed';\n                // this.$set(this.data[index], 'state', 'closed');\n            }\n        }\n    },\n    render() {\n        return (\n            <div class=\"sidemenu f-column f-full\" style={{ width: this.width ? this.width + 'px' : null }}>\n                <Accordion ref=\"accordion\" class=\"f-full\"\n                    border={this.border}\n                    animate={this.sidemenu.animate}\n                    multiple={this.multiple}\n                    onPanelSelect={this.onPanelSelect}\n                    onPanelUnselect={this.onPanelUnselect}\n                >\n                    {\n                        this.innerData.map(menu => (\n                            <AccordionPanel\n                                title={menu.text}\n                                iconCls={this.tip ? null : menu.iconCls}\n                                collapsed={menu.state == 'closed'}>\n                                <Tree\n                                    data={menu.children}\n                                    selection={this.sidemenu.selectionState}\n                                    selectLeafOnly={true}\n                                    animate={this.sidemenu.animate}\n                                    onSelectionChange={this.sidemenu.onSelectionChange}\n                                    onNodeClick={this.sidemenu.onNodeClick}>\n                                    {\n\n                                    }\n                                    {/* <template :slot=\"sidemenu.$scopedSlots.icon?'icon':null\" slot-scope=\"{node}\">\n                    <SideMenuIcon :sidemenu=\"sidemenu\" :menu=\"node\" :header=\"false\"></SideMenuIcon>\n                </template> */}\n                                </Tree>\n                                {\n                                    !this.tip && this.sidemenu.$slots['icon'] &&\n                                    <SideMenuIcon sidemenu={this.sidemenu} menu={menu} header={true}></SideMenuIcon>\n                                }\n                            </AccordionPanel>\n\n                        ))\n                    }\n\n                </Accordion>\n            </div>\n        )\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport SideMenuItems from './SideMenuItems';\nimport SideMenuIcon from './SideMenuIcon';\n\nexport default {\n    name: 'SideMenu',\n    components: {\n        SideMenuItems,\n        SideMenuIcon\n    },\n    props: {\n        data: Array,\n        selection: Object,\n        collapsed: {\n            type: Boolean,\n            default: false\n        },\n        border: {\n            type: Boolean,\n            default: true\n        },\n        animate: {\n            type: Boolean,\n            default: true\n        },\n        multiple: {\n            type: Boolean,\n            default: true\n        },\n        floatMenuWidth: {\n            type: Number,\n            default: 200\n        },\n        floatMenuPosition: {\n            type: String,\n            default: 'right'\n        }\n    },\n    data() {\n        return {\n            // selection: null,\n            selectionState: this.selection,\n            tipClosed: true,\n            innerData: []\n        }\n    },\n    watch: {\n        data(value) {\n            this.setData(value);\n        },\n        selection(value) {\n            this.selectItem(value);\n        }\n    },\n    computed: {\n        sidemenu() {\n            return this;\n        }\n    },\n    mounted() {\n        this.setData(this.data);\n    },\n    methods: {\n        setData(value) {\n            if (value == null) {\n                value = [];\n            }\n            this.innerData = Object.assign([], value);\n            treeHelper.$vue = this;\n            treeHelper.forNodes(this.innerData, (node) => {\n                if (!node.iconCls) {\n                    node.iconCls = 'sidemenu-default-icon';\n                    // this.$set(node, 'iconCls', 'sidemenu-default-icon');\n                }\n                if (node.children) {\n                    node.nodeCls = 'tree-node-nonleaf';\n                    // this.$set(node, 'nodeCls', 'tree-node-nonleaf');\n                    if (!node.state) {\n                        node.state = 'closed';\n                        // this.$set(node, 'state', 'closed');\n                    }\n                    if (node.state == 'open') {\n                        node.nodeCls = 'tree-node-nonleaf';\n                        // this.$set(node, 'nodeCls', 'tree-node-nonleaf');\n                    } else {\n                        node.nodeCls = 'tree-node-nonleaf tree-node-nonleaf-collapsed';\n                        // this.$set(node, 'nodeCls', 'tree-node-nonleaf tree-node-nonleaf-collapsed');\n                    }\n                }\n            });\n        },\n        getTipOpts(menu) {\n            return {\n                position: this.floatMenuPosition,\n                tooltipCls: 'sidemenu-tooltip',\n                valign: 'top',\n                propsData: {\n                    sidemenu: this,\n                    data: menu,\n                    tip: true,\n                    width: this.floatMenuWidth\n                },\n                component: SideMenuItems,\n                content: (\n                    <SideMenuItems\n                        sidemenu={this}\n                        data={menu}\n                        tip={true}\n                        width={this.floatMenuWidth}\n                    />\n                ),\n                closed: menu.tipClosed != null ? menu.tipClosed : true,\n                tooltipShow: () => {\n                    menu.tipClosed = false;\n                    // this.$set(menu, 'tipClosed', false);\n                },\n                tooltipHide: () => {\n                    menu.tipClosed = true;\n                    // this.$set(menu, 'tipClosed', true);\n                }\n            };\n        },\n        selectItem(item) {\n            if (item != this.selectionState) {\n                let parent = null;\n                treeHelper.forNodes(this.innerData, (node) => {\n                    (node.children || []).forEach(n => {\n                        if (n == item) {\n                            parent = node;\n                        }\n                    })\n                })\n                while (parent) {\n                    parent.state = 'open';\n                    // this.$set(parent, 'state', 'open');\n                    parent = parent.parent;\n                }\n                this.selectionState = item;\n            }\n        },\n        onSelectionChange(node) {\n            this.selectionState = node;\n            this.$emit('selectionChange', this.selectionState);\n        },\n        onNodeClick(node) {\n            if (node.children) {\n                node.state = node.state == 'closed' ? 'open' : 'closed'\n                // this.$set(node, 'state', node.state == 'closed' ? 'open' : 'closed');\n                if (node.state == 'open') {\n                    node.nodeCls = 'tree-node-nonleaf';\n                    // this.$set(node, 'nodeCls', 'tree-node-nonleaf');\n                } else {\n                    node.nodeCls = 'tree-node-nonleaf tree-node-nonleaf-collapsed';\n                    // this.$set(node, 'nodeCls', 'tree-node-nonleaf tree-node-nonleaf-collapsed');\n                }\n            } else {\n                this.$emit('itemClick', node);\n                this.innerData.forEach(menu => menu.tipClosed = true);\n                // this.innerData.forEach(menu => this.$set(menu, 'tipClosed', true));\n            }\n        }\n    },\n    render() {\n        return (\n            <div class=\"f-column\">\n                {\n                    this.collapsed &&\n                    <div class=\"sidemenu sidemenu-collapsed f-full\">\n                        <div class={['accordion', { 'accordion-noborder': !this.border }]}>\n                            {\n                                this.innerData.map(menu => (\n                                    <div class=\"panel-header accordion-header\" v-Tooltip={this.getTipOpts(menu)}>\n                                        {\n                                            !this.$slots['icon'] &&\n                                            <>\n                                                <div class=\"panel-title panel-with-icon\"></div>\n                                                <div class={['panel-icon', menu.iconCls]}></div>\n                                            </>\n                                        }\n                                        {\n                                            this.$slots['icon'] &&\n                                            <SideMenuIcon sidemenu={this.sidemenu} menu={menu} header={true}></SideMenuIcon>\n                                        }\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                }\n                {\n                    !this.collapsed &&\n                    <SideMenuItems sidemenu={this.sidemenu} data={this.innerData}>\n                    </SideMenuItems>\n                }\n            </div >\n        )\n    }\n}","﻿import { LinkButton } from \"../linkbutton\";\n\nexport default {\n    name: 'MessagerContent',\n    props: {\n        messagerType: String,\n        title: String,\n        icon: String,\n        msg: String,\n        value: String,\n        buttons: Array\n    },\n    data() {\n        return {\n            inputValue: this.value\n        }\n    },\n    computed: {\n        messagerIcon() {\n            return this.icon ? 'messager-' + this.icon : null;\n        },\n        dialog() {\n            return this.$parent;\n        }\n    },\n    mounted() {\n        if (this.$refs.input) {\n            setTimeout(() => {\n                this.$refs.input.focus();\n            }, 300);\n        } else if (this.$refs.buttons && this.$refs.buttons.length) {\n            setTimeout(() => {\n                this.$refs.buttons[0].focus();\n            }, 300);\n        }\n    },\n    methods: {\n        closeDialog(button) {\n            if (this.messagerType == 'prompt' && button && button['value'] == true) {\n                this.dialog.resultValue = this.inputValue;\n            } else {\n                this.dialog.resultValue = button ? button['value'] : null;\n            }\n            this.dialog.close();\n        }\n    },\n    render() {\n        return (\n            <div class=\"f-column f-full\">\n                <div class=\"messager-body f-full f-column\">\n                    <div class=\"f-row f-full\">\n                        {this.messagerIcon && <div class={'f-noshrink messager-icon ' + this.messagerIcon}></div>}\n                        <div class=\"f-full\">\n                            {this.msg}\n                        </div>\n                    </div>\n                    {\n                        this.messagerType == 'prompt' &&\n                        <div style=\"margin-top:20px\">\n                            <input ref=\"input\" class=\"messager-input\" v-model={this.inputValue} />\n                        </div>\n                    }\n                </div>\n                {\n                    this.buttons &&\n                    <div class=\"dialog-button messager-button f-noshrink\">\n                        {\n                            this.buttons.map(button => (\n                                <LinkButton\n                                    ref=\"buttons\"\n                                    text={button.text}\n                                    onClick={() => this.closeDialog(button)}\n                                />\n                            ))\n                        }\n                    </div>\n                }\n            </div>\n        )\n    }\n}","﻿import Dialog from '../dialog/Dialog';\nimport MessagerContent from './MessagerContent';\nimport domHelper from '../base/DomHelper';\n\nexport default {\n    name: 'MessagerDialog',\n    extends: Dialog,\n    props: {\n        component: {\n            type: [String, Object],\n            default: () => { return MessagerContent }\n        },\n        messagerIdIndex: Number,\n        messagerType: String,\n        closeMe: Function,\n        dialogStyle: {\n            type: Object,\n            default: () => { return { width: '360px', minHeight: '130px' } }\n        },\n        modal: {\n            type: Boolean,\n            default: true\n        },\n        closed: {\n            type: Boolean,\n            default: true\n        },\n        title: String,\n        msg: String,\n        icon: String,\n        value: String,\n        buttons: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            resultValue: null\n        }\n    },\n    computed: {\n        messagerIcon() {\n            return this.icon ? 'messager-' + this.icon : null;\n        }\n    },\n    mounted() {\n        window.EventHub.$on('messagerOpen', (props) => {\n            if (this.messagerIdIndex == props.messagerIdIndex) {\n                this.open();\n            }\n        })\n        window.EventHub.$on('messagerClose', (props) => {\n            if (this.messagerIdIndex == props.messagerIdIndex) {\n                this.close();\n            }\n        })\n        window.EventHub.$on('messagerPosition', (props) => {\n            if (this.messagerIdIndex == props.messagerIdIndex) {\n                this.top = props.top;\n                props.outerHeight = domHelper.outerHeight(this.$refs.panelRef);\n            }\n        })\n\n    },\n    methods: {\n        close() {\n            Dialog.methods.close.call(this);\n            this.closeMe(this.resultValue)\n        },\n        panelBody() {\n            return (\n                <div ref=\"bodyRef\" v-SlideUpDown={{ animate: this.animateState, collapsed: this.collapsedState, disabled: !this.collapseToShrinkBody }} class={['f-column ', this.bodyClasses]} style={this.bodyStyle}>\n                    <MessagerContent\n                        messagerType={this.messagerType}\n                        title={this.title}\n                        msg={this.msg}\n                        value={this.value}\n                        icon={this.icon}\n                        buttons={this.buttons}\n                    />\n                </div>\n            )\n        }\n    }\n}","﻿import { createVNode, render } from 'vue';\nimport MessagerDialog from './MessagerDialog';\n\nwindow.MessagerIdIndex = window.MessagerIdIndex || 1;\nexport default class Messager {\n    constructor() {\n        this.ok = window.Locale.t('Messager.ok', 'Ok');\n        this.cancel = window.Locale.t('Messager.cancel', 'Cancel');\n        this.template = null;\n        this.dialogs = [];\n    }\n\n    alert(options) {\n        if (!options.buttons || !options.buttons.length) {\n            options.buttons = [{ text: this.ok, value: true }];\n        }\n        return this.openDialog(options, 'alert');\n    }\n\n    confirm(options) {\n        if (!options.icon) {\n            options.icon = 'question';\n        }\n        if (!options.buttons || !options.buttons.length) {\n            options.buttons = [\n                { text: this.ok, value: true },\n                { text: this.cancel, value: false }\n            ];\n        }\n        return this.openDialog(options, 'confirm');\n    }\n\n    prompt(options) {\n        if (!options.icon) {\n            options.icon = 'question';\n        }\n        if (!options.buttons || !options.buttons.length) {\n            options.buttons = [\n                { text: this.ok, value: true },\n                { text: this.cancel, value: false }\n            ];\n        }\n        return this.openDialog(options, 'prompt');\n    }\n\n    // setPositions() {\n    //     const dialogs = this.dialogs.filter(d => d.messagerType == 'tip');\n    //     let top = 20 + document.body.scrollTop + document.documentElement.scrollTop;\n    //     dialogs.forEach(dlg => {\n    //         dlg.top = top;\n    //         top += 10 + domHelper.outerHeight(dlg.$refs.panelRef);\n    //     })\n    // }\n    setPositions() {\n        const dialogs = this.dialogs.filter(d => d.messagerType == 'tip');\n        let top = 20 + document.body.scrollTop + document.documentElement.scrollTop;\n        dialogs.forEach(dlg => {\n            dlg.top = top;\n            window.EventHub.$emit('messagerPosition', dlg)\n            top += 10 + dlg.outerHeight;\n        })\n    }\n\n    tip(options) {\n        if (typeof options == 'string') {\n            options = { msg: options }\n        }\n        if (options.timeout == null) {\n            options.timeout = 2000;\n        }\n        let top = 0;\n        const dialogs = this.dialogs.filter(d => d.messagerType == 'tip');\n        if (dialogs.length) {\n            const dlg = dialogs[dialogs.length - 1];\n            top = dlg.top + dlg.outerHeight;\n            // top = dlg.top + domHelper.outerHeight(dlg.$refs.panelRef);\n        }\n        const dlg = this.openDialog(Object.assign({\n            borderType: 'none',\n            dialogCls: 'messager-tip f-animate',\n            dialogStyle: { top: top + 'px', height: 'auto' },\n            buttons: null,\n            modal: false\n        }, options), 'tip')\n        setTimeout(() => this.setPositions());\n        return dlg;\n    }\n\n    openDialog(options, type = 'alert') {\n        options.messagerType = type;\n        options.messagerIdIndex = window.MessagerIdIndex++;\n\n        const createDialog = () => {\n            const el = document.createElement('div');\n            document.body.appendChild(el);\n            const closeMe = (resultValue) => {\n                const index = this.dialogs.findIndex(d => d.messagerIdIndex == options.messagerIdIndex)\n                if (index>=0){\n                    const dlg = this.dialogs[index];\n                    this.dialogs.splice(index, 1);\n                    window.EventHub.$emit('messagerClose', dlg)\n                    setTimeout(() => {\n                        render(null, el)\n                        document.body.removeChild(el);\n                        if (dlg.props.result){\n                            dlg.props.result(resultValue)\n                        }\n                        this.setPositions();\n                    })\n\n                }\n            }\n            const vn = createVNode(MessagerDialog, {\n                ...options,\n                closeMe,\n                onClose: ()=>{\n                    closeMe()\n                }\n            })\n            render(vn, el)\n            return {\n                closeMe: closeMe,\n                messagerType: options.messagerType,\n                messagerIdIndex: options.messagerIdIndex,\n                props: vn.props\n            }\n        }\n\n        const dialog = createDialog()\n        this.dialogs.push(dialog)\n        if (options.timeout) {\n            setTimeout(() => {\n                dialog.closeMe();\n            }, options.timeout)\n        }\n        window.EventHub.$emit('messagerOpen', dialog.props)\n    }\n\n    // openDialog(options, type = 'alert') {\n    //     options.messagerType = type;\n    //     if (options.template || this.template) {\n    //         options.component = {\n    //             template: options.template || this.template,\n    //             extends: MessagerContent\n    //         };\n    //     }\n    //     const MessageDialogConstructor = window.Vue.extend(MessagerDialog);\n    //     let dialog = new MessageDialogConstructor({\n    //         propsData: options\n    //     });\n    //     dialog.$mount();\n    //     document.body.appendChild(dialog.$el);\n    //     dialog.open();\n    //     dialog.$on('close', () => {\n    //         const index = this.dialogs.indexOf(dialog);\n    //         if (index >= 0) {\n    //             this.dialogs.splice(index, 1);\n    //         }\n    //         dialog.$nextTick(() => {\n    //             document.body.removeChild(dialog.$el);\n    //             dialog.$destroy();\n    //             if (options.result) {\n    //                 options.result(dialog.resultValue);\n    //             }\n    //             this.setPositions();\n    //         });\n    //     });\n    //     this.dialogs.push(dialog);\n    //     if (options.timeout) {\n    //         setTimeout(() => {\n    //             dialog.close();\n    //         }, options.timeout)\n    //     }\n    //     return dialog;\n    // }\n\n    closeAll() {\n        this.dialogs.forEach(d => d.closeMe());\n        this.dialogs = []\n    }\n}","﻿import treeHelper from '../base/TreeHelper';\nimport domHelper from '../base/DomHelper';\nimport ComboBase from '../base/ComboBase';\nimport { FieldBase } from '../base';\n\nexport default {\n    name: 'ComboTree',\n    extends: ComboBase,\n    props: {\n        data: Array,\n        value: [String, Number, Array],\n        valueField: {\n            type: String,\n            default: 'id'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        cascadeText: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            innerData: this.data,\n            mappingTexts: {},\n            displayingText: null,\n            inputingText: null,\n            updatingText: false,\n            selection: null,\n            timer: null,\n            trees: []\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n                this.textState = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n            }\n            return this.textState;\n        },\n        tree: {\n            cache: false,\n            get() {\n                for (let i = 0; i < this.trees.length; i++) {\n                    const t = this.trees[i];\n                    if (domHelper.isChild(t.$el, this.$refs.panelRef)) {\n                        return t;\n                    }\n                }\n                // if (this.$children){\n                //     for(let i=0; i<this.$children.length; i++){\n                //         let c = this.$children[i];\n                //         if (c.$options.name == 'Tree'){\n                //             return c;\n                //         }\n                //     }\n                // }\n                return null;\n            }\n        }\n    },\n    watch: {\n        data() {\n            this.innerData = this.data;\n        }\n    },\n    created() {\n        treeHelper.$vue = this;\n    },\n    mounted() {\n        // this.$on('valueChange', () => {\n        //     if (!this.updatingText){\n        //         this.updateText();\n        //     }\n        // });\n        // this.$on('blur', this.onBlur);\n        window.EventHub.$on('treeMounted', (tree) => {\n            this.trees.push(tree);\n        })\n    },\n    methods: {\n        afterValueChange() {\n            FieldBase.methods.afterValueChange.call(this)\n            if (!this.updatingText) {\n                this.updateText();\n            }\n        },\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            this.onBlur();\n        },\n        setTree() {\n            if (this.tree) {\n                this.tree.checkboxState = this.multiple;\n                this.tree.innerData = this.innerData;\n                this.tree.afterSelectionChange = (node) => {\n                    this.selection = node;\n                    if (!this.multiple) {\n                        this.setValue(node[this.valueField]);\n                        this.closePanel();\n                    }\n                };\n                this.tree.afterCheckChange = (nodes) => {\n                    if (this.multiple && !this.updatingText) {\n                        let vv = nodes.map(node => node[this.valueField]);\n                        this.setValue(vv);\n                    }\n                };\n                this.$nextTick(() => {\n                    this.$refs.panelRef.scrollTop = this.scrollTop;\n                });\n                treeHelper.cascadeCheck = this.tree.cascadeCheck;\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n        },\n        onBlur() {\n            if (this.inputingText == null) {\n                return;\n            }\n            let text = this.inputingText.trim();\n            if (!text) {\n                this.setValue(null);\n                return;\n            }\n            if (this.multiple) {\n                let vv = [];\n                let tt = text.split(this.separator);\n                for (let val of this.value) {\n                    let text = this.mappingTexts[val];\n                    if (tt.indexOf(text) != -1) {\n                        vv.push(val);\n                    }\n                }\n                if (this.value.length != vv.length) {\n                    this.setValue(vv);\n                }\n            } else {\n                if (this.inputingText != this.displayingText) {\n                    this.setValue(null);\n                }\n            }\n            this.inputingText = null;\n        },\n        doFilter(value) {\n            if (!this.tree) {\n                return;\n            }\n            if (value) {\n                if (this.multiple) {\n                    let tt = value.trim().split(this.separator);\n                    let val = tt[tt.length - 1];\n                    this.tree.doFilter(val);\n                } else {\n                    this.tree.doFilter(value);\n                }\n            } else {\n                this.tree.doFilter('');\n            }\n        },\n        openPanel() {\n            ComboBase.methods.openPanel.call(this);\n            this.$nextTick(() => {\n                this.setTree();\n                this.updateText();\n                if (this.editable) {\n                    this.doFilter('');\n                }\n            });\n        },\n        updateText() {\n            if (!this.tree) {\n                // return;\n            }\n            this.updatingText = true;\n            if (this.valueState == null) {\n                this.mappingTexts = {};\n                this.displayingText = null;\n                this.selection = null;\n                if (this.multiple) {\n                    treeHelper.uncheckAllNodes(this.innerData, () => { });\n                }\n            } else {\n                let mt = {};\n                let tt = [];\n                if (this.multiple) {\n                    treeHelper.uncheckAllNodes(this.innerData, () => { });\n                    for (let val of this.valueState) {\n                        let node = treeHelper.findNode(this.innerData, this.valueField, val);\n                        if (node) {\n                            treeHelper.checkNode(node, () => { });\n                        }\n                    }\n                    let vv = [];\n                    treeHelper.forNodes(this.innerData, (node) => {\n                        if (node.checkState == 'checked') {\n                            vv.push(node[this.valueField]);\n                            mt[node[this.valueField]] = node[this.textField];\n                            tt.push(node[this.textField]);\n                        }\n                    })\n                    this.valueState.filter(val => vv.indexOf(val) == -1).forEach(val => {\n                        vv.push(val);\n                        mt[val] = this.mappingTexts[val] || val;\n                        tt.push(mt[val]);\n                    });\n                    this.setValue(vv);\n                } else {\n                    let node = treeHelper.findNode(this.innerData, this.valueField, this.valueState);\n                    if (node) {\n                        mt[this.valueState] = node[this.textField];\n                        if (this.tree) {\n                            this.tree.selectionState = node;\n                        }\n                        if (this.cascadeText) {\n                            let texts = [];\n                            let currNode = node;\n                            while (currNode) {\n                                currNode.state = 'open';\n                                // this.$set(currNode, 'state', 'open');\n                                texts.push(currNode[this.textField]);\n                                currNode = currNode.parent;\n                            }\n                            mt[this.valueState] = texts.reverse().join('/');\n                        }\n                    } else {\n                        mt[this.valueState] = this.mappingTexts[this.valueState] || this.valueState;\n                    }\n                    tt.push(mt[this.valueState]);\n                }\n                this.mappingTexts = mt;\n                this.displayingText = tt.join(this.separator);\n            }\n            this.updatingText = false;\n        },\n        // renderPanel() {\n        //     if (this.panelClosed) {\n        //         return null;\n        //     }\n        //     const style = Object.assign({}, this.panelStyle, {\n        //         left: this.panelLeft + 'px',\n        //         top: this.panelTop + 'px'\n        //     })\n        //     return (\n        //         <div ref=\"panelRef\"\n        //             class=\"panel-body panel-body-noheader combo-panel combo-p f-row\"\n        //             style={style}>\n        //             {this.renderContent()}\n        //         </div>\n        //     )\n        // },\n        renderContent() {\n            return this.$slots['tree']()\n        }\n\n    }\n}","﻿import domHelper from '../base/DomHelper';\nimport ComboBase from '../base/ComboBase';\nimport { FieldBase } from '../base';\n\nexport default {\n    name: 'ComboGrid',\n    extends: ComboBase,\n    props: {\n        data: Array,\n        value: [String, Number, Array],\n        valueField: {\n            type: String,\n            default: 'id'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        limitToList: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            innerData: this.data,\n            mappingTexts: {},\n            displayingText: null,\n            inputingText: null,\n            datagridScrollTop: 0,\n            timer: null,\n            grids: []\n        }\n    },\n    computed: {\n        text() {\n            if (!this.focused) {\n                if (this.valueState != null && this.displayingText == null) {\n                    this.updateText();\n                }\n                this.textState = (this.textFormatter || this.defaultTextFormatter)(this.displayingText);\n            }\n            return this.textState;\n        },\n        datagrid: {\n            cache: false,\n            get() {\n                for (let i = 0; i < this.grids.length; i++) {\n                    const g = this.grids[i];\n                    if (domHelper.isChild(g.$el, this.$refs.panelRef)) {\n                        return g;\n                    }\n                }\n                // if (this.$children){\n                //     for(let i=0; i<this.$children.length; i++){\n                //         let c = this.$children[i];\n                //         if (c.$options.name == 'DataGrid'){\n                //             return c;\n                //         }\n                //     }\n                // }\n                return null;\n            }\n        }\n    },\n    watch: {\n        data() {\n            this.innerData = this.data;\n            if (this.datagrid) {\n                this.datagrid.setData(this.innerData);\n            }\n        }\n    },\n    mounted() {\n        domHelper.bind(this.$el, 'keydown', this.onKeyDown);\n        // this.$on('valueChange', () => {\n        //     this.updateText();\n        // });\n        // this.$on('blur', this.onBlur);\n        window.EventHub.$on('gridMounted', (grid) => {\n            this.grids.push(grid);\n        })\n    },\n    beforeUnmount() {\n        domHelper.unbind(this.$el, 'keydown', this.onKeyDown);\n    },\n    methods: {\n        afterValueChange() {\n            FieldBase.methods.afterValueChange.call(this)\n            this.updateText();\n        },\n        afterBlur() {\n            FieldBase.methods.afterBlur.call(this);\n            this.onBlur();\n        },\n        setGrid() {\n            if (this.datagrid) {\n                this.datagrid.selectionModeState = this.multiple ? 'multiple' : 'single';\n                this.datagrid.setData(this.innerData);\n                this.datagrid.afterSelectionChange = (selection) => {\n                    if (selection) {\n                        if (this.multiple) {\n                            let vv = selection.map(row => row[this.valueField]);\n                            this.setValue(vv);\n                        } else {\n                            this.setValue(selection[this.valueField]);\n                            this.closePanel();\n                        }\n                    } else {\n                        this.setValue(null);\n                    }\n                }\n            }\n        },\n        onInput(event) {\n            this.textState = event.target.value;\n            if (this.focused) {\n                this.inputingText = this.textState;\n                if (this.panelClosed) {\n                    this.openPanel();\n                }\n                clearTimeout(this.timer);\n                this.timer = setTimeout(() => {\n                    this.doFilter(this.textState);\n                }, this.delay);\n            }\n        },\n        onBlur() {\n            if (!this.panelClosed) {\n                this.fixValue();\n            }\n        },\n        fixValue() {\n            if (this.inputingText == null) {\n                return;\n            }\n            let text = this.inputingText.trim();\n            if (!text) {\n                this.setValue(null);\n                return;\n            }\n            if (this.multiple) {\n                let vv = [];\n                let tt = text.split(this.separator);\n                for (let val of this.value) {\n                    let text = this.mappingTexts[val];\n                    if (tt.indexOf(text) != -1) {\n                        vv.push(val);\n                    }\n                }\n                if (this.value.length != vv.length) {\n                    this.setValue(vv);\n                }\n            } else {\n                // if (this.inputingText != this.displayingText){\n                //     this.setValue(null);\n                // }\n                if (!this.limitToList) {\n                    this.setValue(this.inputingText);\n                }\n            }\n            this.inputingText = null;\n        },\n        onKeyDown(event) {\n            if (this.panelClosed && event.which == 40) {\n                this.openPanel();\n                event.preventDefault();\n                return;\n            }\n            if (!this.datagrid) {\n                return;\n            }\n            switch (event.which) {\n                case 40:\t// down\n                    this.datagrid.navRow(1);\n                    event.preventDefault();\n                    break;\n                case 38:\t// up\n                    this.datagrid.navRow(-1);\n                    event.preventDefault();\n                    break;\n                case 13:\t// enter\n                    if (this.datagrid && this.datagrid.highlightRow) {\n                        this.datagrid.doEnter();\n                        if (!this.multiple) {\n                            this.closePanel();\n                        }\n                        this.textState = this.displayingText;\n                    }\n                    event.preventDefault();\n                    break;\n                case 9:\t\t// tab\n                    this.fixValue();\n                    this.closePanel();\n                    break;\n                case 27:\t// escape\n                    this.closePanel();\n                    this.textState = this.displayingText;\n                    event.preventDefault();\n                    break;\n            }\n        },\n        doFilter(value) {\n            this.$emit('filterChange', {\n                filterValue: value\n            });\n        },\n        openPanel() {\n            ComboBase.methods.openPanel.call(this);\n            this.$nextTick(() => {\n                this.setGrid();\n                this.updateText();\n                this.$nextTick(() => {\n                    this.datagrid.$refs.view2.$refs.body.$refs.bodyRef.scrollTop = this.datagridScrollTop;\n                });\n                if (this.editable) {\n                    this.doFilter('');\n                }\n            });\n        },\n        closePanel() {\n            if (!this.panelClosed) {\n                this.datagridScrollTop = this.datagrid.$refs.view2.$refs.body.scrollTop();\n                ComboBase.methods.closePanel.call(this);\n            }\n        },\n        findRow(value) {\n            for (let row of this.data) {\n                if (row[this.valueField] == value) {\n                    return row;\n                }\n            }\n            return null;\n        },\n        updateText() {\n            if (!this.datagrid) {\n                // return;\n            }\n            if (this.valueState == null) {\n                this.mappingTexts = {};\n                this.displayingText = null;\n                if (this.datagrid) {\n                    this.datagrid.setSelectionValue(null);\n                }\n            } else {\n                let mt = {};\n                let tt = [];\n                let ss = [];\n                if (this.multiple) {\n                    for (let val of this.valueState) {\n                        let row = this.findRow(val);\n                        if (row) {\n                            mt[val] = row[this.textField];\n                            ss.push(row);\n                        } else {\n                            mt[val] = this.mappingTexts[val] || val;\n                        }\n                        tt.push(mt[val]);\n                    }\n                    if (this.datagrid) {\n                        this.datagrid.setSelectionValue(ss);\n                    }\n                } else {\n                    let row = this.findRow(this.valueState);\n                    if (row) {\n                        mt[this.valueState] = row[this.textField];\n                        ss.push(row);\n                    } else {\n                        mt[this.valueState] = this.mappingTexts[this.valueState] || this.valueState;\n                    }\n                    tt.push(mt[this.valueState]);\n                    if (this.datagrid) {\n                        this.datagrid.setSelectionValue(ss.length ? ss[0] : null);\n                    }\n                }\n                this.mappingTexts = mt;\n                this.displayingText = tt.join(this.separator);\n            }\n        },\n        // renderPanel() {\n        //     if (this.panelClosed) {\n        //         return null;\n        //     }\n        //     const style = Object.assign({}, this.panelStyle, {\n        //         left: this.panelLeft + 'px',\n        //         top: this.panelTop + 'px'\n        //     })\n        //     return (\n        //         <div ref=\"panelRef\"\n        //             class=\"panel-body panel-body-noheader combo-panel combo-p f-row\"\n        //             style={style}>\n        //             {this.renderContent()}\n        //         </div>\n        //     )\n        // },\n        renderContent() {\n            return this.$slots['grid']()\n        }\n    }\n}","﻿import DateBox from '../datebox/DateBox';\nimport Calendar from '../calendar/Calendar';\nimport TimeSpinner from '../timespinner/TimeSpinner';\nimport dateHelper from '../base/DateHelper';\n\nexport default {\n    name: 'DateTimeBox',\n    extends: DateBox,\n    components: {\n        Calendar,\n        TimeSpinner\n    },\n    props:{\n        format: {\n            type: String,\n            default: 'MM/dd/yyyy HH:mm'\n        },\n        timeFormat:{\n            type: String,\n            default: 'HH:mm'\n        }\n    },\n    data(){\n        return {\n            timeValue: dateHelper.formatDate(new Date(), this.timeFormat)\n        }\n    },\n    methods:{\n        onSelectionChange(event){\n            this.$emit('selectionChange', event);\n        },\n        doFilter(value) {\n            DateBox.methods.doFilter.call(this, value);\n            let date = (this.parser||this.defaultParser)(value);\n            if (!date){\n                date = this.valueState;\n            }\n            this.timeValue = dateHelper.formatDate(date, this.timeFormat);\n        },\n        selectOk(){\n            let date = this.$refs.calendar.selectionState;\n            if (!date){\n                date = new Date();\n            }\n            let time = dateHelper.parseDate(this.timeValue, this.timeFormat);\n            date.setHours(time.getHours());\n            date.setMinutes(time.getMinutes());\n            date.setSeconds(time.getSeconds());\n            this.setValue(date);\n            this.closePanel();\n        }\n    }\n}","﻿export class EventHub  {\r\n    constructor(){\r\n        this.events = new Map();\r\n    }\r\n\r\n    $on(event, handler) {\r\n        const handlers = this.events.get(event);\r\n        const added = handlers && handlers.push(handler);\r\n        if (!added) {\r\n            this.events.set(event, [handler]);\r\n        }\r\n    }\r\n    $off(event, handler) {\r\n        const handlers = this.events.get(event);\r\n        if (handlers) {\r\n            handlers.splice(handlers.indexOf(handler) >>> 0, 1);\r\n        }\r\n    }\r\n    $emit(event, params) {\r\n        (this.events.get(event) || []).slice().map((handler) => { handler(params); });\r\n        (this.events.get('*') || []).slice().map((handler) => { handler(event, params); });\r\n    }\r\n}","﻿import ValidateRules from './components/form/rules';\nimport Locale from './components/locale';\nimport { Panel } from './components/panel/index'\nimport { Accordion, AccordionPanel } from './components/accordion'\nimport { LinkButton, ButtonGroup } from './components/linkbutton';\nimport { FileButton } from './components/filebutton';\nimport { Pagination } from './components/pagination';\nimport { DataList } from './components/datalist';\nimport { VirtualScroll, Addon, Label } from './components/base';\nimport { GridBase, GridColumn, GridColumnGroup, GridHeaderRow } from './components/gridbase';\nimport { DataGrid } from './components/datagrid';\nimport { TextBox } from './components/textbox';\nimport { NumberBox } from './components/numberbox';\nimport { ComboBox } from './components/combobox';\nimport { SwitchButton } from './components/switchbutton';\nimport { CheckBox } from './components/checkbox';\nimport { RadioButton } from './components/radiobutton';\nimport { Tree } from './components/tree';\nimport { Tabs, TabPanel } from './components/tabs';\nimport { TimeSpinner } from './components/timespinner';\nimport { TimePicker } from './components/timepicker';\nimport { DateTimeSpinner } from './components/datetimespinner';\nimport { Layout, LayoutPanel } from './components/layout';\nimport { Menu, MenuItem, SubMenu, MenuSep } from './components/menu';\nimport { MenuButton } from './components/menubutton';\nimport { SplitButton } from './components/splitbutton';\nimport { Tooltip } from './components/tooltip';\nimport { PasswordBox } from './components/passwordbox';\nimport { Calendar } from './components/calendar';\nimport { DateBox } from './components/datebox';\nimport { Draggable, DraggableProxy } from './components/draggable';\nimport { Droppable } from './components/droppable';\nimport { Resizable } from './components/resizable';\nimport { Dialog } from './components/dialog';\nimport { Drawer } from './components/drawer';\nimport { ProgressBar } from './components/progressbar';\nimport { TreeGrid } from './components/treegrid';\nimport { Slider } from './components/slider';\nimport { TagBox } from './components/tagbox';\nimport { SearchBox } from './components/searchbox';\nimport { Form, FormField } from './components/form';\nimport { SideMenu } from './components/sidemenu';\nimport { Messager, MessagerDialog } from './components/messager';\nimport { ComboTree } from './components/combotree';\nimport { ComboGrid } from './components/combogrid';\nimport { DateTimeBox } from './components/datetimebox';\nimport { EventHub } from './components/base/EventHub';\n\nconst components = [\n    VirtualScroll,\n    Panel,\n    Dialog,\n    Drawer,\n    Accordion,\n    AccordionPanel,\n    Tabs,\n    TabPanel,\n    Layout,\n    LayoutPanel,\n    LinkButton,\n    ButtonGroup,\n    FileButton,\n    MenuButton,\n    SplitButton,\n    Pagination,\n    DataList,\n    GridBase,\n    GridColumn,\n    GridColumnGroup,\n    GridHeaderRow,\n    DataGrid,\n    TreeGrid,\n    TextBox,\n    PasswordBox,\n    Addon,\n    Label,\n    NumberBox,\n    TimeSpinner,\n    TimePicker,\n    DateTimeSpinner,\n    ComboBox,\n    ComboTree,\n    ComboGrid,\n    SwitchButton,\n    CheckBox,\n    RadioButton,\n    Tree,\n    Menu,\n    MenuItem,\n    SubMenu,\n    MenuSep,\n    Calendar,\n    DateBox,\n    DateTimeBox,\n    DraggableProxy,\n    ProgressBar,\n    Slider,\n    TagBox,\n    SearchBox,\n    Form,\n    FormField,\n    SideMenu,\n    MessagerDialog\n];\n\nconst directives = [\n    Tooltip,\n    Draggable,\n    Droppable,\n    Resizable\n];\n\nconst install = function (Vue, opts = {}) {\n    window.Vue = Vue;\n    Locale.use(opts.locale);\n    Object.assign(window.ValidateRules, opts.rules || {});\n    components.forEach(component => {\n        Vue.component(component.name, component);\n    });\n    directives.forEach(directive => {\n        Vue.directive(directive.name, directive);\n    });\n    window.$messager = new Messager();\n    Vue.config.globalProperties.$messager = window.$messager;\n    // Vue.prototype.$messager = new Messager();\n    window.EventHub = new EventHub();\n    // window.EventHub = new Vue();\n}\n\nwindow.Locale = Locale;\nwindow.ValidateRules = ValidateRules;\nif (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n}\n\nconst EasyUI = {\n    install\n};\n\nexport * from './components/base';\nexport * from './components/panel/index';\nexport * from './components/accordion';\nexport * from './components/linkbutton';\nexport * from './components/filebutton';\nexport * from './components/datalist';\nexport * from './components/gridbase';\nexport * from './components/pagination';\nexport * from './components/textbox';\nexport * from './components/numberbox';\nexport * from './components/tree';\nexport * from './components/tooltip';\nexport * from './components/calendar';\nexport * from './components/checkbox';\nexport * from './components/combobox';\nexport * from './components/combotree';\nexport * from './components/combogrid';\nexport * from './components/switchbutton';\nexport * from './components/radiobutton';\nexport * from './components/tabs';\nexport * from './components/timespinner';\nexport * from './components/timepicker';\nexport * from './components/datetimespinner';\nexport * from './components/layout';\nexport * from './components/menu';\nexport * from './components/menubutton';\nexport * from './components/splitbutton';\nexport * from './components/passwordbox';\nexport * from './components/datebox';\nexport * from './components/datetimebox';\nexport * from './components/draggable';\nexport * from './components/droppable';\nexport * from './components/resizable';\nexport * from './components/dialog';\nexport * from './components/drawer';\nexport * from './components/progressbar';\nexport * from './components/datagrid';\nexport * from './components/treegrid';\nexport * from './components/slider';\nexport * from './components/tagbox';\nexport * from './components/searchbox';\nexport * from './components/form';\nexport * from './components/sidemenu';\nexport * from './components/messager';\n\nexport default EasyUI;\n"],"names":["value","param","len","path","defValue","pp","i","key","l","event","touch","element","margin","el","width","style","height","selector","matchesSelector","parent","p","rect","left","top","offsetParent","offset","parentOffset","de","body","v","endchar","className","container","item","containerOffset","itemOffset","containerHeight","itemHeight","offsetTop","callback","heightStyle","onEnd","handler","fn","e","guid","binding","name","directives","SlideUpDown","props","title","String","iconCls","border","type","Boolean","default","animate","closed","collapsed","collapsible","closable","showHeader","showFooter","expandIconCls","collapseIconCls","closeIconCls","panelCls","panelStyle","Object","headerCls","headerStyle","bodyCls","bodyStyle","footerCls","footerStyle","data","collapsedState","closedState","animateState","collapseToShrinkBody","computed","hasHeader","$slots","hasFooter","panelClasses","headerClasses","bodyClasses","footerClasses","collapsibleClasses","closableClasses","watch","methods","clickCollapsibleTool","clickCloseTool","panelHeader","headerTitle","cls","push","_createVNode","headerIcon","panelTools","panelBody","_withDirectives","_resolveDirective","disabled","panelFooter","render","multiple","selectedIndex","Number","Array","panels","accordionClasses","initPanels","indexes","filter","index","indexOf","forEach","unselect","select","length","isLast","last","initSelectedPanel","selectedState","getPanels","$nextTick","addPanel","panel","slice","removePanel","splice","getPanel","getSelectedPanels","getSelectedPanel","getPanelIndex","getSelectedIndex","extends","Panel","selected","full","mounted","$parent","$el","addEventListener","clickHandler","beforeUnmount","removeEventListener","$emit","window","EventHub","domHelper","closest","target","stopPropagation","defineComponent","toggle","outline","plain","text","iconAlign","size","href","btnCls","btnStyle","focused","isEmpty","isDisabled","btnIconCls","innerCls","$attrs","class","btnLeftCls","$options","addButton","removeButton","focus","$refs","btnRef","blur","onClick","preventDefault","afterClick","renderInner","content","_Fragment","renderOthers","assign","selectionMode","buttons","initButtons","button","bb","btn","b","FileButtonFileId","LinkButton","accept","capture","url","method","autoUpload","withCredentials","fileId","files","onFileSelect","upload","xhr","XMLHttpRequest","formData","FormData","file","append","lengthComputable","total","position","loaded","percent","Math","ceil","onreadystatechange","readyState","status","open","send","clear","fileRef","nativeElement","loading","pageNumberState","pageCount","selectPage","refreshPage","pageList","pageSize","pageSizeState","onChange","parseInt","map","page","components","pages","begin","floor","links","end","pageNumber","onBlur","onKeyDown","keyCode","beforePageText","$event","_vModelText","afterPageInfo","PaginationButton","PaginationList","PaginationLink","PaginationManual","showPageList","showPageInfo","showPageRefresh","Locale","t","afterPageText","displayMsg","layout","lastState","pagination","pageInfo","info","replace","min","created","_adjustPage","_isButton","state","refresh","source","isMatch","row","rules","rule","matched","column","cell","step","field","start","lazy","rowHeight","maxDivHeight","maxVisibleHeight","scrollPosition","innerData","items","waitingPage","fetchingPage","startIndex","deltaTopHeight","topHeights","bottomHeights","isUpdating","isNewFetching","totalState","scrollPositionState","setData","setTimeout","scrolling","scrollState","scrollTop","undefined","bodyRef","relativeScrollTop","scrollbarWidth","outerWidth","contentRef","populate","onScroll","scrollLeft","relativeTop","loadPage","fetchPage","bodyHeight","outerHeight","bodyOffset","bottom","topHeight","bottomHeight","splitHeights","spos","lastCount","count","leftHeight","heights","concat","gotoPage","h","_isSlot","s","prototype","toString","call","_isVNode","ListBase","VirtualScroll","itemStyle","itemCls","hoverCls","selectedCls","innerClasses","virtualScroll","innerStyle","overflow","virtualItemStyle","vrows","innerRef","getItemClass","cc","highlightRow","isSelected","join","getRowIndex","vscrollRef","navRow","rows","querySelector","scrollTo","highlightFirstRow","scrollToSelectedRow","renderPagination","pagePosition","ref","Pagination","onPageChange","renderLoading","loadMsg","renderEmpty","renderList","rowIndex","onMouseenter","onMouseleave","onRowClick","renderVirtualList","_slot","onVirtualPageChange","for","align","labelClasses","labelStyle","textAlign","att","document","createAttribute","setAttributeNode","template","invalid","validateOnCreate","validateOnBlur","validateOnChange","invalidState","form","fieldName","fieldAdd","fieldRemove","renderField","afterFocus","afterBlur","fieldBlur","afterValueChange","fieldChange","setValid","valid","FieldBase","modelValue","readonly","editable","placeholder","multiline","tabindex","inputCls","inputStyle","inputId","textFormatter","Function","valueState","textState","baseClasses","inputClasses","addonClasses","addonIconClasses","setValue","defaultTextFormatter","previousValue","currentValue","onInput","inputRef","getSelectionStart","getSelectionRange","selectionStart","selectionEnd","setSelectionRange","createTextRange","range","collapse","moveEnd","moveStart","renderInput","id","onFocus","_mergeProps","renderAddon","InputBase","hasDownArrow","arrowIconCls","arrowAlign","panelAlign","separator","delay","panelClosed","panelLeft","panelTop","arrowClasses","bind","onDocumentClick","onDocumentMouseWheel","panelRef","appendChild","unbind","isChild","togglePanel","closePanel","openPanel","alignPanel","view","getViewport","pos","hwidth","pwidth","hheight","pheight","getScrollLeft","getScrollTop","minWidth","renderArrow","renderPanel","renderContent","format","selections","formatTokens","token","dateTokens","date","parser","year","formatToken","dateToken","f","formatN","formatter","match","node","checkState","nodes","changed","pnode","cnode","checkedCount","uncheckedCount","fromNodes","n","rowspan","colspan","hidden","sortable","editRules","editMessages","order","frozen","halign","sorter","cellCss","expander","filterable","filterOperators","grid","widthState","frozenState","currOrder","filterOperator","filterValue","isFiltering","doFilter","initColumns","toStyleValue","addColumn","removeColumn","removeFilterRule","addFilterRule","op","filterDelay","columns","timer","clearTimeout","initHeaderHeight","addRow","removeRow","GridColumn","ComboBase","DataList","valueField","textField","groupField","limitToList","mappingTexts","datalistScrollTop","inputingText","displayingText","lastFilterValue","selection","updateText","ftext","setText","initTextMapping","defaultFilter","q","toLowerCase","trim","which","datalist","doEnter","fixValue","clearSelections","vv","used","tt","split","val","onSelectionChange","selectionValue","updateSelection","mt","findItem","finder","oldSelection","listslots","scope","empty","ComboBox","display","initData","getFilterRule","GridFilterButton","input","isOnLeft","filterBtnPosition","isOnRight","leftButton","rightButton","GridFilterCell","methods1","col","opts","dir","handles","resizeData","GridHeaderCell","GridFilterRow","Resizable","columnGroup","paddingWidth","heightState","scrollLeftState","hoverColumn","dragScope","filterOnTop","filterPosition","filterOnBottom","headerRef","onCellClick","originalEvent","getResizableOpts","columnResizing","resizing","onColumnResizing","resizeStop","onColumnResizeStop","getDraggableOpts","columnMoving","revert","deltaX","deltaY","edge","proxy","dragStart","onColumnDragStart","getDroppableOpts","dragOver","onColumnDragOver","dragLeave","onColumnDragLeave","drop","onColumnDrop","resizeColumn","fromIndex","allColumns","viewOffset","viewRef","toIndex","diff","point","splitStyle","currDroppable","moveColumn","renderGroupCells","renderRowCells","_resolveComponent","scrollTopState","GridFooterCell","footerRef","GridHeader","GridBody","GridFooter","viewIndex","footerRows","headerPaddingWidth","viewCls","getHeaderPaddingWidth","headerHeight","header","onBodyScroll","footer","onResize","GridHeaderRow","GridView","striped","rowCss","frozenWidth","frozenAlign","sorts","multiSort","editMode","tipOptions","clickToEdit","dblclickToEdit","footerData","filterRules","cellSpan","leftGroup","rightGroup","centerGroup","leftColumns","rightColumns","centerColumns","columnRefs","groupRefs","sortsState","editingItem","leftFrozenWidth","rightFrozenWidth","initFilterRules","initColumnSort","$on","tab","hasDestroyed","changeColumns","addColumnGroup","group","removeColumnGroup","columnTimer","newState","g","getColumnLayout","c","frozenColumns","view1","view2","view3","h1","h2","h3","max","r","findColumn","aa","getColumnCount","colIndex","getColumnIndex","a","addSort","nextOrder","sort","fromField","toField","leftCount","centerCount","findIndex","fromCol","from","to","isEditing","idField","beginEdit","rowEl","endEdit","selectRow","selectCell","originalValue","cancelEdit","error","onValidate","errors","errCount","isEditable","TextBox","validate","_cell","gridBody","GridBodyCell","DataGridRowDetail","DataGridRowGroup","showExpandIcon","groupTitleWidth","groupTitleRef","titleLeft","expanderWidth","onRowDblClick","onRowContextMenu","cellEl","currentTarget","doEdit","onCellDblClick","onCellContextMenu","onCellKeyDown","onGroupExpanderClick","toggleGroup","onDetailExpanderClick","toggleRow","_rowIndex","getAbsoluteIndex","getCss","css","cssValue","getRowClass","getRowStyle","getCellClass","getCellStyle","getCellSpan","hasCellSpan","span","renderGroupRow","isGroupRow","renderDefaultRow","isHighlighted","isRowExpanded","highlightCell","renderDetailRow","DataGridTable","marginTop","currRows","isVirtualScroll","vscroll","onVirtualScroll","onVirtualPageUpdate","updateFrozenView","DataGridBody","onHeaderCellClick","GridBase","DataGridView","GridEmpty","aggregate","groupData","expandedRows","frozenRows","setGroupData","isGrouped","filteredData","makeGroup","makeGroupedRows","setPageData","dataRows","getIndex","currIndex","getGroup","groupedRows","lastRows","unshift","tr","sortData","sortFunc","r1","r2","_groupRow","groups","collapseGroup","expandGroup","getExpandedIndex","collapseRow","expandRow","pageLayout","pageLinks","datagrid","emptyMsg","reversed","spinners","spinAlign","onClickUp","doSpinUp","doSpinDown","onClickDown","renderHorizontal","upcls","downcls","renderVertical","renderDefault","SpinnerBase","increment","precision","decimalSeparator","groupSeparator","prefix","suffix","onKeyPress","metaKey","ctrlKey","fromCharCode","parseFloat","toFixed","s1","s2","dpos","substring","test","RegExp","isNaN","onText","offText","handleText","buttonClasses","model","prop","checked","values","previousChecked","initChecked","checkClasses","setChecked","isChecked","onClickButton","updateValues","initValue","radioClasses","tree","messages","labelPosition","labelAlign","labelWidth","floatingLabel","errorType","tooltipPosition","fields","validateField","fieldFocus","vtotal","vcount","getErrors","validity","setMessage","message","doValidate","vtype","vparam","ValidateRules","validator","result","Promise","then","parts","exec","paramStr","eval","keys","hasError","getError","getValue","isFocused","ff","tooltipIdIndex","HTMLElement","component","propsData","store","tooltipCls","tooltipStyle","zIndex","trackMouse","trackMouseX","trackMouseY","valign","showDelay","hideDelay","tooltipShow","tooltipHide","contentState","targetWidth","targetHeight","tipWidth","tipHeight","showTimer","hideTimer","setClosed","tooltipRef","tooltipClasses","tooltipStyles","show","hide","onMouseEnter","onMouseLeave","getPosition","reposition","arrowLeft","arrowOuterRef","arrowInnerRef","bc","borderColor","backColor","backgroundColor","clearTimeouts","getOptions","showEvent","hideEvent","bindEvents","eventName","_activeHandler","_deactiveHandler","TooltipIdIndex","_tip","_opts","Tip","createVNode","TooltipContent","updated","Form","Tooltip","autoSizeInput","getInput","getComputedStyle","tmp","createElement","fontFamily","fontSize","fontWeight","whiteSpace","innerHTML","removeChild","editor","handle","x1","y1","x2","y2","dragData","dropObj","p2","TreeNodeTitle","TreeNodeEditor","TreeNodeIcon","Draggable","Droppable","depth","nodeCls","innerNode","dndCls","indentWidth","isLeaf","nodeClasses","highlightNode","hitClasses","isExpanded","isCollapsed","iconClasses","checkboxClasses","selectionState","children","dnd","onDragStart","dragEnd","onDragEnd","dropDisabled","onDragOver","onDragLeave","onDrop","obj","dragCls","treeHelper","forNodes","pageY","moveNode","onClickNode","selectNode","onDblClickNode","onCheckNode","uncheckNode","checkNode","onNodeContextMenu","checkboxState","TreeNode","selectLeafOnly","checkbox","cascadeCheck","dndStyle","filterIncludingChild","qq","$vue","afterSelectionChange","afterCheckChange","getCheckedNodes","uncheckAllNodes","adjustCheck","showNode","hideNode","fchildren","pchildren","_createTextVNode","icon","isHorizontal","tabWidth","tabHeight","TabPanelHeader","headerWidth","tabPosition","narrow","justified","scrollable","scrollIncrement","selectedHis","scrollDistance","maxScrollDistance","containerClasses","tabsClasses","isScrollable","tabsStyle","isScrollerVisible","usedPanels","isUsed","removeHis","setMaxScrollDistance","tabsRef","scrollWidth","wrapWidth","tabsWrapRef","offsetWidth","onClickTab","onCloseTab","close","isFirst","setScrollers","pop","addHis","li","right","distance","scrollBy","backHis","resize","tabs","highlight","highlightState","highlighting","highlightRange","onClickMe","defaultFormatter","dateHelper","formatDate","defaultParser","parseD","parseDate","doSpin","down","s3","Date","hour24","hourDistance","radius","getData","elRef","getHour24","itemValue","itemClasses","is24","angular","PI","x","sin","y","cos","transform","clockStyle","marginLeft","handStyle","onItemClick","ampm","TimeClock","selectingType","selectingAmpm","hour","minute","hm","getHourStr","getMinuteStr","onAmpmClick","onClockSelect","TimePanel","closeText","okText","selectingValue","onOk","onTimeChange","TimeSpinner","region","visible","panelStyles","paddingTop","paddingBottom","collapsedSize","onPanelClick","expand","CollapsedPanel","layoutCls","layoutStyle","paddings","paddingLeft","paddingRight","layoutClasses","layoutStyles","padding","updatePaddings","getPaddingValue","float","cp","isExpanding","collapseTitle","resizeOpts","setResizeOpts","onSlideEnd","borderWidth","icons","north","south","east","west","MenuZIndex","menuCls","menuStyle","menuWidth","inline","noline","duration","subItems","isDisplaying","menuWidthState","containerStyle","menubutton","containerRef","setMenu","addItem","removeItem","afterItemClick","onMouseOver","onMouseOut","delayHide","subMenu","unhighlight","showAt","alignTo","showContextMenu","alignContextMenu","menuHeight","menu","menuClasses","isActived","menuStyles","alignMenu","onClickItem","menuAlign","showMenu","MenuButton","passwordChar","checkInterval","lastDelay","showEye","eyeAlign","revealed","revealedState","lastTimer","cursorPos","eyeClasses","eyeIconClasses","processing","convert","originalText","proc","all","pchar","weeks","months","showWeek","weekNumberHeader","firstDay","getFullYear","month","getMonth","yearState","monthState","highlightDay","highlightMonth","headerData","bodyData","saIndex","suIndex","getWeeks","getHeaderData","moveTo","onDayClick","day","isValid","selectDate","onMonthClick","monthName","isToday","now","m","d","getDate","isDiff","date1","date2","toArray","toDate","calcWeekNumber","week","getWeekNumber","nextYear","prevYear","nextMonth","prevMonth","checkDate","getTime","setDate","getDay","time","setMonth","round","data1","data2","dates","lastDay","memoDay","shift","firstWeek","firstDate","lastWeek","lastDate","highlightDate","navDate","renderDays","dayIndex","renderMenu","Calendar","currentText","setFullYear","calendar","selectToday","proxyCls","proxyStyle","reverting","proxyClasses","proxyStyles","proxyRef","onTransitionEnd","DialogZIndex","borderType","dialogCls","dialogStyle","modal","draggable","resizable","draggableOptions","resizableOptions","dragOpts","maskEl","setDragOpts","initDialog","closeMask","openMask","displaying","addClass","moveToTop","hcenter","vcenter","vwidth","vheight","center","Dialog","drawerCls","drawerStyle","maskClosable","isChanging","onClickMask","showValue","barCls","barStyle","barClasses","barStyles","TreeGridTitle","prow","isTreeField","treeField","onCheckRow","uncheckRow","checkRow","TreeGridRow","TreeGridChildren","TreeGridBody","TreeGridView","getCheckedRows","uncheckAllRows","_sort","mode","showTip","sliderClasses","value1","value2","displayingRule","reverse","dragOpts1","axis","cursor","drag","onDragHandle","dragOpts2","getPosStyle","value2pos","getRuleValueStyle","pos2value","sliderRef","setPos","second","abs","v1","v2","applyDrag","doDown","MyEvent","sinnerRef","pageX","tagCss","getTagClass","getTagStyle","removeTag","getWidth","renderLabels","category","buttonAlign","buttonIconCls","hasMenu","menuBtnText","menuBtnIcon","categoryState","mbClasses","mb","initMenu","doSearch","setCategory","FormFieldIdIndex","label","labelFor","fieldClasses","renderLabel","labelCls","renderError","errorStyle","inputDisabled","tip","sidemenu","Accordion","AccordionPanel","Tree","SideMenuIcon","onPanelSelect","accordion","onPanelUnselect","onNodeClick","SideMenuItems","floatMenuWidth","floatMenuPosition","tipClosed","selectItem","getTipOpts","messagerType","msg","inputValue","messagerIcon","dialog","closeDialog","resultValue","MessagerContent","messagerIdIndex","closeMe","minHeight","MessagerIdIndex","Messager","constructor","ok","cancel","dialogs","alert","options","openDialog","confirm","prompt","setPositions","documentElement","dlg","timeout","createDialog","vn","MessagerDialog","onClose","closeAll","cascadeText","updatingText","trees","cache","get","setTree","findNode","texts","currNode","datagridScrollTop","grids","setGrid","selectionModeState","findRow","setSelectionValue","ss","DateBox","timeFormat","timeValue","selectOk","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","handlers","params","Vue","directive"],"mappings":"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"}